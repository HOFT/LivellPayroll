//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LivellPayRoll {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LivellPayRollDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LivellPayRollDataSet : global::System.Data.DataSet {
        
        private CompanyDataTable tableCompany;
        
        private EmployeeDataTable tableEmployee;
        
        private T100DataTable tableT100;
        
        private T102DataTable tableT102;
        
        private T105DataTable tableT105;
        
        private T201DataTable tableT201;
        
        private TimeSheetDataTable tableTimeSheet;
        
        private AccrualTimeJournalDataTable tableAccrualTimeJournal;
        
        private PS_ItemValueDataTable tablePS_ItemValue;
        
        private DS_ItemValueDataTable tableDS_ItemValue;
        
        private Null_ItemValueDataTable tableNull_ItemValue;
        
        private global::System.Data.DataRelation _relationFK_dbo_Employee_dbo_Company_CompanyId;
        
        private global::System.Data.DataRelation _relationFK_dbo_T100_dbo_Company_CompanyId;
        
        private global::System.Data.DataRelation _relationFK_dbo_T102_dbo_Company_CompanyId;
        
        private global::System.Data.DataRelation _relationFK_dbo_T105_dbo_Company_CompanyId;
        
        private global::System.Data.DataRelation _relationFK_dbo_T105_dbo_Employee_EmployeeId;
        
        private global::System.Data.DataRelation _relationFK_dbo_T201_dbo_Company_CompanyId;
        
        private global::System.Data.DataRelation _relationFK_dbo_TimeSheet_dbo_Company_CompanyId;
        
        private global::System.Data.DataRelation _relationFK_dbo_TimeSheet_dbo_Employee_EmployeeId;
        
        private global::System.Data.DataRelation _relationFK_dbo_AccrualTimeJournal_dbo_Employee_EmployeeId;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LivellPayRollDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LivellPayRollDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Company"] != null)) {
                    base.Tables.Add(new CompanyDataTable(ds.Tables["Company"]));
                }
                if ((ds.Tables["Employee"] != null)) {
                    base.Tables.Add(new EmployeeDataTable(ds.Tables["Employee"]));
                }
                if ((ds.Tables["T100"] != null)) {
                    base.Tables.Add(new T100DataTable(ds.Tables["T100"]));
                }
                if ((ds.Tables["T102"] != null)) {
                    base.Tables.Add(new T102DataTable(ds.Tables["T102"]));
                }
                if ((ds.Tables["T105"] != null)) {
                    base.Tables.Add(new T105DataTable(ds.Tables["T105"]));
                }
                if ((ds.Tables["T201"] != null)) {
                    base.Tables.Add(new T201DataTable(ds.Tables["T201"]));
                }
                if ((ds.Tables["TimeSheet"] != null)) {
                    base.Tables.Add(new TimeSheetDataTable(ds.Tables["TimeSheet"]));
                }
                if ((ds.Tables["AccrualTimeJournal"] != null)) {
                    base.Tables.Add(new AccrualTimeJournalDataTable(ds.Tables["AccrualTimeJournal"]));
                }
                if ((ds.Tables["PS_ItemValue"] != null)) {
                    base.Tables.Add(new PS_ItemValueDataTable(ds.Tables["PS_ItemValue"]));
                }
                if ((ds.Tables["DS_ItemValue"] != null)) {
                    base.Tables.Add(new DS_ItemValueDataTable(ds.Tables["DS_ItemValue"]));
                }
                if ((ds.Tables["Null_ItemValue"] != null)) {
                    base.Tables.Add(new Null_ItemValueDataTable(ds.Tables["Null_ItemValue"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CompanyDataTable Company {
            get {
                return this.tableCompany;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmployeeDataTable Employee {
            get {
                return this.tableEmployee;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T100DataTable T100 {
            get {
                return this.tableT100;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T102DataTable T102 {
            get {
                return this.tableT102;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T105DataTable T105 {
            get {
                return this.tableT105;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T201DataTable T201 {
            get {
                return this.tableT201;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TimeSheetDataTable TimeSheet {
            get {
                return this.tableTimeSheet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccrualTimeJournalDataTable AccrualTimeJournal {
            get {
                return this.tableAccrualTimeJournal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PS_ItemValueDataTable PS_ItemValue {
            get {
                return this.tablePS_ItemValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DS_ItemValueDataTable DS_ItemValue {
            get {
                return this.tableDS_ItemValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Null_ItemValueDataTable Null_ItemValue {
            get {
                return this.tableNull_ItemValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LivellPayRollDataSet cln = ((LivellPayRollDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Company"] != null)) {
                    base.Tables.Add(new CompanyDataTable(ds.Tables["Company"]));
                }
                if ((ds.Tables["Employee"] != null)) {
                    base.Tables.Add(new EmployeeDataTable(ds.Tables["Employee"]));
                }
                if ((ds.Tables["T100"] != null)) {
                    base.Tables.Add(new T100DataTable(ds.Tables["T100"]));
                }
                if ((ds.Tables["T102"] != null)) {
                    base.Tables.Add(new T102DataTable(ds.Tables["T102"]));
                }
                if ((ds.Tables["T105"] != null)) {
                    base.Tables.Add(new T105DataTable(ds.Tables["T105"]));
                }
                if ((ds.Tables["T201"] != null)) {
                    base.Tables.Add(new T201DataTable(ds.Tables["T201"]));
                }
                if ((ds.Tables["TimeSheet"] != null)) {
                    base.Tables.Add(new TimeSheetDataTable(ds.Tables["TimeSheet"]));
                }
                if ((ds.Tables["AccrualTimeJournal"] != null)) {
                    base.Tables.Add(new AccrualTimeJournalDataTable(ds.Tables["AccrualTimeJournal"]));
                }
                if ((ds.Tables["PS_ItemValue"] != null)) {
                    base.Tables.Add(new PS_ItemValueDataTable(ds.Tables["PS_ItemValue"]));
                }
                if ((ds.Tables["DS_ItemValue"] != null)) {
                    base.Tables.Add(new DS_ItemValueDataTable(ds.Tables["DS_ItemValue"]));
                }
                if ((ds.Tables["Null_ItemValue"] != null)) {
                    base.Tables.Add(new Null_ItemValueDataTable(ds.Tables["Null_ItemValue"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCompany = ((CompanyDataTable)(base.Tables["Company"]));
            if ((initTable == true)) {
                if ((this.tableCompany != null)) {
                    this.tableCompany.InitVars();
                }
            }
            this.tableEmployee = ((EmployeeDataTable)(base.Tables["Employee"]));
            if ((initTable == true)) {
                if ((this.tableEmployee != null)) {
                    this.tableEmployee.InitVars();
                }
            }
            this.tableT100 = ((T100DataTable)(base.Tables["T100"]));
            if ((initTable == true)) {
                if ((this.tableT100 != null)) {
                    this.tableT100.InitVars();
                }
            }
            this.tableT102 = ((T102DataTable)(base.Tables["T102"]));
            if ((initTable == true)) {
                if ((this.tableT102 != null)) {
                    this.tableT102.InitVars();
                }
            }
            this.tableT105 = ((T105DataTable)(base.Tables["T105"]));
            if ((initTable == true)) {
                if ((this.tableT105 != null)) {
                    this.tableT105.InitVars();
                }
            }
            this.tableT201 = ((T201DataTable)(base.Tables["T201"]));
            if ((initTable == true)) {
                if ((this.tableT201 != null)) {
                    this.tableT201.InitVars();
                }
            }
            this.tableTimeSheet = ((TimeSheetDataTable)(base.Tables["TimeSheet"]));
            if ((initTable == true)) {
                if ((this.tableTimeSheet != null)) {
                    this.tableTimeSheet.InitVars();
                }
            }
            this.tableAccrualTimeJournal = ((AccrualTimeJournalDataTable)(base.Tables["AccrualTimeJournal"]));
            if ((initTable == true)) {
                if ((this.tableAccrualTimeJournal != null)) {
                    this.tableAccrualTimeJournal.InitVars();
                }
            }
            this.tablePS_ItemValue = ((PS_ItemValueDataTable)(base.Tables["PS_ItemValue"]));
            if ((initTable == true)) {
                if ((this.tablePS_ItemValue != null)) {
                    this.tablePS_ItemValue.InitVars();
                }
            }
            this.tableDS_ItemValue = ((DS_ItemValueDataTable)(base.Tables["DS_ItemValue"]));
            if ((initTable == true)) {
                if ((this.tableDS_ItemValue != null)) {
                    this.tableDS_ItemValue.InitVars();
                }
            }
            this.tableNull_ItemValue = ((Null_ItemValueDataTable)(base.Tables["Null_ItemValue"]));
            if ((initTable == true)) {
                if ((this.tableNull_ItemValue != null)) {
                    this.tableNull_ItemValue.InitVars();
                }
            }
            this._relationFK_dbo_Employee_dbo_Company_CompanyId = this.Relations["FK_dbo.Employee_dbo.Company_CompanyId"];
            this._relationFK_dbo_T100_dbo_Company_CompanyId = this.Relations["FK_dbo.T100_dbo.Company_CompanyId"];
            this._relationFK_dbo_T102_dbo_Company_CompanyId = this.Relations["FK_dbo.T102_dbo.Company_CompanyId"];
            this._relationFK_dbo_T105_dbo_Company_CompanyId = this.Relations["FK_dbo.T105_dbo.Company_CompanyId"];
            this._relationFK_dbo_T105_dbo_Employee_EmployeeId = this.Relations["FK_dbo.T105_dbo.Employee_EmployeeId"];
            this._relationFK_dbo_T201_dbo_Company_CompanyId = this.Relations["FK_dbo.T201_dbo.Company_CompanyId"];
            this._relationFK_dbo_TimeSheet_dbo_Company_CompanyId = this.Relations["FK_dbo.TimeSheet_dbo.Company_CompanyId"];
            this._relationFK_dbo_TimeSheet_dbo_Employee_EmployeeId = this.Relations["FK_dbo.TimeSheet_dbo.Employee_EmployeeId"];
            this._relationFK_dbo_AccrualTimeJournal_dbo_Employee_EmployeeId = this.Relations["FK_dbo.AccrualTimeJournal_dbo.Employee_EmployeeId"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LivellPayRollDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LivellPayRollDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCompany = new CompanyDataTable();
            base.Tables.Add(this.tableCompany);
            this.tableEmployee = new EmployeeDataTable();
            base.Tables.Add(this.tableEmployee);
            this.tableT100 = new T100DataTable();
            base.Tables.Add(this.tableT100);
            this.tableT102 = new T102DataTable();
            base.Tables.Add(this.tableT102);
            this.tableT105 = new T105DataTable();
            base.Tables.Add(this.tableT105);
            this.tableT201 = new T201DataTable();
            base.Tables.Add(this.tableT201);
            this.tableTimeSheet = new TimeSheetDataTable();
            base.Tables.Add(this.tableTimeSheet);
            this.tableAccrualTimeJournal = new AccrualTimeJournalDataTable();
            base.Tables.Add(this.tableAccrualTimeJournal);
            this.tablePS_ItemValue = new PS_ItemValueDataTable();
            base.Tables.Add(this.tablePS_ItemValue);
            this.tableDS_ItemValue = new DS_ItemValueDataTable();
            base.Tables.Add(this.tableDS_ItemValue);
            this.tableNull_ItemValue = new Null_ItemValueDataTable();
            base.Tables.Add(this.tableNull_ItemValue);
            this._relationFK_dbo_Employee_dbo_Company_CompanyId = new global::System.Data.DataRelation("FK_dbo.Employee_dbo.Company_CompanyId", new global::System.Data.DataColumn[] {
                        this.tableCompany.CompanyIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableEmployee.CompanyIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_Employee_dbo_Company_CompanyId);
            this._relationFK_dbo_T100_dbo_Company_CompanyId = new global::System.Data.DataRelation("FK_dbo.T100_dbo.Company_CompanyId", new global::System.Data.DataColumn[] {
                        this.tableCompany.CompanyIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableT100.CompanyIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_T100_dbo_Company_CompanyId);
            this._relationFK_dbo_T102_dbo_Company_CompanyId = new global::System.Data.DataRelation("FK_dbo.T102_dbo.Company_CompanyId", new global::System.Data.DataColumn[] {
                        this.tableCompany.CompanyIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableT102.CompanyIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_T102_dbo_Company_CompanyId);
            this._relationFK_dbo_T105_dbo_Company_CompanyId = new global::System.Data.DataRelation("FK_dbo.T105_dbo.Company_CompanyId", new global::System.Data.DataColumn[] {
                        this.tableCompany.CompanyIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableT105.CompanyIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_T105_dbo_Company_CompanyId);
            this._relationFK_dbo_T105_dbo_Employee_EmployeeId = new global::System.Data.DataRelation("FK_dbo.T105_dbo.Employee_EmployeeId", new global::System.Data.DataColumn[] {
                        this.tableEmployee.EmployeeIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableT105.EmployeeIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_T105_dbo_Employee_EmployeeId);
            this._relationFK_dbo_T201_dbo_Company_CompanyId = new global::System.Data.DataRelation("FK_dbo.T201_dbo.Company_CompanyId", new global::System.Data.DataColumn[] {
                        this.tableCompany.CompanyIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableT201.CompanyIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_T201_dbo_Company_CompanyId);
            this._relationFK_dbo_TimeSheet_dbo_Company_CompanyId = new global::System.Data.DataRelation("FK_dbo.TimeSheet_dbo.Company_CompanyId", new global::System.Data.DataColumn[] {
                        this.tableCompany.CompanyIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableTimeSheet.CompanyIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_TimeSheet_dbo_Company_CompanyId);
            this._relationFK_dbo_TimeSheet_dbo_Employee_EmployeeId = new global::System.Data.DataRelation("FK_dbo.TimeSheet_dbo.Employee_EmployeeId", new global::System.Data.DataColumn[] {
                        this.tableEmployee.EmployeeIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableTimeSheet.EmployeeIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_TimeSheet_dbo_Employee_EmployeeId);
            this._relationFK_dbo_AccrualTimeJournal_dbo_Employee_EmployeeId = new global::System.Data.DataRelation("FK_dbo.AccrualTimeJournal_dbo.Employee_EmployeeId", new global::System.Data.DataColumn[] {
                        this.tableEmployee.EmployeeIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableAccrualTimeJournal.EmployeeIdColumn}, false);
            this.Relations.Add(this._relationFK_dbo_AccrualTimeJournal_dbo_Employee_EmployeeId);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCompany() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEmployee() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT100() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT102() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT105() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeT201() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTimeSheet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAccrualTimeJournal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePS_ItemValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDS_ItemValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNull_ItemValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LivellPayRollDataSet ds = new LivellPayRollDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CompanyRowChangeEventHandler(object sender, CompanyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EmployeeRowChangeEventHandler(object sender, EmployeeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T100RowChangeEventHandler(object sender, T100RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T102RowChangeEventHandler(object sender, T102RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T105RowChangeEventHandler(object sender, T105RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void T201RowChangeEventHandler(object sender, T201RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TimeSheetRowChangeEventHandler(object sender, TimeSheetRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AccrualTimeJournalRowChangeEventHandler(object sender, AccrualTimeJournalRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PS_ItemValueRowChangeEventHandler(object sender, PS_ItemValueRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DS_ItemValueRowChangeEventHandler(object sender, DS_ItemValueRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Null_ItemValueRowChangeEventHandler(object sender, Null_ItemValueRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CompanyDataTable : global::System.Data.TypedTableBase<CompanyRow> {
            
            private global::System.Data.DataColumn columnCompanyId;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnFedTaxId;
            
            private global::System.Data.DataColumn columnContactName;
            
            private global::System.Data.DataColumn columnTelphone;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnWWW;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnTradeName;
            
            private global::System.Data.DataColumn columnPayFreq;
            
            private global::System.Data.DataColumn columnTimeZone;
            
            private global::System.Data.DataColumn columnRoundTo;
            
            private global::System.Data.DataColumn columnWeekRule;
            
            private global::System.Data.DataColumn columnWeekRuleValue;
            
            private global::System.Data.DataColumn columnDayRule;
            
            private global::System.Data.DataColumn columnDayRuleValue;
            
            private global::System.Data.DataColumn columnDoubeRule;
            
            private global::System.Data.DataColumn columnDoubeRuleValue;
            
            private global::System.Data.DataColumn columnCaliforniaRule;
            
            private global::System.Data.DataColumn columnallowedit;
            
            private global::System.Data.DataColumn columnDaylightSavingTime;
            
            private global::System.Data.DataColumn columnPayReportByEndingDate;
            
            private global::System.Data.DataColumn columnControlNo;
            
            private global::System.Data.DataColumn columnEstablish;
            
            private global::System.Data.DataColumn columnFUTA;
            
            private global::System.Data.DataColumn columnStateID;
            
            private global::System.Data.DataColumn columnStateUnemWage;
            
            private global::System.Data.DataColumn columnSUTA;
            
            private global::System.Data.DataColumn columnPayRollRegTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyDataTable() {
                this.TableName = "Company";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CompanyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CompanyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIdColumn {
                get {
                    return this.columnCompanyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FedTaxIdColumn {
                get {
                    return this.columnFedTaxId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelphoneColumn {
                get {
                    return this.columnTelphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WWWColumn {
                get {
                    return this.columnWWW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradeNameColumn {
                get {
                    return this.columnTradeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayFreqColumn {
                get {
                    return this.columnPayFreq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeZoneColumn {
                get {
                    return this.columnTimeZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RoundToColumn {
                get {
                    return this.columnRoundTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeekRuleColumn {
                get {
                    return this.columnWeekRule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeekRuleValueColumn {
                get {
                    return this.columnWeekRuleValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DayRuleColumn {
                get {
                    return this.columnDayRule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DayRuleValueColumn {
                get {
                    return this.columnDayRuleValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoubeRuleColumn {
                get {
                    return this.columnDoubeRule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoubeRuleValueColumn {
                get {
                    return this.columnDoubeRuleValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CaliforniaRuleColumn {
                get {
                    return this.columnCaliforniaRule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn alloweditColumn {
                get {
                    return this.columnallowedit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DaylightSavingTimeColumn {
                get {
                    return this.columnDaylightSavingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayReportByEndingDateColumn {
                get {
                    return this.columnPayReportByEndingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ControlNoColumn {
                get {
                    return this.columnControlNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstablishColumn {
                get {
                    return this.columnEstablish;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FUTAColumn {
                get {
                    return this.columnFUTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StateIDColumn {
                get {
                    return this.columnStateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StateUnemWageColumn {
                get {
                    return this.columnStateUnemWage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SUTAColumn {
                get {
                    return this.columnSUTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayRollRegTimeColumn {
                get {
                    return this.columnPayRollRegTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow this[int index] {
                get {
                    return ((CompanyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CompanyRowChangeEventHandler CompanyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CompanyRowChangeEventHandler CompanyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CompanyRowChangeEventHandler CompanyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CompanyRowChangeEventHandler CompanyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCompanyRow(CompanyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow AddCompanyRow(
                        string CompanyName, 
                        string FedTaxId, 
                        string ContactName, 
                        string Telphone, 
                        string Fax, 
                        string Email, 
                        string WWW, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string State, 
                        string Country, 
                        string Zip, 
                        string TradeName, 
                        string PayFreq, 
                        string TimeZone, 
                        string RoundTo, 
                        bool WeekRule, 
                        double WeekRuleValue, 
                        bool DayRule, 
                        double DayRuleValue, 
                        bool DoubeRule, 
                        double DoubeRuleValue, 
                        bool CaliforniaRule, 
                        bool allowedit, 
                        bool DaylightSavingTime, 
                        bool PayReportByEndingDate, 
                        string ControlNo, 
                        string Establish, 
                        double FUTA, 
                        string StateID, 
                        double StateUnemWage, 
                        double SUTA, 
                        System.DateTime PayRollRegTime) {
                CompanyRow rowCompanyRow = ((CompanyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CompanyName,
                        FedTaxId,
                        ContactName,
                        Telphone,
                        Fax,
                        Email,
                        WWW,
                        Address1,
                        Address2,
                        City,
                        State,
                        Country,
                        Zip,
                        TradeName,
                        PayFreq,
                        TimeZone,
                        RoundTo,
                        WeekRule,
                        WeekRuleValue,
                        DayRule,
                        DayRuleValue,
                        DoubeRule,
                        DoubeRuleValue,
                        CaliforniaRule,
                        allowedit,
                        DaylightSavingTime,
                        PayReportByEndingDate,
                        ControlNo,
                        Establish,
                        FUTA,
                        StateID,
                        StateUnemWage,
                        SUTA,
                        PayRollRegTime};
                rowCompanyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCompanyRow);
                return rowCompanyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow FindByCompanyId(int CompanyId) {
                return ((CompanyRow)(this.Rows.Find(new object[] {
                            CompanyId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CompanyDataTable cln = ((CompanyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CompanyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCompanyId = base.Columns["CompanyId"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnFedTaxId = base.Columns["FedTaxId"];
                this.columnContactName = base.Columns["ContactName"];
                this.columnTelphone = base.Columns["Telphone"];
                this.columnFax = base.Columns["Fax"];
                this.columnEmail = base.Columns["Email"];
                this.columnWWW = base.Columns["WWW"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnCountry = base.Columns["Country"];
                this.columnZip = base.Columns["Zip"];
                this.columnTradeName = base.Columns["TradeName"];
                this.columnPayFreq = base.Columns["PayFreq"];
                this.columnTimeZone = base.Columns["TimeZone"];
                this.columnRoundTo = base.Columns["RoundTo"];
                this.columnWeekRule = base.Columns["WeekRule"];
                this.columnWeekRuleValue = base.Columns["WeekRuleValue"];
                this.columnDayRule = base.Columns["DayRule"];
                this.columnDayRuleValue = base.Columns["DayRuleValue"];
                this.columnDoubeRule = base.Columns["DoubeRule"];
                this.columnDoubeRuleValue = base.Columns["DoubeRuleValue"];
                this.columnCaliforniaRule = base.Columns["CaliforniaRule"];
                this.columnallowedit = base.Columns["allowedit"];
                this.columnDaylightSavingTime = base.Columns["DaylightSavingTime"];
                this.columnPayReportByEndingDate = base.Columns["PayReportByEndingDate"];
                this.columnControlNo = base.Columns["ControlNo"];
                this.columnEstablish = base.Columns["Establish"];
                this.columnFUTA = base.Columns["FUTA"];
                this.columnStateID = base.Columns["StateID"];
                this.columnStateUnemWage = base.Columns["StateUnemWage"];
                this.columnSUTA = base.Columns["SUTA"];
                this.columnPayRollRegTime = base.Columns["PayRollRegTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCompanyId = new global::System.Data.DataColumn("CompanyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyId);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnFedTaxId = new global::System.Data.DataColumn("FedTaxId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFedTaxId);
                this.columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnTelphone = new global::System.Data.DataColumn("Telphone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelphone);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnWWW = new global::System.Data.DataColumn("WWW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWWW);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnTradeName = new global::System.Data.DataColumn("TradeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradeName);
                this.columnPayFreq = new global::System.Data.DataColumn("PayFreq", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayFreq);
                this.columnTimeZone = new global::System.Data.DataColumn("TimeZone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeZone);
                this.columnRoundTo = new global::System.Data.DataColumn("RoundTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoundTo);
                this.columnWeekRule = new global::System.Data.DataColumn("WeekRule", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeekRule);
                this.columnWeekRuleValue = new global::System.Data.DataColumn("WeekRuleValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeekRuleValue);
                this.columnDayRule = new global::System.Data.DataColumn("DayRule", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRule);
                this.columnDayRuleValue = new global::System.Data.DataColumn("DayRuleValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRuleValue);
                this.columnDoubeRule = new global::System.Data.DataColumn("DoubeRule", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoubeRule);
                this.columnDoubeRuleValue = new global::System.Data.DataColumn("DoubeRuleValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoubeRuleValue);
                this.columnCaliforniaRule = new global::System.Data.DataColumn("CaliforniaRule", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaliforniaRule);
                this.columnallowedit = new global::System.Data.DataColumn("allowedit", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnallowedit);
                this.columnDaylightSavingTime = new global::System.Data.DataColumn("DaylightSavingTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaylightSavingTime);
                this.columnPayReportByEndingDate = new global::System.Data.DataColumn("PayReportByEndingDate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayReportByEndingDate);
                this.columnControlNo = new global::System.Data.DataColumn("ControlNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnControlNo);
                this.columnEstablish = new global::System.Data.DataColumn("Establish", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstablish);
                this.columnFUTA = new global::System.Data.DataColumn("FUTA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUTA);
                this.columnStateID = new global::System.Data.DataColumn("StateID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateID);
                this.columnStateUnemWage = new global::System.Data.DataColumn("StateUnemWage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateUnemWage);
                this.columnSUTA = new global::System.Data.DataColumn("SUTA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUTA);
                this.columnPayRollRegTime = new global::System.Data.DataColumn("PayRollRegTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayRollRegTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCompanyId}, true));
                this.columnCompanyId.AutoIncrement = true;
                this.columnCompanyId.AutoIncrementSeed = -1;
                this.columnCompanyId.AutoIncrementStep = -1;
                this.columnCompanyId.AllowDBNull = false;
                this.columnCompanyId.ReadOnly = true;
                this.columnCompanyId.Unique = true;
                this.columnCompanyName.AllowDBNull = false;
                this.columnCompanyName.MaxLength = 128;
                this.columnFedTaxId.MaxLength = 32;
                this.columnContactName.MaxLength = 64;
                this.columnTelphone.MaxLength = 16;
                this.columnFax.MaxLength = 16;
                this.columnEmail.AllowDBNull = false;
                this.columnEmail.MaxLength = 128;
                this.columnWWW.MaxLength = 32;
                this.columnAddress1.AllowDBNull = false;
                this.columnAddress1.MaxLength = 256;
                this.columnAddress2.MaxLength = 256;
                this.columnCity.AllowDBNull = false;
                this.columnCity.MaxLength = 64;
                this.columnState.AllowDBNull = false;
                this.columnState.MaxLength = 2;
                this.columnCountry.MaxLength = 64;
                this.columnZip.MaxLength = 16;
                this.columnTradeName.MaxLength = 64;
                this.columnPayFreq.AllowDBNull = false;
                this.columnPayFreq.MaxLength = 16;
                this.columnTimeZone.AllowDBNull = false;
                this.columnTimeZone.MaxLength = 8;
                this.columnRoundTo.AllowDBNull = false;
                this.columnRoundTo.MaxLength = 2;
                this.columnWeekRule.AllowDBNull = false;
                this.columnWeekRuleValue.AllowDBNull = false;
                this.columnDayRule.AllowDBNull = false;
                this.columnDayRuleValue.AllowDBNull = false;
                this.columnDoubeRule.AllowDBNull = false;
                this.columnDoubeRuleValue.AllowDBNull = false;
                this.columnCaliforniaRule.AllowDBNull = false;
                this.columnallowedit.AllowDBNull = false;
                this.columnDaylightSavingTime.AllowDBNull = false;
                this.columnPayReportByEndingDate.AllowDBNull = false;
                this.columnControlNo.MaxLength = 64;
                this.columnEstablish.MaxLength = 64;
                this.columnFUTA.AllowDBNull = false;
                this.columnStateID.MaxLength = 64;
                this.columnStateUnemWage.AllowDBNull = false;
                this.columnSUTA.AllowDBNull = false;
                this.columnPayRollRegTime.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow NewCompanyRow() {
                return ((CompanyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CompanyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CompanyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CompanyRowChanged != null)) {
                    this.CompanyRowChanged(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CompanyRowChanging != null)) {
                    this.CompanyRowChanging(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CompanyRowDeleted != null)) {
                    this.CompanyRowDeleted(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CompanyRowDeleting != null)) {
                    this.CompanyRowDeleting(this, new CompanyRowChangeEvent(((CompanyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCompanyRow(CompanyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CompanyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmployeeDataTable : global::System.Data.TypedTableBase<EmployeeRow> {
            
            private global::System.Data.DataColumn columnEmployeeId;
            
            private global::System.Data.DataColumn columnLName;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnMInit;
            
            private global::System.Data.DataColumn columnSSN;
            
            private global::System.Data.DataColumn columnF99;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZipCode;
            
            private global::System.Data.DataColumn columnTimeZone;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnUserRole;
            
            private global::System.Data.DataColumn columnF100;
            
            private global::System.Data.DataColumn columnF101;
            
            private global::System.Data.DataColumn columnF102;
            
            private global::System.Data.DataColumn columnF103;
            
            private global::System.Data.DataColumn columnF104;
            
            private global::System.Data.DataColumn columnF105;
            
            private global::System.Data.DataColumn columnF106;
            
            private global::System.Data.DataColumn columnF107;
            
            private global::System.Data.DataColumn columnF108;
            
            private global::System.Data.DataColumn columnF109;
            
            private global::System.Data.DataColumn columnF110;
            
            private global::System.Data.DataColumn columnF111;
            
            private global::System.Data.DataColumn columnF112;
            
            private global::System.Data.DataColumn columnF113;
            
            private global::System.Data.DataColumn columnF114;
            
            private global::System.Data.DataColumn columnF115;
            
            private global::System.Data.DataColumn columnF116;
            
            private global::System.Data.DataColumn columnF117;
            
            private global::System.Data.DataColumn columnF118;
            
            private global::System.Data.DataColumn columnF119;
            
            private global::System.Data.DataColumn columnF120;
            
            private global::System.Data.DataColumn columnF121;
            
            private global::System.Data.DataColumn columnF122;
            
            private global::System.Data.DataColumn columnF1231;
            
            private global::System.Data.DataColumn columnF1232;
            
            private global::System.Data.DataColumn columnF1233;
            
            private global::System.Data.DataColumn columnF1234;
            
            private global::System.Data.DataColumn columnF1235;
            
            private global::System.Data.DataColumn columnF124;
            
            private global::System.Data.DataColumn columnF125;
            
            private global::System.Data.DataColumn columnIsW2StatutoryEmployee;
            
            private global::System.Data.DataColumn columnIsW2RetirementPlan;
            
            private global::System.Data.DataColumn columnDoesReceiveAdvanceEIC;
            
            private global::System.Data.DataColumn columnF1236;
            
            private global::System.Data.DataColumn columnF1237;
            
            private global::System.Data.DataColumn columnHourlyPay1;
            
            private global::System.Data.DataColumn columnHourlyPay2;
            
            private global::System.Data.DataColumn columnHourlyPay3;
            
            private global::System.Data.DataColumn columnHourlyPay4;
            
            private global::System.Data.DataColumn columnSickRate;
            
            private global::System.Data.DataColumn columnVacationRate;
            
            private global::System.Data.DataColumn columnis1099Employee;
            
            private global::System.Data.DataColumn columnPTOAcchours;
            
            private global::System.Data.DataColumn columnVacAccHours;
            
            private global::System.Data.DataColumn columnprintPTOStub;
            
            private global::System.Data.DataColumn columnPTOAccRate;
            
            private global::System.Data.DataColumn columnVacAccRate;
            
            private global::System.Data.DataColumn columnPTOCapHours;
            
            private global::System.Data.DataColumn columnVacCapHours;
            
            private global::System.Data.DataColumn columnisPayrollSetup;
            
            private global::System.Data.DataColumn columnDefaultJob;
            
            private global::System.Data.DataColumn columnisEmailComfirmed;
            
            private global::System.Data.DataColumn columnSecurityStamp;
            
            private global::System.Data.DataColumn columnCompanyId;
            
            private global::System.Data.DataColumn columnAppUserId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeDataTable() {
                this.TableName = "Employee";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmployeeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EmployeeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIdColumn {
                get {
                    return this.columnEmployeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LNameColumn {
                get {
                    return this.columnLName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MInitColumn {
                get {
                    return this.columnMInit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSNColumn {
                get {
                    return this.columnSSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F99Column {
                get {
                    return this.columnF99;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZipCodeColumn {
                get {
                    return this.columnZipCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeZoneColumn {
                get {
                    return this.columnTimeZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserRoleColumn {
                get {
                    return this.columnUserRole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F100Column {
                get {
                    return this.columnF100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F101Column {
                get {
                    return this.columnF101;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F102Column {
                get {
                    return this.columnF102;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F103Column {
                get {
                    return this.columnF103;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F104Column {
                get {
                    return this.columnF104;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F105Column {
                get {
                    return this.columnF105;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F106Column {
                get {
                    return this.columnF106;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F107Column {
                get {
                    return this.columnF107;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F108Column {
                get {
                    return this.columnF108;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F109Column {
                get {
                    return this.columnF109;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F110Column {
                get {
                    return this.columnF110;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F111Column {
                get {
                    return this.columnF111;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F112Column {
                get {
                    return this.columnF112;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F113Column {
                get {
                    return this.columnF113;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F114Column {
                get {
                    return this.columnF114;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F115Column {
                get {
                    return this.columnF115;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F116Column {
                get {
                    return this.columnF116;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F117Column {
                get {
                    return this.columnF117;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F118Column {
                get {
                    return this.columnF118;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F119Column {
                get {
                    return this.columnF119;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F120Column {
                get {
                    return this.columnF120;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F121Column {
                get {
                    return this.columnF121;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F122Column {
                get {
                    return this.columnF122;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1231Column {
                get {
                    return this.columnF1231;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1232Column {
                get {
                    return this.columnF1232;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1233Column {
                get {
                    return this.columnF1233;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1234Column {
                get {
                    return this.columnF1234;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1235Column {
                get {
                    return this.columnF1235;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F124Column {
                get {
                    return this.columnF124;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F125Column {
                get {
                    return this.columnF125;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsW2StatutoryEmployeeColumn {
                get {
                    return this.columnIsW2StatutoryEmployee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsW2RetirementPlanColumn {
                get {
                    return this.columnIsW2RetirementPlan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoesReceiveAdvanceEICColumn {
                get {
                    return this.columnDoesReceiveAdvanceEIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1236Column {
                get {
                    return this.columnF1236;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1237Column {
                get {
                    return this.columnF1237;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourlyPay1Column {
                get {
                    return this.columnHourlyPay1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourlyPay2Column {
                get {
                    return this.columnHourlyPay2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourlyPay3Column {
                get {
                    return this.columnHourlyPay3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourlyPay4Column {
                get {
                    return this.columnHourlyPay4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SickRateColumn {
                get {
                    return this.columnSickRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VacationRateColumn {
                get {
                    return this.columnVacationRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn is1099EmployeeColumn {
                get {
                    return this.columnis1099Employee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PTOAcchoursColumn {
                get {
                    return this.columnPTOAcchours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VacAccHoursColumn {
                get {
                    return this.columnVacAccHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn printPTOStubColumn {
                get {
                    return this.columnprintPTOStub;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PTOAccRateColumn {
                get {
                    return this.columnPTOAccRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VacAccRateColumn {
                get {
                    return this.columnVacAccRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PTOCapHoursColumn {
                get {
                    return this.columnPTOCapHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VacCapHoursColumn {
                get {
                    return this.columnVacCapHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isPayrollSetupColumn {
                get {
                    return this.columnisPayrollSetup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultJobColumn {
                get {
                    return this.columnDefaultJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isEmailComfirmedColumn {
                get {
                    return this.columnisEmailComfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecurityStampColumn {
                get {
                    return this.columnSecurityStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIdColumn {
                get {
                    return this.columnCompanyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppUserIdColumn {
                get {
                    return this.columnAppUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow this[int index] {
                get {
                    return ((EmployeeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeeRowChangeEventHandler EmployeeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeeRowChangeEventHandler EmployeeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeeRowChangeEventHandler EmployeeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EmployeeRowChangeEventHandler EmployeeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEmployeeRow(EmployeeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow AddEmployeeRow(
                        System.Guid EmployeeId, 
                        string LName, 
                        string FName, 
                        string MInit, 
                        string SSN, 
                        byte F99, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string State, 
                        string ZipCode, 
                        string TimeZone, 
                        string Phone, 
                        string Email, 
                        string UserRole, 
                        float F100, 
                        float F101, 
                        float F102, 
                        System.DateTime F103, 
                        System.DateTime F104, 
                        System.DateTime F105, 
                        string F106, 
                        int F107, 
                        string F108, 
                        string F109, 
                        string F110, 
                        string F111, 
                        int F112, 
                        int F113, 
                        int F114, 
                        int F115, 
                        int F116, 
                        int F117, 
                        int F118, 
                        int F119, 
                        float F120, 
                        float F121, 
                        float F122, 
                        float F1231, 
                        float F1232, 
                        float F1233, 
                        float F1234, 
                        float F1235, 
                        int F124, 
                        int F125, 
                        int IsW2StatutoryEmployee, 
                        int IsW2RetirementPlan, 
                        int DoesReceiveAdvanceEIC, 
                        float F1236, 
                        float F1237, 
                        string HourlyPay1, 
                        string HourlyPay2, 
                        string HourlyPay3, 
                        string HourlyPay4, 
                        float SickRate, 
                        float VacationRate, 
                        int is1099Employee, 
                        float PTOAcchours, 
                        float VacAccHours, 
                        int printPTOStub, 
                        float PTOAccRate, 
                        float VacAccRate, 
                        float PTOCapHours, 
                        float VacCapHours, 
                        int isPayrollSetup, 
                        int DefaultJob, 
                        int isEmailComfirmed, 
                        string SecurityStamp, 
                        CompanyRow _parentCompanyRowByFK_dbo_Employee_dbo_Company_CompanyId, 
                        string AppUserId) {
                EmployeeRow rowEmployeeRow = ((EmployeeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EmployeeId,
                        LName,
                        FName,
                        MInit,
                        SSN,
                        F99,
                        Address1,
                        Address2,
                        City,
                        State,
                        ZipCode,
                        TimeZone,
                        Phone,
                        Email,
                        UserRole,
                        F100,
                        F101,
                        F102,
                        F103,
                        F104,
                        F105,
                        F106,
                        F107,
                        F108,
                        F109,
                        F110,
                        F111,
                        F112,
                        F113,
                        F114,
                        F115,
                        F116,
                        F117,
                        F118,
                        F119,
                        F120,
                        F121,
                        F122,
                        F1231,
                        F1232,
                        F1233,
                        F1234,
                        F1235,
                        F124,
                        F125,
                        IsW2StatutoryEmployee,
                        IsW2RetirementPlan,
                        DoesReceiveAdvanceEIC,
                        F1236,
                        F1237,
                        HourlyPay1,
                        HourlyPay2,
                        HourlyPay3,
                        HourlyPay4,
                        SickRate,
                        VacationRate,
                        is1099Employee,
                        PTOAcchours,
                        VacAccHours,
                        printPTOStub,
                        PTOAccRate,
                        VacAccRate,
                        PTOCapHours,
                        VacCapHours,
                        isPayrollSetup,
                        DefaultJob,
                        isEmailComfirmed,
                        SecurityStamp,
                        null,
                        AppUserId};
                if ((_parentCompanyRowByFK_dbo_Employee_dbo_Company_CompanyId != null)) {
                    columnValuesArray[68] = _parentCompanyRowByFK_dbo_Employee_dbo_Company_CompanyId[0];
                }
                rowEmployeeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmployeeRow);
                return rowEmployeeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow FindByEmployeeId(System.Guid EmployeeId) {
                return ((EmployeeRow)(this.Rows.Find(new object[] {
                            EmployeeId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EmployeeDataTable cln = ((EmployeeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmployeeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnEmployeeId = base.Columns["EmployeeId"];
                this.columnLName = base.Columns["LName"];
                this.columnFName = base.Columns["FName"];
                this.columnMInit = base.Columns["MInit"];
                this.columnSSN = base.Columns["SSN"];
                this.columnF99 = base.Columns["F99"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZipCode = base.Columns["ZipCode"];
                this.columnTimeZone = base.Columns["TimeZone"];
                this.columnPhone = base.Columns["Phone"];
                this.columnEmail = base.Columns["Email"];
                this.columnUserRole = base.Columns["UserRole"];
                this.columnF100 = base.Columns["F100"];
                this.columnF101 = base.Columns["F101"];
                this.columnF102 = base.Columns["F102"];
                this.columnF103 = base.Columns["F103"];
                this.columnF104 = base.Columns["F104"];
                this.columnF105 = base.Columns["F105"];
                this.columnF106 = base.Columns["F106"];
                this.columnF107 = base.Columns["F107"];
                this.columnF108 = base.Columns["F108"];
                this.columnF109 = base.Columns["F109"];
                this.columnF110 = base.Columns["F110"];
                this.columnF111 = base.Columns["F111"];
                this.columnF112 = base.Columns["F112"];
                this.columnF113 = base.Columns["F113"];
                this.columnF114 = base.Columns["F114"];
                this.columnF115 = base.Columns["F115"];
                this.columnF116 = base.Columns["F116"];
                this.columnF117 = base.Columns["F117"];
                this.columnF118 = base.Columns["F118"];
                this.columnF119 = base.Columns["F119"];
                this.columnF120 = base.Columns["F120"];
                this.columnF121 = base.Columns["F121"];
                this.columnF122 = base.Columns["F122"];
                this.columnF1231 = base.Columns["F1231"];
                this.columnF1232 = base.Columns["F1232"];
                this.columnF1233 = base.Columns["F1233"];
                this.columnF1234 = base.Columns["F1234"];
                this.columnF1235 = base.Columns["F1235"];
                this.columnF124 = base.Columns["F124"];
                this.columnF125 = base.Columns["F125"];
                this.columnIsW2StatutoryEmployee = base.Columns["IsW2StatutoryEmployee"];
                this.columnIsW2RetirementPlan = base.Columns["IsW2RetirementPlan"];
                this.columnDoesReceiveAdvanceEIC = base.Columns["DoesReceiveAdvanceEIC"];
                this.columnF1236 = base.Columns["F1236"];
                this.columnF1237 = base.Columns["F1237"];
                this.columnHourlyPay1 = base.Columns["HourlyPay1"];
                this.columnHourlyPay2 = base.Columns["HourlyPay2"];
                this.columnHourlyPay3 = base.Columns["HourlyPay3"];
                this.columnHourlyPay4 = base.Columns["HourlyPay4"];
                this.columnSickRate = base.Columns["SickRate"];
                this.columnVacationRate = base.Columns["VacationRate"];
                this.columnis1099Employee = base.Columns["is1099Employee"];
                this.columnPTOAcchours = base.Columns["PTOAcchours"];
                this.columnVacAccHours = base.Columns["VacAccHours"];
                this.columnprintPTOStub = base.Columns["printPTOStub"];
                this.columnPTOAccRate = base.Columns["PTOAccRate"];
                this.columnVacAccRate = base.Columns["VacAccRate"];
                this.columnPTOCapHours = base.Columns["PTOCapHours"];
                this.columnVacCapHours = base.Columns["VacCapHours"];
                this.columnisPayrollSetup = base.Columns["isPayrollSetup"];
                this.columnDefaultJob = base.Columns["DefaultJob"];
                this.columnisEmailComfirmed = base.Columns["isEmailComfirmed"];
                this.columnSecurityStamp = base.Columns["SecurityStamp"];
                this.columnCompanyId = base.Columns["CompanyId"];
                this.columnAppUserId = base.Columns["AppUserId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.columnLName = new global::System.Data.DataColumn("LName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLName);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnMInit = new global::System.Data.DataColumn("MInit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMInit);
                this.columnSSN = new global::System.Data.DataColumn("SSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSN);
                this.columnF99 = new global::System.Data.DataColumn("F99", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF99);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZipCode = new global::System.Data.DataColumn("ZipCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZipCode);
                this.columnTimeZone = new global::System.Data.DataColumn("TimeZone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeZone);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnUserRole = new global::System.Data.DataColumn("UserRole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserRole);
                this.columnF100 = new global::System.Data.DataColumn("F100", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF100);
                this.columnF101 = new global::System.Data.DataColumn("F101", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF101);
                this.columnF102 = new global::System.Data.DataColumn("F102", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF102);
                this.columnF103 = new global::System.Data.DataColumn("F103", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF103);
                this.columnF104 = new global::System.Data.DataColumn("F104", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF104);
                this.columnF105 = new global::System.Data.DataColumn("F105", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF105);
                this.columnF106 = new global::System.Data.DataColumn("F106", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF106);
                this.columnF107 = new global::System.Data.DataColumn("F107", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF107);
                this.columnF108 = new global::System.Data.DataColumn("F108", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF108);
                this.columnF109 = new global::System.Data.DataColumn("F109", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF109);
                this.columnF110 = new global::System.Data.DataColumn("F110", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF110);
                this.columnF111 = new global::System.Data.DataColumn("F111", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF111);
                this.columnF112 = new global::System.Data.DataColumn("F112", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF112);
                this.columnF113 = new global::System.Data.DataColumn("F113", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF113);
                this.columnF114 = new global::System.Data.DataColumn("F114", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF114);
                this.columnF115 = new global::System.Data.DataColumn("F115", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF115);
                this.columnF116 = new global::System.Data.DataColumn("F116", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF116);
                this.columnF117 = new global::System.Data.DataColumn("F117", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF117);
                this.columnF118 = new global::System.Data.DataColumn("F118", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF118);
                this.columnF119 = new global::System.Data.DataColumn("F119", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF119);
                this.columnF120 = new global::System.Data.DataColumn("F120", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF120);
                this.columnF121 = new global::System.Data.DataColumn("F121", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF121);
                this.columnF122 = new global::System.Data.DataColumn("F122", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF122);
                this.columnF1231 = new global::System.Data.DataColumn("F1231", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1231);
                this.columnF1232 = new global::System.Data.DataColumn("F1232", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1232);
                this.columnF1233 = new global::System.Data.DataColumn("F1233", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1233);
                this.columnF1234 = new global::System.Data.DataColumn("F1234", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1234);
                this.columnF1235 = new global::System.Data.DataColumn("F1235", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1235);
                this.columnF124 = new global::System.Data.DataColumn("F124", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF124);
                this.columnF125 = new global::System.Data.DataColumn("F125", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF125);
                this.columnIsW2StatutoryEmployee = new global::System.Data.DataColumn("IsW2StatutoryEmployee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsW2StatutoryEmployee);
                this.columnIsW2RetirementPlan = new global::System.Data.DataColumn("IsW2RetirementPlan", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsW2RetirementPlan);
                this.columnDoesReceiveAdvanceEIC = new global::System.Data.DataColumn("DoesReceiveAdvanceEIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoesReceiveAdvanceEIC);
                this.columnF1236 = new global::System.Data.DataColumn("F1236", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1236);
                this.columnF1237 = new global::System.Data.DataColumn("F1237", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1237);
                this.columnHourlyPay1 = new global::System.Data.DataColumn("HourlyPay1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourlyPay1);
                this.columnHourlyPay2 = new global::System.Data.DataColumn("HourlyPay2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourlyPay2);
                this.columnHourlyPay3 = new global::System.Data.DataColumn("HourlyPay3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourlyPay3);
                this.columnHourlyPay4 = new global::System.Data.DataColumn("HourlyPay4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourlyPay4);
                this.columnSickRate = new global::System.Data.DataColumn("SickRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSickRate);
                this.columnVacationRate = new global::System.Data.DataColumn("VacationRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacationRate);
                this.columnis1099Employee = new global::System.Data.DataColumn("is1099Employee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis1099Employee);
                this.columnPTOAcchours = new global::System.Data.DataColumn("PTOAcchours", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTOAcchours);
                this.columnVacAccHours = new global::System.Data.DataColumn("VacAccHours", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAccHours);
                this.columnprintPTOStub = new global::System.Data.DataColumn("printPTOStub", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprintPTOStub);
                this.columnPTOAccRate = new global::System.Data.DataColumn("PTOAccRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTOAccRate);
                this.columnVacAccRate = new global::System.Data.DataColumn("VacAccRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAccRate);
                this.columnPTOCapHours = new global::System.Data.DataColumn("PTOCapHours", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTOCapHours);
                this.columnVacCapHours = new global::System.Data.DataColumn("VacCapHours", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacCapHours);
                this.columnisPayrollSetup = new global::System.Data.DataColumn("isPayrollSetup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisPayrollSetup);
                this.columnDefaultJob = new global::System.Data.DataColumn("DefaultJob", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultJob);
                this.columnisEmailComfirmed = new global::System.Data.DataColumn("isEmailComfirmed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisEmailComfirmed);
                this.columnSecurityStamp = new global::System.Data.DataColumn("SecurityStamp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityStamp);
                this.columnCompanyId = new global::System.Data.DataColumn("CompanyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyId);
                this.columnAppUserId = new global::System.Data.DataColumn("AppUserId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppUserId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEmployeeId}, true));
                this.columnEmployeeId.AllowDBNull = false;
                this.columnEmployeeId.Unique = true;
                this.columnLName.MaxLength = 64;
                this.columnFName.MaxLength = 64;
                this.columnMInit.MaxLength = 64;
                this.columnSSN.MaxLength = 11;
                this.columnF99.AllowDBNull = false;
                this.columnAddress1.MaxLength = 256;
                this.columnAddress2.MaxLength = 256;
                this.columnCity.MaxLength = 64;
                this.columnState.MaxLength = 2;
                this.columnZipCode.MaxLength = 16;
                this.columnTimeZone.MaxLength = 8;
                this.columnPhone.MaxLength = 16;
                this.columnEmail.MaxLength = 128;
                this.columnUserRole.AllowDBNull = false;
                this.columnUserRole.MaxLength = 16;
                this.columnF100.AllowDBNull = false;
                this.columnF101.AllowDBNull = false;
                this.columnF102.AllowDBNull = false;
                this.columnF103.AllowDBNull = false;
                this.columnF104.AllowDBNull = false;
                this.columnF105.AllowDBNull = false;
                this.columnF106.MaxLength = 16;
                this.columnF107.AllowDBNull = false;
                this.columnF108.MaxLength = 16;
                this.columnF109.MaxLength = 16;
                this.columnF110.MaxLength = 16;
                this.columnF111.MaxLength = 16;
                this.columnF112.AllowDBNull = false;
                this.columnF113.AllowDBNull = false;
                this.columnF114.AllowDBNull = false;
                this.columnF115.AllowDBNull = false;
                this.columnF116.AllowDBNull = false;
                this.columnF117.AllowDBNull = false;
                this.columnF118.AllowDBNull = false;
                this.columnF119.AllowDBNull = false;
                this.columnF120.AllowDBNull = false;
                this.columnF121.AllowDBNull = false;
                this.columnF122.AllowDBNull = false;
                this.columnF1231.AllowDBNull = false;
                this.columnF1232.AllowDBNull = false;
                this.columnF1233.AllowDBNull = false;
                this.columnF1234.AllowDBNull = false;
                this.columnF1235.AllowDBNull = false;
                this.columnF124.AllowDBNull = false;
                this.columnF125.AllowDBNull = false;
                this.columnIsW2StatutoryEmployee.AllowDBNull = false;
                this.columnIsW2RetirementPlan.AllowDBNull = false;
                this.columnDoesReceiveAdvanceEIC.AllowDBNull = false;
                this.columnF1236.AllowDBNull = false;
                this.columnF1237.AllowDBNull = false;
                this.columnHourlyPay1.MaxLength = 64;
                this.columnHourlyPay2.MaxLength = 64;
                this.columnHourlyPay3.MaxLength = 64;
                this.columnHourlyPay4.MaxLength = 64;
                this.columnSickRate.AllowDBNull = false;
                this.columnVacationRate.AllowDBNull = false;
                this.columnis1099Employee.AllowDBNull = false;
                this.columnPTOAcchours.AllowDBNull = false;
                this.columnVacAccHours.AllowDBNull = false;
                this.columnprintPTOStub.AllowDBNull = false;
                this.columnPTOAccRate.AllowDBNull = false;
                this.columnVacAccRate.AllowDBNull = false;
                this.columnPTOCapHours.AllowDBNull = false;
                this.columnVacCapHours.AllowDBNull = false;
                this.columnisPayrollSetup.AllowDBNull = false;
                this.columnDefaultJob.AllowDBNull = false;
                this.columnisEmailComfirmed.AllowDBNull = false;
                this.columnSecurityStamp.MaxLength = 128;
                this.columnCompanyId.AllowDBNull = false;
                this.columnAppUserId.MaxLength = 128;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow NewEmployeeRow() {
                return ((EmployeeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmployeeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EmployeeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmployeeRowChanged != null)) {
                    this.EmployeeRowChanged(this, new EmployeeRowChangeEvent(((EmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmployeeRowChanging != null)) {
                    this.EmployeeRowChanging(this, new EmployeeRowChangeEvent(((EmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmployeeRowDeleted != null)) {
                    this.EmployeeRowDeleted(this, new EmployeeRowChangeEvent(((EmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmployeeRowDeleting != null)) {
                    this.EmployeeRowDeleting(this, new EmployeeRowChangeEvent(((EmployeeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEmployeeRow(EmployeeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmployeeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T100DataTable : global::System.Data.TypedTableBase<T100Row> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBankInfo1;
            
            private global::System.Data.DataColumn columnBankInfo2;
            
            private global::System.Data.DataColumn columnBankInfo3;
            
            private global::System.Data.DataColumn columnTransitCode;
            
            private global::System.Data.DataColumn columnBankRouteNo;
            
            private global::System.Data.DataColumn columnBankAccountNo;
            
            private global::System.Data.DataColumn columnStartCheckNo;
            
            private global::System.Data.DataColumn columnCurrentCheckNo;
            
            private global::System.Data.DataColumn columnCheckWidth;
            
            private global::System.Data.DataColumn columnCheckHeight;
            
            private global::System.Data.DataColumn columnOffsetLeft;
            
            private global::System.Data.DataColumn columnOffsetRight;
            
            private global::System.Data.DataColumn columnOffsetUp;
            
            private global::System.Data.DataColumn columnOffsetDown;
            
            private global::System.Data.DataColumn columnLogo;
            
            private global::System.Data.DataColumn columnSignature;
            
            private global::System.Data.DataColumn columnCompany1;
            
            private global::System.Data.DataColumn columnCompany2;
            
            private global::System.Data.DataColumn columnCompany3;
            
            private global::System.Data.DataColumn columnCompany4;
            
            private global::System.Data.DataColumn columnBlankBankStock;
            
            private global::System.Data.DataColumn columnExField1;
            
            private global::System.Data.DataColumn columnExField2;
            
            private global::System.Data.DataColumn columnExField3;
            
            private global::System.Data.DataColumn columnnodisplaymicr;
            
            private global::System.Data.DataColumn columnCompanyId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T100DataTable() {
                this.TableName = "T100";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T100DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T100DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankInfo1Column {
                get {
                    return this.columnBankInfo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankInfo2Column {
                get {
                    return this.columnBankInfo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankInfo3Column {
                get {
                    return this.columnBankInfo3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransitCodeColumn {
                get {
                    return this.columnTransitCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankRouteNoColumn {
                get {
                    return this.columnBankRouteNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAccountNoColumn {
                get {
                    return this.columnBankAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartCheckNoColumn {
                get {
                    return this.columnStartCheckNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentCheckNoColumn {
                get {
                    return this.columnCurrentCheckNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckWidthColumn {
                get {
                    return this.columnCheckWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckHeightColumn {
                get {
                    return this.columnCheckHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OffsetLeftColumn {
                get {
                    return this.columnOffsetLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OffsetRightColumn {
                get {
                    return this.columnOffsetRight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OffsetUpColumn {
                get {
                    return this.columnOffsetUp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OffsetDownColumn {
                get {
                    return this.columnOffsetDown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LogoColumn {
                get {
                    return this.columnLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SignatureColumn {
                get {
                    return this.columnSignature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Company1Column {
                get {
                    return this.columnCompany1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Company2Column {
                get {
                    return this.columnCompany2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Company3Column {
                get {
                    return this.columnCompany3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Company4Column {
                get {
                    return this.columnCompany4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BlankBankStockColumn {
                get {
                    return this.columnBlankBankStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExField1Column {
                get {
                    return this.columnExField1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExField2Column {
                get {
                    return this.columnExField2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExField3Column {
                get {
                    return this.columnExField3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nodisplaymicrColumn {
                get {
                    return this.columnnodisplaymicr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIdColumn {
                get {
                    return this.columnCompanyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T100Row this[int index] {
                get {
                    return ((T100Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T100RowChangeEventHandler T100RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T100RowChangeEventHandler T100RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T100RowChangeEventHandler T100RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T100RowChangeEventHandler T100RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT100Row(T100Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T100Row AddT100Row(
                        System.Guid Id, 
                        string BankName, 
                        string BankInfo1, 
                        string BankInfo2, 
                        string BankInfo3, 
                        string TransitCode, 
                        string BankRouteNo, 
                        string BankAccountNo, 
                        int StartCheckNo, 
                        int CurrentCheckNo, 
                        float CheckWidth, 
                        float CheckHeight, 
                        float OffsetLeft, 
                        float OffsetRight, 
                        float OffsetUp, 
                        float OffsetDown, 
                        string Logo, 
                        string Signature, 
                        string Company1, 
                        string Company2, 
                        string Company3, 
                        string Company4, 
                        bool BlankBankStock, 
                        string ExField1, 
                        bool ExField2, 
                        string ExField3, 
                        bool nodisplaymicr, 
                        CompanyRow _parentCompanyRowByFK_dbo_T100_dbo_Company_CompanyId) {
                T100Row rowT100Row = ((T100Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        BankName,
                        BankInfo1,
                        BankInfo2,
                        BankInfo3,
                        TransitCode,
                        BankRouteNo,
                        BankAccountNo,
                        StartCheckNo,
                        CurrentCheckNo,
                        CheckWidth,
                        CheckHeight,
                        OffsetLeft,
                        OffsetRight,
                        OffsetUp,
                        OffsetDown,
                        Logo,
                        Signature,
                        Company1,
                        Company2,
                        Company3,
                        Company4,
                        BlankBankStock,
                        ExField1,
                        ExField2,
                        ExField3,
                        nodisplaymicr,
                        null};
                if ((_parentCompanyRowByFK_dbo_T100_dbo_Company_CompanyId != null)) {
                    columnValuesArray[27] = _parentCompanyRowByFK_dbo_T100_dbo_Company_CompanyId[0];
                }
                rowT100Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowT100Row);
                return rowT100Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T100Row FindById(System.Guid Id) {
                return ((T100Row)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T100DataTable cln = ((T100DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T100DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnBankName = base.Columns["BankName"];
                this.columnBankInfo1 = base.Columns["BankInfo1"];
                this.columnBankInfo2 = base.Columns["BankInfo2"];
                this.columnBankInfo3 = base.Columns["BankInfo3"];
                this.columnTransitCode = base.Columns["TransitCode"];
                this.columnBankRouteNo = base.Columns["BankRouteNo"];
                this.columnBankAccountNo = base.Columns["BankAccountNo"];
                this.columnStartCheckNo = base.Columns["StartCheckNo"];
                this.columnCurrentCheckNo = base.Columns["CurrentCheckNo"];
                this.columnCheckWidth = base.Columns["CheckWidth"];
                this.columnCheckHeight = base.Columns["CheckHeight"];
                this.columnOffsetLeft = base.Columns["OffsetLeft"];
                this.columnOffsetRight = base.Columns["OffsetRight"];
                this.columnOffsetUp = base.Columns["OffsetUp"];
                this.columnOffsetDown = base.Columns["OffsetDown"];
                this.columnLogo = base.Columns["Logo"];
                this.columnSignature = base.Columns["Signature"];
                this.columnCompany1 = base.Columns["Company1"];
                this.columnCompany2 = base.Columns["Company2"];
                this.columnCompany3 = base.Columns["Company3"];
                this.columnCompany4 = base.Columns["Company4"];
                this.columnBlankBankStock = base.Columns["BlankBankStock"];
                this.columnExField1 = base.Columns["ExField1"];
                this.columnExField2 = base.Columns["ExField2"];
                this.columnExField3 = base.Columns["ExField3"];
                this.columnnodisplaymicr = base.Columns["nodisplaymicr"];
                this.columnCompanyId = base.Columns["CompanyId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBankInfo1 = new global::System.Data.DataColumn("BankInfo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankInfo1);
                this.columnBankInfo2 = new global::System.Data.DataColumn("BankInfo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankInfo2);
                this.columnBankInfo3 = new global::System.Data.DataColumn("BankInfo3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankInfo3);
                this.columnTransitCode = new global::System.Data.DataColumn("TransitCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransitCode);
                this.columnBankRouteNo = new global::System.Data.DataColumn("BankRouteNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankRouteNo);
                this.columnBankAccountNo = new global::System.Data.DataColumn("BankAccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccountNo);
                this.columnStartCheckNo = new global::System.Data.DataColumn("StartCheckNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartCheckNo);
                this.columnCurrentCheckNo = new global::System.Data.DataColumn("CurrentCheckNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentCheckNo);
                this.columnCheckWidth = new global::System.Data.DataColumn("CheckWidth", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckWidth);
                this.columnCheckHeight = new global::System.Data.DataColumn("CheckHeight", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckHeight);
                this.columnOffsetLeft = new global::System.Data.DataColumn("OffsetLeft", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffsetLeft);
                this.columnOffsetRight = new global::System.Data.DataColumn("OffsetRight", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffsetRight);
                this.columnOffsetUp = new global::System.Data.DataColumn("OffsetUp", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffsetUp);
                this.columnOffsetDown = new global::System.Data.DataColumn("OffsetDown", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffsetDown);
                this.columnLogo = new global::System.Data.DataColumn("Logo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogo);
                this.columnSignature = new global::System.Data.DataColumn("Signature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignature);
                this.columnCompany1 = new global::System.Data.DataColumn("Company1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany1);
                this.columnCompany2 = new global::System.Data.DataColumn("Company2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany2);
                this.columnCompany3 = new global::System.Data.DataColumn("Company3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany3);
                this.columnCompany4 = new global::System.Data.DataColumn("Company4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany4);
                this.columnBlankBankStock = new global::System.Data.DataColumn("BlankBankStock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlankBankStock);
                this.columnExField1 = new global::System.Data.DataColumn("ExField1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExField1);
                this.columnExField2 = new global::System.Data.DataColumn("ExField2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExField2);
                this.columnExField3 = new global::System.Data.DataColumn("ExField3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExField3);
                this.columnnodisplaymicr = new global::System.Data.DataColumn("nodisplaymicr", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnodisplaymicr);
                this.columnCompanyId = new global::System.Data.DataColumn("CompanyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnBankName.MaxLength = 128;
                this.columnBankInfo1.MaxLength = 256;
                this.columnBankInfo2.MaxLength = 256;
                this.columnBankInfo3.MaxLength = 256;
                this.columnTransitCode.MaxLength = 64;
                this.columnBankRouteNo.MaxLength = 64;
                this.columnBankAccountNo.MaxLength = 64;
                this.columnStartCheckNo.AllowDBNull = false;
                this.columnCurrentCheckNo.AllowDBNull = false;
                this.columnCheckWidth.AllowDBNull = false;
                this.columnCheckHeight.AllowDBNull = false;
                this.columnOffsetLeft.AllowDBNull = false;
                this.columnOffsetRight.AllowDBNull = false;
                this.columnOffsetUp.AllowDBNull = false;
                this.columnOffsetDown.AllowDBNull = false;
                this.columnLogo.MaxLength = 256;
                this.columnSignature.MaxLength = 256;
                this.columnCompany1.MaxLength = 256;
                this.columnCompany2.MaxLength = 256;
                this.columnCompany3.MaxLength = 256;
                this.columnCompany4.MaxLength = 256;
                this.columnBlankBankStock.AllowDBNull = false;
                this.columnExField1.MaxLength = 256;
                this.columnExField2.AllowDBNull = false;
                this.columnExField3.MaxLength = 256;
                this.columnnodisplaymicr.AllowDBNull = false;
                this.columnCompanyId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T100Row NewT100Row() {
                return ((T100Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T100Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T100Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T100RowChanged != null)) {
                    this.T100RowChanged(this, new T100RowChangeEvent(((T100Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T100RowChanging != null)) {
                    this.T100RowChanging(this, new T100RowChangeEvent(((T100Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T100RowDeleted != null)) {
                    this.T100RowDeleted(this, new T100RowChangeEvent(((T100Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T100RowDeleting != null)) {
                    this.T100RowDeleting(this, new T100RowChangeEvent(((T100Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT100Row(T100Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T100DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T102DataTable : global::System.Data.TypedTableBase<T102Row> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnCodeMap;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnAnnualLimit;
            
            private global::System.Data.DataColumn columnTaxable;
            
            private global::System.Data.DataColumn columnFICATaxable;
            
            private global::System.Data.DataColumn columnPctofIncome;
            
            private global::System.Data.DataColumn columnEnabled;
            
            private global::System.Data.DataColumn columnW2Box10;
            
            private global::System.Data.DataColumn columnW2Box12;
            
            private global::System.Data.DataColumn columnW2Code;
            
            private global::System.Data.DataColumn columnExField1;
            
            private global::System.Data.DataColumn columnExField2;
            
            private global::System.Data.DataColumn columnExField3;
            
            private global::System.Data.DataColumn columnExField4;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnCompanyId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T102DataTable() {
                this.TableName = "T102";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T102DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T102DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeMapColumn {
                get {
                    return this.columnCodeMap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnnualLimitColumn {
                get {
                    return this.columnAnnualLimit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxableColumn {
                get {
                    return this.columnTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FICATaxableColumn {
                get {
                    return this.columnFICATaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PctofIncomeColumn {
                get {
                    return this.columnPctofIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnabledColumn {
                get {
                    return this.columnEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn W2Box10Column {
                get {
                    return this.columnW2Box10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn W2Box12Column {
                get {
                    return this.columnW2Box12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn W2CodeColumn {
                get {
                    return this.columnW2Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExField1Column {
                get {
                    return this.columnExField1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExField2Column {
                get {
                    return this.columnExField2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExField3Column {
                get {
                    return this.columnExField3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExField4Column {
                get {
                    return this.columnExField4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIdColumn {
                get {
                    return this.columnCompanyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T102Row this[int index] {
                get {
                    return ((T102Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T102RowChangeEventHandler T102RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T102RowChangeEventHandler T102RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T102RowChangeEventHandler T102RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T102RowChangeEventHandler T102RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT102Row(T102Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T102Row AddT102Row(
                        System.Guid Id, 
                        int ItemId, 
                        string CodeMap, 
                        string Description, 
                        double AnnualLimit, 
                        bool Taxable, 
                        bool FICATaxable, 
                        bool PctofIncome, 
                        bool Enabled, 
                        bool W2Box10, 
                        bool W2Box12, 
                        string W2Code, 
                        string ExField1, 
                        int ExField2, 
                        string ExField3, 
                        int ExField4, 
                        int Type, 
                        CompanyRow _parentCompanyRowByFK_dbo_T102_dbo_Company_CompanyId) {
                T102Row rowT102Row = ((T102Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        ItemId,
                        CodeMap,
                        Description,
                        AnnualLimit,
                        Taxable,
                        FICATaxable,
                        PctofIncome,
                        Enabled,
                        W2Box10,
                        W2Box12,
                        W2Code,
                        ExField1,
                        ExField2,
                        ExField3,
                        ExField4,
                        Type,
                        null};
                if ((_parentCompanyRowByFK_dbo_T102_dbo_Company_CompanyId != null)) {
                    columnValuesArray[17] = _parentCompanyRowByFK_dbo_T102_dbo_Company_CompanyId[0];
                }
                rowT102Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowT102Row);
                return rowT102Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T102Row FindById(System.Guid Id) {
                return ((T102Row)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T102DataTable cln = ((T102DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T102DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnItemId = base.Columns["ItemId"];
                this.columnCodeMap = base.Columns["CodeMap"];
                this.columnDescription = base.Columns["Description"];
                this.columnAnnualLimit = base.Columns["AnnualLimit"];
                this.columnTaxable = base.Columns["Taxable"];
                this.columnFICATaxable = base.Columns["FICATaxable"];
                this.columnPctofIncome = base.Columns["PctofIncome"];
                this.columnEnabled = base.Columns["Enabled"];
                this.columnW2Box10 = base.Columns["W2Box10"];
                this.columnW2Box12 = base.Columns["W2Box12"];
                this.columnW2Code = base.Columns["W2Code"];
                this.columnExField1 = base.Columns["ExField1"];
                this.columnExField2 = base.Columns["ExField2"];
                this.columnExField3 = base.Columns["ExField3"];
                this.columnExField4 = base.Columns["ExField4"];
                this.columnType = base.Columns["Type"];
                this.columnCompanyId = base.Columns["CompanyId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnCodeMap = new global::System.Data.DataColumn("CodeMap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeMap);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnAnnualLimit = new global::System.Data.DataColumn("AnnualLimit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnualLimit);
                this.columnTaxable = new global::System.Data.DataColumn("Taxable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxable);
                this.columnFICATaxable = new global::System.Data.DataColumn("FICATaxable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFICATaxable);
                this.columnPctofIncome = new global::System.Data.DataColumn("PctofIncome", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPctofIncome);
                this.columnEnabled = new global::System.Data.DataColumn("Enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnabled);
                this.columnW2Box10 = new global::System.Data.DataColumn("W2Box10", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW2Box10);
                this.columnW2Box12 = new global::System.Data.DataColumn("W2Box12", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW2Box12);
                this.columnW2Code = new global::System.Data.DataColumn("W2Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW2Code);
                this.columnExField1 = new global::System.Data.DataColumn("ExField1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExField1);
                this.columnExField2 = new global::System.Data.DataColumn("ExField2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExField2);
                this.columnExField3 = new global::System.Data.DataColumn("ExField3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExField3);
                this.columnExField4 = new global::System.Data.DataColumn("ExField4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExField4);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnCompanyId = new global::System.Data.DataColumn("CompanyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnItemId.AllowDBNull = false;
                this.columnCodeMap.AllowDBNull = false;
                this.columnCodeMap.MaxLength = 16;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 64;
                this.columnAnnualLimit.AllowDBNull = false;
                this.columnTaxable.AllowDBNull = false;
                this.columnFICATaxable.AllowDBNull = false;
                this.columnPctofIncome.AllowDBNull = false;
                this.columnEnabled.AllowDBNull = false;
                this.columnW2Box10.AllowDBNull = false;
                this.columnW2Box12.AllowDBNull = false;
                this.columnW2Code.MaxLength = 64;
                this.columnExField1.MaxLength = 64;
                this.columnExField2.AllowDBNull = false;
                this.columnExField3.MaxLength = 64;
                this.columnExField4.AllowDBNull = false;
                this.columnType.AllowDBNull = false;
                this.columnCompanyId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T102Row NewT102Row() {
                return ((T102Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T102Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T102Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T102RowChanged != null)) {
                    this.T102RowChanged(this, new T102RowChangeEvent(((T102Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T102RowChanging != null)) {
                    this.T102RowChanging(this, new T102RowChangeEvent(((T102Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T102RowDeleted != null)) {
                    this.T102RowDeleted(this, new T102RowChangeEvent(((T102Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T102RowDeleting != null)) {
                    this.T102RowDeleting(this, new T102RowChangeEvent(((T102Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT102Row(T102Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T102DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T105DataTable : global::System.Data.TypedTableBase<T105Row> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnDateEndPeriod;
            
            private global::System.Data.DataColumn columnDateStartPeriod;
            
            private global::System.Data.DataColumn columnDateSubmitted;
            
            private global::System.Data.DataColumn columnLName;
            
            private global::System.Data.DataColumn columnFName;
            
            private global::System.Data.DataColumn columnMInit;
            
            private global::System.Data.DataColumn columnSSN;
            
            private global::System.Data.DataColumn columnF99;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnZipCode;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnF100;
            
            private global::System.Data.DataColumn columnF101;
            
            private global::System.Data.DataColumn columnF102;
            
            private global::System.Data.DataColumn columnF103;
            
            private global::System.Data.DataColumn columnF104;
            
            private global::System.Data.DataColumn columnF105;
            
            private global::System.Data.DataColumn columnS100;
            
            private global::System.Data.DataColumn columnS101;
            
            private global::System.Data.DataColumn columnS102;
            
            private global::System.Data.DataColumn columnS103;
            
            private global::System.Data.DataColumn columnS104;
            
            private global::System.Data.DataColumn columnS105;
            
            private global::System.Data.DataColumn columnS106;
            
            private global::System.Data.DataColumn columnS107;
            
            private global::System.Data.DataColumn columnS108;
            
            private global::System.Data.DataColumn columnS109;
            
            private global::System.Data.DataColumn columnS110;
            
            private global::System.Data.DataColumn columnS111;
            
            private global::System.Data.DataColumn columnS112;
            
            private global::System.Data.DataColumn columnS113;
            
            private global::System.Data.DataColumn columnS114;
            
            private global::System.Data.DataColumn columnS115;
            
            private global::System.Data.DataColumn columnS116;
            
            private global::System.Data.DataColumn columnS117;
            
            private global::System.Data.DataColumn columnS118;
            
            private global::System.Data.DataColumn columnS119;
            
            private global::System.Data.DataColumn columnS120;
            
            private global::System.Data.DataColumn columnS121;
            
            private global::System.Data.DataColumn columnS122;
            
            private global::System.Data.DataColumn columnF106;
            
            private global::System.Data.DataColumn columnF107;
            
            private global::System.Data.DataColumn columnF108;
            
            private global::System.Data.DataColumn columnF109;
            
            private global::System.Data.DataColumn columnF110;
            
            private global::System.Data.DataColumn columnF111;
            
            private global::System.Data.DataColumn columnF112;
            
            private global::System.Data.DataColumn columnF113;
            
            private global::System.Data.DataColumn columnF114;
            
            private global::System.Data.DataColumn columnF115;
            
            private global::System.Data.DataColumn columnF116;
            
            private global::System.Data.DataColumn columnF117;
            
            private global::System.Data.DataColumn columnF118;
            
            private global::System.Data.DataColumn columnF119;
            
            private global::System.Data.DataColumn columnF120;
            
            private global::System.Data.DataColumn columnF121;
            
            private global::System.Data.DataColumn columnF122;
            
            private global::System.Data.DataColumn columnS1231;
            
            private global::System.Data.DataColumn columnS1241;
            
            private global::System.Data.DataColumn columnS1232;
            
            private global::System.Data.DataColumn columnS1242;
            
            private global::System.Data.DataColumn columnS1233;
            
            private global::System.Data.DataColumn columnS1243;
            
            private global::System.Data.DataColumn columnS1234;
            
            private global::System.Data.DataColumn columnS1244;
            
            private global::System.Data.DataColumn columnS1235;
            
            private global::System.Data.DataColumn columnS1245;
            
            private global::System.Data.DataColumn columnS1251;
            
            private global::System.Data.DataColumn columnS1261;
            
            private global::System.Data.DataColumn columnS1252;
            
            private global::System.Data.DataColumn columnS1262;
            
            private global::System.Data.DataColumn columnS1253;
            
            private global::System.Data.DataColumn columnS1263;
            
            private global::System.Data.DataColumn columnS1254;
            
            private global::System.Data.DataColumn columnS1264;
            
            private global::System.Data.DataColumn columnS1255;
            
            private global::System.Data.DataColumn columnS1265;
            
            private global::System.Data.DataColumn columnS127;
            
            private global::System.Data.DataColumn columnF1231;
            
            private global::System.Data.DataColumn columnF1232;
            
            private global::System.Data.DataColumn columnF1233;
            
            private global::System.Data.DataColumn columnF1234;
            
            private global::System.Data.DataColumn columnF1235;
            
            private global::System.Data.DataColumn columnF124;
            
            private global::System.Data.DataColumn columnF125;
            
            private global::System.Data.DataColumn columnIsW2StatutoryEmployee;
            
            private global::System.Data.DataColumn columnIsW2RetirementPlan;
            
            private global::System.Data.DataColumn columnDoesReceiveAdvanceEIC;
            
            private global::System.Data.DataColumn columnEmployerSocialSecurity;
            
            private global::System.Data.DataColumn columnEmployerMedicare;
            
            private global::System.Data.DataColumn columnAdvanceEIC;
            
            private global::System.Data.DataColumn columnCheckNo;
            
            private global::System.Data.DataColumn columnDateLastEdit;
            
            private global::System.Data.DataColumn columnChecked;
            
            private global::System.Data.DataColumn columnS1236;
            
            private global::System.Data.DataColumn columnS1246;
            
            private global::System.Data.DataColumn columnS1237;
            
            private global::System.Data.DataColumn columnS1247;
            
            private global::System.Data.DataColumn columnF1236;
            
            private global::System.Data.DataColumn columnF1237;
            
            private global::System.Data.DataColumn columnHourlyPay1;
            
            private global::System.Data.DataColumn columnHourlyPay2;
            
            private global::System.Data.DataColumn columnHourlyPay3;
            
            private global::System.Data.DataColumn columnHourlyPay4;
            
            private global::System.Data.DataColumn columnSickRate;
            
            private global::System.Data.DataColumn columnVacationRate;
            
            private global::System.Data.DataColumn columnIsPaid;
            
            private global::System.Data.DataColumn columnis1099Employee;
            
            private global::System.Data.DataColumn columnPTOAcchours;
            
            private global::System.Data.DataColumn columnVacAccHours;
            
            private global::System.Data.DataColumn columnprintPTOStub;
            
            private global::System.Data.DataColumn columnPTOAccRate;
            
            private global::System.Data.DataColumn columnVacAccRate;
            
            private global::System.Data.DataColumn columnPTOCapHours;
            
            private global::System.Data.DataColumn columnVacCapHours;
            
            private global::System.Data.DataColumn columnisPayrollSetup;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnEmployeeId;
            
            private global::System.Data.DataColumn columnCompanyId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T105DataTable() {
                this.TableName = "T105";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T105DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T105DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateEndPeriodColumn {
                get {
                    return this.columnDateEndPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateStartPeriodColumn {
                get {
                    return this.columnDateStartPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateSubmittedColumn {
                get {
                    return this.columnDateSubmitted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LNameColumn {
                get {
                    return this.columnLName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FNameColumn {
                get {
                    return this.columnFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MInitColumn {
                get {
                    return this.columnMInit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSNColumn {
                get {
                    return this.columnSSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F99Column {
                get {
                    return this.columnF99;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZipCodeColumn {
                get {
                    return this.columnZipCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F100Column {
                get {
                    return this.columnF100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F101Column {
                get {
                    return this.columnF101;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F102Column {
                get {
                    return this.columnF102;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F103Column {
                get {
                    return this.columnF103;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F104Column {
                get {
                    return this.columnF104;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F105Column {
                get {
                    return this.columnF105;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S100Column {
                get {
                    return this.columnS100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S101Column {
                get {
                    return this.columnS101;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S102Column {
                get {
                    return this.columnS102;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S103Column {
                get {
                    return this.columnS103;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S104Column {
                get {
                    return this.columnS104;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S105Column {
                get {
                    return this.columnS105;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S106Column {
                get {
                    return this.columnS106;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S107Column {
                get {
                    return this.columnS107;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S108Column {
                get {
                    return this.columnS108;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S109Column {
                get {
                    return this.columnS109;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S110Column {
                get {
                    return this.columnS110;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S111Column {
                get {
                    return this.columnS111;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S112Column {
                get {
                    return this.columnS112;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S113Column {
                get {
                    return this.columnS113;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S114Column {
                get {
                    return this.columnS114;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S115Column {
                get {
                    return this.columnS115;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S116Column {
                get {
                    return this.columnS116;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S117Column {
                get {
                    return this.columnS117;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S118Column {
                get {
                    return this.columnS118;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S119Column {
                get {
                    return this.columnS119;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S120Column {
                get {
                    return this.columnS120;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S121Column {
                get {
                    return this.columnS121;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S122Column {
                get {
                    return this.columnS122;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F106Column {
                get {
                    return this.columnF106;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F107Column {
                get {
                    return this.columnF107;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F108Column {
                get {
                    return this.columnF108;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F109Column {
                get {
                    return this.columnF109;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F110Column {
                get {
                    return this.columnF110;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F111Column {
                get {
                    return this.columnF111;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F112Column {
                get {
                    return this.columnF112;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F113Column {
                get {
                    return this.columnF113;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F114Column {
                get {
                    return this.columnF114;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F115Column {
                get {
                    return this.columnF115;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F116Column {
                get {
                    return this.columnF116;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F117Column {
                get {
                    return this.columnF117;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F118Column {
                get {
                    return this.columnF118;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F119Column {
                get {
                    return this.columnF119;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F120Column {
                get {
                    return this.columnF120;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F121Column {
                get {
                    return this.columnF121;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F122Column {
                get {
                    return this.columnF122;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1231Column {
                get {
                    return this.columnS1231;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1241Column {
                get {
                    return this.columnS1241;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1232Column {
                get {
                    return this.columnS1232;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1242Column {
                get {
                    return this.columnS1242;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1233Column {
                get {
                    return this.columnS1233;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1243Column {
                get {
                    return this.columnS1243;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1234Column {
                get {
                    return this.columnS1234;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1244Column {
                get {
                    return this.columnS1244;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1235Column {
                get {
                    return this.columnS1235;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1245Column {
                get {
                    return this.columnS1245;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1251Column {
                get {
                    return this.columnS1251;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1261Column {
                get {
                    return this.columnS1261;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1252Column {
                get {
                    return this.columnS1252;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1262Column {
                get {
                    return this.columnS1262;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1253Column {
                get {
                    return this.columnS1253;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1263Column {
                get {
                    return this.columnS1263;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1254Column {
                get {
                    return this.columnS1254;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1264Column {
                get {
                    return this.columnS1264;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1255Column {
                get {
                    return this.columnS1255;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1265Column {
                get {
                    return this.columnS1265;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S127Column {
                get {
                    return this.columnS127;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1231Column {
                get {
                    return this.columnF1231;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1232Column {
                get {
                    return this.columnF1232;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1233Column {
                get {
                    return this.columnF1233;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1234Column {
                get {
                    return this.columnF1234;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1235Column {
                get {
                    return this.columnF1235;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F124Column {
                get {
                    return this.columnF124;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F125Column {
                get {
                    return this.columnF125;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsW2StatutoryEmployeeColumn {
                get {
                    return this.columnIsW2StatutoryEmployee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsW2RetirementPlanColumn {
                get {
                    return this.columnIsW2RetirementPlan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoesReceiveAdvanceEICColumn {
                get {
                    return this.columnDoesReceiveAdvanceEIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployerSocialSecurityColumn {
                get {
                    return this.columnEmployerSocialSecurity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployerMedicareColumn {
                get {
                    return this.columnEmployerMedicare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdvanceEICColumn {
                get {
                    return this.columnAdvanceEIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckNoColumn {
                get {
                    return this.columnCheckNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateLastEditColumn {
                get {
                    return this.columnDateLastEdit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckedColumn {
                get {
                    return this.columnChecked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1236Column {
                get {
                    return this.columnS1236;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1246Column {
                get {
                    return this.columnS1246;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1237Column {
                get {
                    return this.columnS1237;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn S1247Column {
                get {
                    return this.columnS1247;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1236Column {
                get {
                    return this.columnF1236;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F1237Column {
                get {
                    return this.columnF1237;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourlyPay1Column {
                get {
                    return this.columnHourlyPay1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourlyPay2Column {
                get {
                    return this.columnHourlyPay2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourlyPay3Column {
                get {
                    return this.columnHourlyPay3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HourlyPay4Column {
                get {
                    return this.columnHourlyPay4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SickRateColumn {
                get {
                    return this.columnSickRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VacationRateColumn {
                get {
                    return this.columnVacationRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsPaidColumn {
                get {
                    return this.columnIsPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn is1099EmployeeColumn {
                get {
                    return this.columnis1099Employee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PTOAcchoursColumn {
                get {
                    return this.columnPTOAcchours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VacAccHoursColumn {
                get {
                    return this.columnVacAccHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn printPTOStubColumn {
                get {
                    return this.columnprintPTOStub;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PTOAccRateColumn {
                get {
                    return this.columnPTOAccRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VacAccRateColumn {
                get {
                    return this.columnVacAccRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PTOCapHoursColumn {
                get {
                    return this.columnPTOCapHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VacCapHoursColumn {
                get {
                    return this.columnVacCapHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isPayrollSetupColumn {
                get {
                    return this.columnisPayrollSetup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIdColumn {
                get {
                    return this.columnEmployeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIdColumn {
                get {
                    return this.columnCompanyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T105Row this[int index] {
                get {
                    return ((T105Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T105RowChangeEventHandler T105RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T105RowChangeEventHandler T105RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T105RowChangeEventHandler T105RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T105RowChangeEventHandler T105RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT105Row(T105Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T105Row AddT105Row(
                        System.Guid Id, 
                        System.DateTime DateEndPeriod, 
                        System.DateTime DateStartPeriod, 
                        System.DateTime DateSubmitted, 
                        string LName, 
                        string FName, 
                        string MInit, 
                        string SSN, 
                        int F99, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string ZipCode, 
                        string State, 
                        string Phone, 
                        float F100, 
                        float F101, 
                        float F102, 
                        System.DateTime F103, 
                        System.DateTime F104, 
                        System.DateTime F105, 
                        float S100, 
                        float S101, 
                        float S102, 
                        float S103, 
                        float S104, 
                        float S105, 
                        float S106, 
                        float S107, 
                        float S108, 
                        float S109, 
                        float S110, 
                        float S111, 
                        float S112, 
                        float S113, 
                        float S114, 
                        float S115, 
                        double S116, 
                        double S117, 
                        float S118, 
                        float S119, 
                        float S120, 
                        float S121, 
                        float S122, 
                        string F106, 
                        int F107, 
                        string F108, 
                        string F109, 
                        string F110, 
                        string F111, 
                        int F112, 
                        int F113, 
                        int F114, 
                        int F115, 
                        int F116, 
                        int F117, 
                        int F118, 
                        int F119, 
                        double F120, 
                        float F121, 
                        float F122, 
                        string S1231, 
                        float S1241, 
                        string S1232, 
                        float S1242, 
                        string S1233, 
                        float S1243, 
                        string S1234, 
                        float S1244, 
                        string S1235, 
                        float S1245, 
                        string S1251, 
                        float S1261, 
                        string S1252, 
                        float S1262, 
                        string S1253, 
                        float S1263, 
                        string S1254, 
                        float S1264, 
                        string S1255, 
                        float S1265, 
                        string S127, 
                        double F1231, 
                        double F1232, 
                        double F1233, 
                        double F1234, 
                        double F1235, 
                        int F124, 
                        int F125, 
                        int IsW2StatutoryEmployee, 
                        int IsW2RetirementPlan, 
                        int DoesReceiveAdvanceEIC, 
                        float EmployerSocialSecurity, 
                        float EmployerMedicare, 
                        float AdvanceEIC, 
                        System.DateTime DateLastEdit, 
                        int Checked, 
                        string S1236, 
                        float S1246, 
                        string S1237, 
                        float S1247, 
                        float F1236, 
                        float F1237, 
                        string HourlyPay1, 
                        string HourlyPay2, 
                        string HourlyPay3, 
                        string HourlyPay4, 
                        float SickRate, 
                        float VacationRate, 
                        int IsPaid, 
                        int is1099Employee, 
                        float PTOAcchours, 
                        float VacAccHours, 
                        int printPTOStub, 
                        float PTOAccRate, 
                        float VacAccRate, 
                        double PTOCapHours, 
                        double VacCapHours, 
                        int isPayrollSetup, 
                        string Memo, 
                        EmployeeRow _parentEmployeeRowByFK_dbo_T105_dbo_Employee_EmployeeId, 
                        CompanyRow _parentCompanyRowByFK_dbo_T105_dbo_Company_CompanyId) {
                T105Row rowT105Row = ((T105Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        DateEndPeriod,
                        DateStartPeriod,
                        DateSubmitted,
                        LName,
                        FName,
                        MInit,
                        SSN,
                        F99,
                        Address1,
                        Address2,
                        City,
                        ZipCode,
                        State,
                        Phone,
                        F100,
                        F101,
                        F102,
                        F103,
                        F104,
                        F105,
                        S100,
                        S101,
                        S102,
                        S103,
                        S104,
                        S105,
                        S106,
                        S107,
                        S108,
                        S109,
                        S110,
                        S111,
                        S112,
                        S113,
                        S114,
                        S115,
                        S116,
                        S117,
                        S118,
                        S119,
                        S120,
                        S121,
                        S122,
                        F106,
                        F107,
                        F108,
                        F109,
                        F110,
                        F111,
                        F112,
                        F113,
                        F114,
                        F115,
                        F116,
                        F117,
                        F118,
                        F119,
                        F120,
                        F121,
                        F122,
                        S1231,
                        S1241,
                        S1232,
                        S1242,
                        S1233,
                        S1243,
                        S1234,
                        S1244,
                        S1235,
                        S1245,
                        S1251,
                        S1261,
                        S1252,
                        S1262,
                        S1253,
                        S1263,
                        S1254,
                        S1264,
                        S1255,
                        S1265,
                        S127,
                        F1231,
                        F1232,
                        F1233,
                        F1234,
                        F1235,
                        F124,
                        F125,
                        IsW2StatutoryEmployee,
                        IsW2RetirementPlan,
                        DoesReceiveAdvanceEIC,
                        EmployerSocialSecurity,
                        EmployerMedicare,
                        AdvanceEIC,
                        null,
                        DateLastEdit,
                        Checked,
                        S1236,
                        S1246,
                        S1237,
                        S1247,
                        F1236,
                        F1237,
                        HourlyPay1,
                        HourlyPay2,
                        HourlyPay3,
                        HourlyPay4,
                        SickRate,
                        VacationRate,
                        IsPaid,
                        is1099Employee,
                        PTOAcchours,
                        VacAccHours,
                        printPTOStub,
                        PTOAccRate,
                        VacAccRate,
                        PTOCapHours,
                        VacCapHours,
                        isPayrollSetup,
                        Memo,
                        null,
                        null};
                if ((_parentEmployeeRowByFK_dbo_T105_dbo_Employee_EmployeeId != null)) {
                    columnValuesArray[121] = _parentEmployeeRowByFK_dbo_T105_dbo_Employee_EmployeeId[0];
                }
                if ((_parentCompanyRowByFK_dbo_T105_dbo_Company_CompanyId != null)) {
                    columnValuesArray[122] = _parentCompanyRowByFK_dbo_T105_dbo_Company_CompanyId[0];
                }
                rowT105Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowT105Row);
                return rowT105Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T105Row FindById(System.Guid Id) {
                return ((T105Row)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T105DataTable cln = ((T105DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T105DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnDateEndPeriod = base.Columns["DateEndPeriod"];
                this.columnDateStartPeriod = base.Columns["DateStartPeriod"];
                this.columnDateSubmitted = base.Columns["DateSubmitted"];
                this.columnLName = base.Columns["LName"];
                this.columnFName = base.Columns["FName"];
                this.columnMInit = base.Columns["MInit"];
                this.columnSSN = base.Columns["SSN"];
                this.columnF99 = base.Columns["F99"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnZipCode = base.Columns["ZipCode"];
                this.columnState = base.Columns["State"];
                this.columnPhone = base.Columns["Phone"];
                this.columnF100 = base.Columns["F100"];
                this.columnF101 = base.Columns["F101"];
                this.columnF102 = base.Columns["F102"];
                this.columnF103 = base.Columns["F103"];
                this.columnF104 = base.Columns["F104"];
                this.columnF105 = base.Columns["F105"];
                this.columnS100 = base.Columns["S100"];
                this.columnS101 = base.Columns["S101"];
                this.columnS102 = base.Columns["S102"];
                this.columnS103 = base.Columns["S103"];
                this.columnS104 = base.Columns["S104"];
                this.columnS105 = base.Columns["S105"];
                this.columnS106 = base.Columns["S106"];
                this.columnS107 = base.Columns["S107"];
                this.columnS108 = base.Columns["S108"];
                this.columnS109 = base.Columns["S109"];
                this.columnS110 = base.Columns["S110"];
                this.columnS111 = base.Columns["S111"];
                this.columnS112 = base.Columns["S112"];
                this.columnS113 = base.Columns["S113"];
                this.columnS114 = base.Columns["S114"];
                this.columnS115 = base.Columns["S115"];
                this.columnS116 = base.Columns["S116"];
                this.columnS117 = base.Columns["S117"];
                this.columnS118 = base.Columns["S118"];
                this.columnS119 = base.Columns["S119"];
                this.columnS120 = base.Columns["S120"];
                this.columnS121 = base.Columns["S121"];
                this.columnS122 = base.Columns["S122"];
                this.columnF106 = base.Columns["F106"];
                this.columnF107 = base.Columns["F107"];
                this.columnF108 = base.Columns["F108"];
                this.columnF109 = base.Columns["F109"];
                this.columnF110 = base.Columns["F110"];
                this.columnF111 = base.Columns["F111"];
                this.columnF112 = base.Columns["F112"];
                this.columnF113 = base.Columns["F113"];
                this.columnF114 = base.Columns["F114"];
                this.columnF115 = base.Columns["F115"];
                this.columnF116 = base.Columns["F116"];
                this.columnF117 = base.Columns["F117"];
                this.columnF118 = base.Columns["F118"];
                this.columnF119 = base.Columns["F119"];
                this.columnF120 = base.Columns["F120"];
                this.columnF121 = base.Columns["F121"];
                this.columnF122 = base.Columns["F122"];
                this.columnS1231 = base.Columns["S1231"];
                this.columnS1241 = base.Columns["S1241"];
                this.columnS1232 = base.Columns["S1232"];
                this.columnS1242 = base.Columns["S1242"];
                this.columnS1233 = base.Columns["S1233"];
                this.columnS1243 = base.Columns["S1243"];
                this.columnS1234 = base.Columns["S1234"];
                this.columnS1244 = base.Columns["S1244"];
                this.columnS1235 = base.Columns["S1235"];
                this.columnS1245 = base.Columns["S1245"];
                this.columnS1251 = base.Columns["S1251"];
                this.columnS1261 = base.Columns["S1261"];
                this.columnS1252 = base.Columns["S1252"];
                this.columnS1262 = base.Columns["S1262"];
                this.columnS1253 = base.Columns["S1253"];
                this.columnS1263 = base.Columns["S1263"];
                this.columnS1254 = base.Columns["S1254"];
                this.columnS1264 = base.Columns["S1264"];
                this.columnS1255 = base.Columns["S1255"];
                this.columnS1265 = base.Columns["S1265"];
                this.columnS127 = base.Columns["S127"];
                this.columnF1231 = base.Columns["F1231"];
                this.columnF1232 = base.Columns["F1232"];
                this.columnF1233 = base.Columns["F1233"];
                this.columnF1234 = base.Columns["F1234"];
                this.columnF1235 = base.Columns["F1235"];
                this.columnF124 = base.Columns["F124"];
                this.columnF125 = base.Columns["F125"];
                this.columnIsW2StatutoryEmployee = base.Columns["IsW2StatutoryEmployee"];
                this.columnIsW2RetirementPlan = base.Columns["IsW2RetirementPlan"];
                this.columnDoesReceiveAdvanceEIC = base.Columns["DoesReceiveAdvanceEIC"];
                this.columnEmployerSocialSecurity = base.Columns["EmployerSocialSecurity"];
                this.columnEmployerMedicare = base.Columns["EmployerMedicare"];
                this.columnAdvanceEIC = base.Columns["AdvanceEIC"];
                this.columnCheckNo = base.Columns["CheckNo"];
                this.columnDateLastEdit = base.Columns["DateLastEdit"];
                this.columnChecked = base.Columns["Checked"];
                this.columnS1236 = base.Columns["S1236"];
                this.columnS1246 = base.Columns["S1246"];
                this.columnS1237 = base.Columns["S1237"];
                this.columnS1247 = base.Columns["S1247"];
                this.columnF1236 = base.Columns["F1236"];
                this.columnF1237 = base.Columns["F1237"];
                this.columnHourlyPay1 = base.Columns["HourlyPay1"];
                this.columnHourlyPay2 = base.Columns["HourlyPay2"];
                this.columnHourlyPay3 = base.Columns["HourlyPay3"];
                this.columnHourlyPay4 = base.Columns["HourlyPay4"];
                this.columnSickRate = base.Columns["SickRate"];
                this.columnVacationRate = base.Columns["VacationRate"];
                this.columnIsPaid = base.Columns["IsPaid"];
                this.columnis1099Employee = base.Columns["is1099Employee"];
                this.columnPTOAcchours = base.Columns["PTOAcchours"];
                this.columnVacAccHours = base.Columns["VacAccHours"];
                this.columnprintPTOStub = base.Columns["printPTOStub"];
                this.columnPTOAccRate = base.Columns["PTOAccRate"];
                this.columnVacAccRate = base.Columns["VacAccRate"];
                this.columnPTOCapHours = base.Columns["PTOCapHours"];
                this.columnVacCapHours = base.Columns["VacCapHours"];
                this.columnisPayrollSetup = base.Columns["isPayrollSetup"];
                this.columnMemo = base.Columns["Memo"];
                this.columnEmployeeId = base.Columns["EmployeeId"];
                this.columnCompanyId = base.Columns["CompanyId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnDateEndPeriod = new global::System.Data.DataColumn("DateEndPeriod", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateEndPeriod);
                this.columnDateStartPeriod = new global::System.Data.DataColumn("DateStartPeriod", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateStartPeriod);
                this.columnDateSubmitted = new global::System.Data.DataColumn("DateSubmitted", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateSubmitted);
                this.columnLName = new global::System.Data.DataColumn("LName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLName);
                this.columnFName = new global::System.Data.DataColumn("FName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFName);
                this.columnMInit = new global::System.Data.DataColumn("MInit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMInit);
                this.columnSSN = new global::System.Data.DataColumn("SSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSN);
                this.columnF99 = new global::System.Data.DataColumn("F99", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF99);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnZipCode = new global::System.Data.DataColumn("ZipCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZipCode);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnF100 = new global::System.Data.DataColumn("F100", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF100);
                this.columnF101 = new global::System.Data.DataColumn("F101", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF101);
                this.columnF102 = new global::System.Data.DataColumn("F102", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF102);
                this.columnF103 = new global::System.Data.DataColumn("F103", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF103);
                this.columnF104 = new global::System.Data.DataColumn("F104", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF104);
                this.columnF105 = new global::System.Data.DataColumn("F105", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF105);
                this.columnS100 = new global::System.Data.DataColumn("S100", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS100);
                this.columnS101 = new global::System.Data.DataColumn("S101", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS101);
                this.columnS102 = new global::System.Data.DataColumn("S102", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS102);
                this.columnS103 = new global::System.Data.DataColumn("S103", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS103);
                this.columnS104 = new global::System.Data.DataColumn("S104", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS104);
                this.columnS105 = new global::System.Data.DataColumn("S105", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS105);
                this.columnS106 = new global::System.Data.DataColumn("S106", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS106);
                this.columnS107 = new global::System.Data.DataColumn("S107", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS107);
                this.columnS108 = new global::System.Data.DataColumn("S108", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS108);
                this.columnS109 = new global::System.Data.DataColumn("S109", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS109);
                this.columnS110 = new global::System.Data.DataColumn("S110", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS110);
                this.columnS111 = new global::System.Data.DataColumn("S111", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS111);
                this.columnS112 = new global::System.Data.DataColumn("S112", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS112);
                this.columnS113 = new global::System.Data.DataColumn("S113", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS113);
                this.columnS114 = new global::System.Data.DataColumn("S114", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS114);
                this.columnS115 = new global::System.Data.DataColumn("S115", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS115);
                this.columnS116 = new global::System.Data.DataColumn("S116", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS116);
                this.columnS117 = new global::System.Data.DataColumn("S117", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS117);
                this.columnS118 = new global::System.Data.DataColumn("S118", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS118);
                this.columnS119 = new global::System.Data.DataColumn("S119", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS119);
                this.columnS120 = new global::System.Data.DataColumn("S120", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS120);
                this.columnS121 = new global::System.Data.DataColumn("S121", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS121);
                this.columnS122 = new global::System.Data.DataColumn("S122", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS122);
                this.columnF106 = new global::System.Data.DataColumn("F106", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF106);
                this.columnF107 = new global::System.Data.DataColumn("F107", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF107);
                this.columnF108 = new global::System.Data.DataColumn("F108", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF108);
                this.columnF109 = new global::System.Data.DataColumn("F109", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF109);
                this.columnF110 = new global::System.Data.DataColumn("F110", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF110);
                this.columnF111 = new global::System.Data.DataColumn("F111", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF111);
                this.columnF112 = new global::System.Data.DataColumn("F112", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF112);
                this.columnF113 = new global::System.Data.DataColumn("F113", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF113);
                this.columnF114 = new global::System.Data.DataColumn("F114", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF114);
                this.columnF115 = new global::System.Data.DataColumn("F115", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF115);
                this.columnF116 = new global::System.Data.DataColumn("F116", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF116);
                this.columnF117 = new global::System.Data.DataColumn("F117", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF117);
                this.columnF118 = new global::System.Data.DataColumn("F118", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF118);
                this.columnF119 = new global::System.Data.DataColumn("F119", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF119);
                this.columnF120 = new global::System.Data.DataColumn("F120", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF120);
                this.columnF121 = new global::System.Data.DataColumn("F121", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF121);
                this.columnF122 = new global::System.Data.DataColumn("F122", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF122);
                this.columnS1231 = new global::System.Data.DataColumn("S1231", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1231);
                this.columnS1241 = new global::System.Data.DataColumn("S1241", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1241);
                this.columnS1232 = new global::System.Data.DataColumn("S1232", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1232);
                this.columnS1242 = new global::System.Data.DataColumn("S1242", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1242);
                this.columnS1233 = new global::System.Data.DataColumn("S1233", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1233);
                this.columnS1243 = new global::System.Data.DataColumn("S1243", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1243);
                this.columnS1234 = new global::System.Data.DataColumn("S1234", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1234);
                this.columnS1244 = new global::System.Data.DataColumn("S1244", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1244);
                this.columnS1235 = new global::System.Data.DataColumn("S1235", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1235);
                this.columnS1245 = new global::System.Data.DataColumn("S1245", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1245);
                this.columnS1251 = new global::System.Data.DataColumn("S1251", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1251);
                this.columnS1261 = new global::System.Data.DataColumn("S1261", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1261);
                this.columnS1252 = new global::System.Data.DataColumn("S1252", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1252);
                this.columnS1262 = new global::System.Data.DataColumn("S1262", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1262);
                this.columnS1253 = new global::System.Data.DataColumn("S1253", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1253);
                this.columnS1263 = new global::System.Data.DataColumn("S1263", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1263);
                this.columnS1254 = new global::System.Data.DataColumn("S1254", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1254);
                this.columnS1264 = new global::System.Data.DataColumn("S1264", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1264);
                this.columnS1255 = new global::System.Data.DataColumn("S1255", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1255);
                this.columnS1265 = new global::System.Data.DataColumn("S1265", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1265);
                this.columnS127 = new global::System.Data.DataColumn("S127", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS127);
                this.columnF1231 = new global::System.Data.DataColumn("F1231", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1231);
                this.columnF1232 = new global::System.Data.DataColumn("F1232", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1232);
                this.columnF1233 = new global::System.Data.DataColumn("F1233", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1233);
                this.columnF1234 = new global::System.Data.DataColumn("F1234", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1234);
                this.columnF1235 = new global::System.Data.DataColumn("F1235", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1235);
                this.columnF124 = new global::System.Data.DataColumn("F124", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF124);
                this.columnF125 = new global::System.Data.DataColumn("F125", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF125);
                this.columnIsW2StatutoryEmployee = new global::System.Data.DataColumn("IsW2StatutoryEmployee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsW2StatutoryEmployee);
                this.columnIsW2RetirementPlan = new global::System.Data.DataColumn("IsW2RetirementPlan", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsW2RetirementPlan);
                this.columnDoesReceiveAdvanceEIC = new global::System.Data.DataColumn("DoesReceiveAdvanceEIC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoesReceiveAdvanceEIC);
                this.columnEmployerSocialSecurity = new global::System.Data.DataColumn("EmployerSocialSecurity", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployerSocialSecurity);
                this.columnEmployerMedicare = new global::System.Data.DataColumn("EmployerMedicare", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployerMedicare);
                this.columnAdvanceEIC = new global::System.Data.DataColumn("AdvanceEIC", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvanceEIC);
                this.columnCheckNo = new global::System.Data.DataColumn("CheckNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckNo);
                this.columnDateLastEdit = new global::System.Data.DataColumn("DateLastEdit", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateLastEdit);
                this.columnChecked = new global::System.Data.DataColumn("Checked", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChecked);
                this.columnS1236 = new global::System.Data.DataColumn("S1236", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1236);
                this.columnS1246 = new global::System.Data.DataColumn("S1246", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1246);
                this.columnS1237 = new global::System.Data.DataColumn("S1237", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1237);
                this.columnS1247 = new global::System.Data.DataColumn("S1247", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS1247);
                this.columnF1236 = new global::System.Data.DataColumn("F1236", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1236);
                this.columnF1237 = new global::System.Data.DataColumn("F1237", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF1237);
                this.columnHourlyPay1 = new global::System.Data.DataColumn("HourlyPay1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourlyPay1);
                this.columnHourlyPay2 = new global::System.Data.DataColumn("HourlyPay2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourlyPay2);
                this.columnHourlyPay3 = new global::System.Data.DataColumn("HourlyPay3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourlyPay3);
                this.columnHourlyPay4 = new global::System.Data.DataColumn("HourlyPay4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHourlyPay4);
                this.columnSickRate = new global::System.Data.DataColumn("SickRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSickRate);
                this.columnVacationRate = new global::System.Data.DataColumn("VacationRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacationRate);
                this.columnIsPaid = new global::System.Data.DataColumn("IsPaid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPaid);
                this.columnis1099Employee = new global::System.Data.DataColumn("is1099Employee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis1099Employee);
                this.columnPTOAcchours = new global::System.Data.DataColumn("PTOAcchours", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTOAcchours);
                this.columnVacAccHours = new global::System.Data.DataColumn("VacAccHours", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAccHours);
                this.columnprintPTOStub = new global::System.Data.DataColumn("printPTOStub", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprintPTOStub);
                this.columnPTOAccRate = new global::System.Data.DataColumn("PTOAccRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTOAccRate);
                this.columnVacAccRate = new global::System.Data.DataColumn("VacAccRate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacAccRate);
                this.columnPTOCapHours = new global::System.Data.DataColumn("PTOCapHours", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPTOCapHours);
                this.columnVacCapHours = new global::System.Data.DataColumn("VacCapHours", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacCapHours);
                this.columnisPayrollSetup = new global::System.Data.DataColumn("isPayrollSetup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisPayrollSetup);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.columnCompanyId = new global::System.Data.DataColumn("CompanyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnDateEndPeriod.AllowDBNull = false;
                this.columnDateStartPeriod.AllowDBNull = false;
                this.columnDateSubmitted.AllowDBNull = false;
                this.columnLName.MaxLength = 64;
                this.columnFName.MaxLength = 64;
                this.columnMInit.MaxLength = 64;
                this.columnSSN.MaxLength = 11;
                this.columnF99.AllowDBNull = false;
                this.columnAddress1.MaxLength = 256;
                this.columnAddress2.MaxLength = 256;
                this.columnCity.MaxLength = 64;
                this.columnZipCode.MaxLength = 16;
                this.columnState.MaxLength = 2;
                this.columnPhone.MaxLength = 16;
                this.columnF100.AllowDBNull = false;
                this.columnF101.AllowDBNull = false;
                this.columnF102.AllowDBNull = false;
                this.columnF103.AllowDBNull = false;
                this.columnF104.AllowDBNull = false;
                this.columnF105.AllowDBNull = false;
                this.columnS100.AllowDBNull = false;
                this.columnS101.AllowDBNull = false;
                this.columnS102.AllowDBNull = false;
                this.columnS103.AllowDBNull = false;
                this.columnS104.AllowDBNull = false;
                this.columnS105.AllowDBNull = false;
                this.columnS106.AllowDBNull = false;
                this.columnS107.AllowDBNull = false;
                this.columnS108.AllowDBNull = false;
                this.columnS109.AllowDBNull = false;
                this.columnS110.AllowDBNull = false;
                this.columnS111.AllowDBNull = false;
                this.columnS112.AllowDBNull = false;
                this.columnS113.AllowDBNull = false;
                this.columnS114.AllowDBNull = false;
                this.columnS115.AllowDBNull = false;
                this.columnS116.AllowDBNull = false;
                this.columnS117.AllowDBNull = false;
                this.columnS118.AllowDBNull = false;
                this.columnS119.AllowDBNull = false;
                this.columnS120.AllowDBNull = false;
                this.columnS121.AllowDBNull = false;
                this.columnS122.AllowDBNull = false;
                this.columnF106.MaxLength = 10;
                this.columnF107.AllowDBNull = false;
                this.columnF108.MaxLength = 16;
                this.columnF109.MaxLength = 32;
                this.columnF110.MaxLength = 32;
                this.columnF111.MaxLength = 32;
                this.columnF112.AllowDBNull = false;
                this.columnF113.AllowDBNull = false;
                this.columnF114.AllowDBNull = false;
                this.columnF115.AllowDBNull = false;
                this.columnF116.AllowDBNull = false;
                this.columnF117.AllowDBNull = false;
                this.columnF118.AllowDBNull = false;
                this.columnF119.AllowDBNull = false;
                this.columnF120.AllowDBNull = false;
                this.columnF121.AllowDBNull = false;
                this.columnF122.AllowDBNull = false;
                this.columnS1231.MaxLength = 64;
                this.columnS1241.AllowDBNull = false;
                this.columnS1232.MaxLength = 64;
                this.columnS1242.AllowDBNull = false;
                this.columnS1233.MaxLength = 64;
                this.columnS1243.AllowDBNull = false;
                this.columnS1234.MaxLength = 64;
                this.columnS1244.AllowDBNull = false;
                this.columnS1235.MaxLength = 64;
                this.columnS1245.AllowDBNull = false;
                this.columnS1251.MaxLength = 64;
                this.columnS1261.AllowDBNull = false;
                this.columnS1252.MaxLength = 64;
                this.columnS1262.AllowDBNull = false;
                this.columnS1253.MaxLength = 64;
                this.columnS1263.AllowDBNull = false;
                this.columnS1254.MaxLength = 64;
                this.columnS1264.AllowDBNull = false;
                this.columnS1255.MaxLength = 64;
                this.columnS1265.AllowDBNull = false;
                this.columnS127.MaxLength = 64;
                this.columnF1231.AllowDBNull = false;
                this.columnF1232.AllowDBNull = false;
                this.columnF1233.AllowDBNull = false;
                this.columnF1234.AllowDBNull = false;
                this.columnF1235.AllowDBNull = false;
                this.columnF124.AllowDBNull = false;
                this.columnF125.AllowDBNull = false;
                this.columnIsW2StatutoryEmployee.AllowDBNull = false;
                this.columnIsW2RetirementPlan.AllowDBNull = false;
                this.columnDoesReceiveAdvanceEIC.AllowDBNull = false;
                this.columnEmployerSocialSecurity.AllowDBNull = false;
                this.columnEmployerMedicare.AllowDBNull = false;
                this.columnAdvanceEIC.AllowDBNull = false;
                this.columnCheckNo.AutoIncrement = true;
                this.columnCheckNo.AutoIncrementSeed = -1;
                this.columnCheckNo.AutoIncrementStep = -1;
                this.columnCheckNo.AllowDBNull = false;
                this.columnCheckNo.ReadOnly = true;
                this.columnDateLastEdit.AllowDBNull = false;
                this.columnChecked.AllowDBNull = false;
                this.columnS1236.MaxLength = 64;
                this.columnS1246.AllowDBNull = false;
                this.columnS1237.MaxLength = 64;
                this.columnS1247.AllowDBNull = false;
                this.columnF1236.AllowDBNull = false;
                this.columnF1237.AllowDBNull = false;
                this.columnHourlyPay1.MaxLength = 64;
                this.columnHourlyPay2.MaxLength = 64;
                this.columnHourlyPay3.MaxLength = 64;
                this.columnHourlyPay4.MaxLength = 64;
                this.columnSickRate.AllowDBNull = false;
                this.columnVacationRate.AllowDBNull = false;
                this.columnIsPaid.AllowDBNull = false;
                this.columnis1099Employee.AllowDBNull = false;
                this.columnPTOAcchours.AllowDBNull = false;
                this.columnVacAccHours.AllowDBNull = false;
                this.columnprintPTOStub.AllowDBNull = false;
                this.columnPTOAccRate.AllowDBNull = false;
                this.columnVacAccRate.AllowDBNull = false;
                this.columnPTOCapHours.AllowDBNull = false;
                this.columnVacCapHours.AllowDBNull = false;
                this.columnisPayrollSetup.AllowDBNull = false;
                this.columnMemo.MaxLength = 256;
                this.columnEmployeeId.AllowDBNull = false;
                this.columnCompanyId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T105Row NewT105Row() {
                return ((T105Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T105Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T105Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T105RowChanged != null)) {
                    this.T105RowChanged(this, new T105RowChangeEvent(((T105Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T105RowChanging != null)) {
                    this.T105RowChanging(this, new T105RowChangeEvent(((T105Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T105RowDeleted != null)) {
                    this.T105RowDeleted(this, new T105RowChangeEvent(((T105Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T105RowDeleting != null)) {
                    this.T105RowDeleting(this, new T105RowChangeEvent(((T105Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT105Row(T105Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T105DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T201DataTable : global::System.Data.TypedTableBase<T201Row> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnOrd;
            
            private global::System.Data.DataColumn columnCodeMap;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnEnabled;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnCompanyId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T201DataTable() {
                this.TableName = "T201";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T201DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected T201DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrdColumn {
                get {
                    return this.columnOrd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeMapColumn {
                get {
                    return this.columnCodeMap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnabledColumn {
                get {
                    return this.columnEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIdColumn {
                get {
                    return this.columnCompanyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T201Row this[int index] {
                get {
                    return ((T201Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T201RowChangeEventHandler T201RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T201RowChangeEventHandler T201RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T201RowChangeEventHandler T201RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event T201RowChangeEventHandler T201RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddT201Row(T201Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T201Row AddT201Row(System.Guid Id, int Ord, string CodeMap, string Description, bool Enabled, int Type, CompanyRow _parentCompanyRowByFK_dbo_T201_dbo_Company_CompanyId) {
                T201Row rowT201Row = ((T201Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Ord,
                        CodeMap,
                        Description,
                        Enabled,
                        Type,
                        null};
                if ((_parentCompanyRowByFK_dbo_T201_dbo_Company_CompanyId != null)) {
                    columnValuesArray[6] = _parentCompanyRowByFK_dbo_T201_dbo_Company_CompanyId[0];
                }
                rowT201Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowT201Row);
                return rowT201Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T201Row FindById(System.Guid Id) {
                return ((T201Row)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                T201DataTable cln = ((T201DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T201DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnOrd = base.Columns["Ord"];
                this.columnCodeMap = base.Columns["CodeMap"];
                this.columnDescription = base.Columns["Description"];
                this.columnEnabled = base.Columns["Enabled"];
                this.columnType = base.Columns["Type"];
                this.columnCompanyId = base.Columns["CompanyId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnOrd = new global::System.Data.DataColumn("Ord", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrd);
                this.columnCodeMap = new global::System.Data.DataColumn("CodeMap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeMap);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnEnabled = new global::System.Data.DataColumn("Enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnabled);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnCompanyId = new global::System.Data.DataColumn("CompanyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnOrd.AllowDBNull = false;
                this.columnCodeMap.AllowDBNull = false;
                this.columnCodeMap.MaxLength = 16;
                this.columnDescription.MaxLength = 64;
                this.columnEnabled.AllowDBNull = false;
                this.columnType.AllowDBNull = false;
                this.columnCompanyId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T201Row NewT201Row() {
                return ((T201Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T201Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(T201Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T201RowChanged != null)) {
                    this.T201RowChanged(this, new T201RowChangeEvent(((T201Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T201RowChanging != null)) {
                    this.T201RowChanging(this, new T201RowChangeEvent(((T201Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T201RowDeleted != null)) {
                    this.T201RowDeleted(this, new T201RowChangeEvent(((T201Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T201RowDeleting != null)) {
                    this.T201RowDeleting(this, new T201RowChangeEvent(((T201Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveT201Row(T201Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T201DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TimeSheetDataTable : global::System.Data.TypedTableBase<TimeSheetRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnStopDate;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnPaid;
            
            private global::System.Data.DataColumn columnTimeSheetDate;
            
            private global::System.Data.DataColumn columnTimeSheetType;
            
            private global::System.Data.DataColumn columnVacationTime;
            
            private global::System.Data.DataColumn columnTotalWorkTime;
            
            private global::System.Data.DataColumn columnSickTime;
            
            private global::System.Data.DataColumn columnRegulaWorkTime;
            
            private global::System.Data.DataColumn columnOverTimeWorkTime;
            
            private global::System.Data.DataColumn columnRegularPayrate;
            
            private global::System.Data.DataColumn columnOvertimePayrate;
            
            private global::System.Data.DataColumn columnLocked;
            
            private global::System.Data.DataColumn columnExtraInt1;
            
            private global::System.Data.DataColumn columnExtraInt2;
            
            private global::System.Data.DataColumn columnExtraStr1;
            
            private global::System.Data.DataColumn columnExtraStr2;
            
            private global::System.Data.DataColumn columnJobId;
            
            private global::System.Data.DataColumn columnEmployeeId;
            
            private global::System.Data.DataColumn columnCompanyId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TimeSheetDataTable() {
                this.TableName = "TimeSheet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TimeSheetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TimeSheetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StopDateColumn {
                get {
                    return this.columnStopDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaidColumn {
                get {
                    return this.columnPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeSheetDateColumn {
                get {
                    return this.columnTimeSheetDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeSheetTypeColumn {
                get {
                    return this.columnTimeSheetType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VacationTimeColumn {
                get {
                    return this.columnVacationTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalWorkTimeColumn {
                get {
                    return this.columnTotalWorkTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SickTimeColumn {
                get {
                    return this.columnSickTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegulaWorkTimeColumn {
                get {
                    return this.columnRegulaWorkTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverTimeWorkTimeColumn {
                get {
                    return this.columnOverTimeWorkTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegularPayrateColumn {
                get {
                    return this.columnRegularPayrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OvertimePayrateColumn {
                get {
                    return this.columnOvertimePayrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LockedColumn {
                get {
                    return this.columnLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtraInt1Column {
                get {
                    return this.columnExtraInt1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtraInt2Column {
                get {
                    return this.columnExtraInt2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtraStr1Column {
                get {
                    return this.columnExtraStr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtraStr2Column {
                get {
                    return this.columnExtraStr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobIdColumn {
                get {
                    return this.columnJobId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIdColumn {
                get {
                    return this.columnEmployeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIdColumn {
                get {
                    return this.columnCompanyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TimeSheetRow this[int index] {
                get {
                    return ((TimeSheetRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TimeSheetRowChangeEventHandler TimeSheetRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TimeSheetRowChangeEventHandler TimeSheetRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TimeSheetRowChangeEventHandler TimeSheetRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TimeSheetRowChangeEventHandler TimeSheetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTimeSheetRow(TimeSheetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TimeSheetRow AddTimeSheetRow(
                        System.Guid Id, 
                        System.DateTime StartDate, 
                        System.DateTime StopDate, 
                        string Note, 
                        bool Paid, 
                        System.DateTime TimeSheetDate, 
                        int TimeSheetType, 
                        double VacationTime, 
                        double TotalWorkTime, 
                        double SickTime, 
                        double RegulaWorkTime, 
                        double OverTimeWorkTime, 
                        float RegularPayrate, 
                        float OvertimePayrate, 
                        bool Locked, 
                        bool ExtraInt1, 
                        bool ExtraInt2, 
                        string ExtraStr1, 
                        string ExtraStr2, 
                        int JobId, 
                        EmployeeRow _parentEmployeeRowByFK_dbo_TimeSheet_dbo_Employee_EmployeeId, 
                        CompanyRow _parentCompanyRowByFK_dbo_TimeSheet_dbo_Company_CompanyId) {
                TimeSheetRow rowTimeSheetRow = ((TimeSheetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        StartDate,
                        StopDate,
                        Note,
                        Paid,
                        TimeSheetDate,
                        TimeSheetType,
                        VacationTime,
                        TotalWorkTime,
                        SickTime,
                        RegulaWorkTime,
                        OverTimeWorkTime,
                        RegularPayrate,
                        OvertimePayrate,
                        Locked,
                        ExtraInt1,
                        ExtraInt2,
                        ExtraStr1,
                        ExtraStr2,
                        JobId,
                        null,
                        null};
                if ((_parentEmployeeRowByFK_dbo_TimeSheet_dbo_Employee_EmployeeId != null)) {
                    columnValuesArray[20] = _parentEmployeeRowByFK_dbo_TimeSheet_dbo_Employee_EmployeeId[0];
                }
                if ((_parentCompanyRowByFK_dbo_TimeSheet_dbo_Company_CompanyId != null)) {
                    columnValuesArray[21] = _parentCompanyRowByFK_dbo_TimeSheet_dbo_Company_CompanyId[0];
                }
                rowTimeSheetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTimeSheetRow);
                return rowTimeSheetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TimeSheetRow FindById(System.Guid Id) {
                return ((TimeSheetRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TimeSheetDataTable cln = ((TimeSheetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TimeSheetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnStopDate = base.Columns["StopDate"];
                this.columnNote = base.Columns["Note"];
                this.columnPaid = base.Columns["Paid"];
                this.columnTimeSheetDate = base.Columns["TimeSheetDate"];
                this.columnTimeSheetType = base.Columns["TimeSheetType"];
                this.columnVacationTime = base.Columns["VacationTime"];
                this.columnTotalWorkTime = base.Columns["TotalWorkTime"];
                this.columnSickTime = base.Columns["SickTime"];
                this.columnRegulaWorkTime = base.Columns["RegulaWorkTime"];
                this.columnOverTimeWorkTime = base.Columns["OverTimeWorkTime"];
                this.columnRegularPayrate = base.Columns["RegularPayrate"];
                this.columnOvertimePayrate = base.Columns["OvertimePayrate"];
                this.columnLocked = base.Columns["Locked"];
                this.columnExtraInt1 = base.Columns["ExtraInt1"];
                this.columnExtraInt2 = base.Columns["ExtraInt2"];
                this.columnExtraStr1 = base.Columns["ExtraStr1"];
                this.columnExtraStr2 = base.Columns["ExtraStr2"];
                this.columnJobId = base.Columns["JobId"];
                this.columnEmployeeId = base.Columns["EmployeeId"];
                this.columnCompanyId = base.Columns["CompanyId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnStopDate = new global::System.Data.DataColumn("StopDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStopDate);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnPaid = new global::System.Data.DataColumn("Paid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaid);
                this.columnTimeSheetDate = new global::System.Data.DataColumn("TimeSheetDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeSheetDate);
                this.columnTimeSheetType = new global::System.Data.DataColumn("TimeSheetType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeSheetType);
                this.columnVacationTime = new global::System.Data.DataColumn("VacationTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVacationTime);
                this.columnTotalWorkTime = new global::System.Data.DataColumn("TotalWorkTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalWorkTime);
                this.columnSickTime = new global::System.Data.DataColumn("SickTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSickTime);
                this.columnRegulaWorkTime = new global::System.Data.DataColumn("RegulaWorkTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegulaWorkTime);
                this.columnOverTimeWorkTime = new global::System.Data.DataColumn("OverTimeWorkTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverTimeWorkTime);
                this.columnRegularPayrate = new global::System.Data.DataColumn("RegularPayrate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegularPayrate);
                this.columnOvertimePayrate = new global::System.Data.DataColumn("OvertimePayrate", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOvertimePayrate);
                this.columnLocked = new global::System.Data.DataColumn("Locked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocked);
                this.columnExtraInt1 = new global::System.Data.DataColumn("ExtraInt1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraInt1);
                this.columnExtraInt2 = new global::System.Data.DataColumn("ExtraInt2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraInt2);
                this.columnExtraStr1 = new global::System.Data.DataColumn("ExtraStr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraStr1);
                this.columnExtraStr2 = new global::System.Data.DataColumn("ExtraStr2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraStr2);
                this.columnJobId = new global::System.Data.DataColumn("JobId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobId);
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.columnCompanyId = new global::System.Data.DataColumn("CompanyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnStartDate.AllowDBNull = false;
                this.columnStopDate.AllowDBNull = false;
                this.columnNote.MaxLength = 512;
                this.columnPaid.AllowDBNull = false;
                this.columnTimeSheetDate.AllowDBNull = false;
                this.columnTimeSheetType.AllowDBNull = false;
                this.columnVacationTime.AllowDBNull = false;
                this.columnTotalWorkTime.AllowDBNull = false;
                this.columnSickTime.AllowDBNull = false;
                this.columnRegulaWorkTime.AllowDBNull = false;
                this.columnOverTimeWorkTime.AllowDBNull = false;
                this.columnRegularPayrate.AllowDBNull = false;
                this.columnOvertimePayrate.AllowDBNull = false;
                this.columnLocked.AllowDBNull = false;
                this.columnExtraInt1.AllowDBNull = false;
                this.columnExtraInt2.AllowDBNull = false;
                this.columnExtraStr1.MaxLength = 256;
                this.columnExtraStr2.MaxLength = 256;
                this.columnJobId.AllowDBNull = false;
                this.columnEmployeeId.AllowDBNull = false;
                this.columnCompanyId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TimeSheetRow NewTimeSheetRow() {
                return ((TimeSheetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TimeSheetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TimeSheetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TimeSheetRowChanged != null)) {
                    this.TimeSheetRowChanged(this, new TimeSheetRowChangeEvent(((TimeSheetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TimeSheetRowChanging != null)) {
                    this.TimeSheetRowChanging(this, new TimeSheetRowChangeEvent(((TimeSheetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TimeSheetRowDeleted != null)) {
                    this.TimeSheetRowDeleted(this, new TimeSheetRowChangeEvent(((TimeSheetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TimeSheetRowDeleting != null)) {
                    this.TimeSheetRowDeleting(this, new TimeSheetRowChangeEvent(((TimeSheetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTimeSheetRow(TimeSheetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TimeSheetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AccrualTimeJournalDataTable : global::System.Data.TypedTableBase<AccrualTimeJournalRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnSSN;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnHours;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnEmployeeId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccrualTimeJournalDataTable() {
                this.TableName = "AccrualTimeJournal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AccrualTimeJournalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AccrualTimeJournalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSNColumn {
                get {
                    return this.columnSSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoursColumn {
                get {
                    return this.columnHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIdColumn {
                get {
                    return this.columnEmployeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccrualTimeJournalRow this[int index] {
                get {
                    return ((AccrualTimeJournalRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccrualTimeJournalRowChangeEventHandler AccrualTimeJournalRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccrualTimeJournalRowChangeEventHandler AccrualTimeJournalRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccrualTimeJournalRowChangeEventHandler AccrualTimeJournalRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AccrualTimeJournalRowChangeEventHandler AccrualTimeJournalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAccrualTimeJournalRow(AccrualTimeJournalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccrualTimeJournalRow AddAccrualTimeJournalRow(System.Guid Id, string SSN, string EmployeeName, int Type, float Hours, System.DateTime Date, string Memo, System.DateTime CreateDate, EmployeeRow _parentEmployeeRowByFK_dbo_AccrualTimeJournal_dbo_Employee_EmployeeId) {
                AccrualTimeJournalRow rowAccrualTimeJournalRow = ((AccrualTimeJournalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        SSN,
                        EmployeeName,
                        Type,
                        Hours,
                        Date,
                        Memo,
                        CreateDate,
                        null};
                if ((_parentEmployeeRowByFK_dbo_AccrualTimeJournal_dbo_Employee_EmployeeId != null)) {
                    columnValuesArray[8] = _parentEmployeeRowByFK_dbo_AccrualTimeJournal_dbo_Employee_EmployeeId[0];
                }
                rowAccrualTimeJournalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAccrualTimeJournalRow);
                return rowAccrualTimeJournalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccrualTimeJournalRow FindById(System.Guid Id) {
                return ((AccrualTimeJournalRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AccrualTimeJournalDataTable cln = ((AccrualTimeJournalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AccrualTimeJournalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnSSN = base.Columns["SSN"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnType = base.Columns["Type"];
                this.columnHours = base.Columns["Hours"];
                this.columnDate = base.Columns["Date"];
                this.columnMemo = base.Columns["Memo"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnEmployeeId = base.Columns["EmployeeId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnSSN = new global::System.Data.DataColumn("SSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSN);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnHours = new global::System.Data.DataColumn("Hours", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHours);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnSSN.MaxLength = 50;
                this.columnEmployeeName.MaxLength = 255;
                this.columnType.AllowDBNull = false;
                this.columnHours.AllowDBNull = false;
                this.columnDate.AllowDBNull = false;
                this.columnMemo.MaxLength = 255;
                this.columnCreateDate.AllowDBNull = false;
                this.columnEmployeeId.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccrualTimeJournalRow NewAccrualTimeJournalRow() {
                return ((AccrualTimeJournalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AccrualTimeJournalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AccrualTimeJournalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccrualTimeJournalRowChanged != null)) {
                    this.AccrualTimeJournalRowChanged(this, new AccrualTimeJournalRowChangeEvent(((AccrualTimeJournalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccrualTimeJournalRowChanging != null)) {
                    this.AccrualTimeJournalRowChanging(this, new AccrualTimeJournalRowChangeEvent(((AccrualTimeJournalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccrualTimeJournalRowDeleted != null)) {
                    this.AccrualTimeJournalRowDeleted(this, new AccrualTimeJournalRowChangeEvent(((AccrualTimeJournalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccrualTimeJournalRowDeleting != null)) {
                    this.AccrualTimeJournalRowDeleting(this, new AccrualTimeJournalRowChangeEvent(((AccrualTimeJournalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAccrualTimeJournalRow(AccrualTimeJournalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AccrualTimeJournalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PS_ItemValueDataTable : global::System.Data.TypedTableBase<PS_ItemValueRow> {
            
            private global::System.Data.DataColumn columnItem;
            
            private global::System.Data.DataColumn columnTotalValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PS_ItemValueDataTable() {
                this.TableName = "PS_ItemValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PS_ItemValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PS_ItemValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemColumn {
                get {
                    return this.columnItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalValueColumn {
                get {
                    return this.columnTotalValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PS_ItemValueRow this[int index] {
                get {
                    return ((PS_ItemValueRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PS_ItemValueRowChangeEventHandler PS_ItemValueRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PS_ItemValueRowChangeEventHandler PS_ItemValueRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PS_ItemValueRowChangeEventHandler PS_ItemValueRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PS_ItemValueRowChangeEventHandler PS_ItemValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPS_ItemValueRow(PS_ItemValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PS_ItemValueRow AddPS_ItemValueRow(string Item, float TotalValue) {
                PS_ItemValueRow rowPS_ItemValueRow = ((PS_ItemValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Item,
                        TotalValue};
                rowPS_ItemValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPS_ItemValueRow);
                return rowPS_ItemValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PS_ItemValueDataTable cln = ((PS_ItemValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PS_ItemValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnItem = base.Columns["Item"];
                this.columnTotalValue = base.Columns["TotalValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnItem = new global::System.Data.DataColumn("Item", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem");
                this.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item");
                base.Columns.Add(this.columnItem);
                this.columnTotalValue = new global::System.Data.DataColumn("TotalValue", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalValue);
                this.columnItem.MaxLength = 128;
                this.columnTotalValue.DefaultValue = ((float)(0F));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PS_ItemValueRow NewPS_ItemValueRow() {
                return ((PS_ItemValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PS_ItemValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PS_ItemValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PS_ItemValueRowChanged != null)) {
                    this.PS_ItemValueRowChanged(this, new PS_ItemValueRowChangeEvent(((PS_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PS_ItemValueRowChanging != null)) {
                    this.PS_ItemValueRowChanging(this, new PS_ItemValueRowChangeEvent(((PS_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PS_ItemValueRowDeleted != null)) {
                    this.PS_ItemValueRowDeleted(this, new PS_ItemValueRowChangeEvent(((PS_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PS_ItemValueRowDeleting != null)) {
                    this.PS_ItemValueRowDeleting(this, new PS_ItemValueRowChangeEvent(((PS_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePS_ItemValueRow(PS_ItemValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PS_ItemValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DS_ItemValueDataTable : global::System.Data.TypedTableBase<DS_ItemValueRow> {
            
            private global::System.Data.DataColumn columnItem;
            
            private global::System.Data.DataColumn columnTotalValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DS_ItemValueDataTable() {
                this.TableName = "DS_ItemValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DS_ItemValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DS_ItemValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemColumn {
                get {
                    return this.columnItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalValueColumn {
                get {
                    return this.columnTotalValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DS_ItemValueRow this[int index] {
                get {
                    return ((DS_ItemValueRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DS_ItemValueRowChangeEventHandler DS_ItemValueRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DS_ItemValueRowChangeEventHandler DS_ItemValueRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DS_ItemValueRowChangeEventHandler DS_ItemValueRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DS_ItemValueRowChangeEventHandler DS_ItemValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDS_ItemValueRow(DS_ItemValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DS_ItemValueRow AddDS_ItemValueRow(string Item, float TotalValue) {
                DS_ItemValueRow rowDS_ItemValueRow = ((DS_ItemValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Item,
                        TotalValue};
                rowDS_ItemValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDS_ItemValueRow);
                return rowDS_ItemValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DS_ItemValueDataTable cln = ((DS_ItemValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DS_ItemValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnItem = base.Columns["Item"];
                this.columnTotalValue = base.Columns["TotalValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnItem = new global::System.Data.DataColumn("Item", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem");
                this.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item");
                base.Columns.Add(this.columnItem);
                this.columnTotalValue = new global::System.Data.DataColumn("TotalValue", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalValue);
                this.columnTotalValue.DefaultValue = ((float)(0F));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DS_ItemValueRow NewDS_ItemValueRow() {
                return ((DS_ItemValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DS_ItemValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DS_ItemValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DS_ItemValueRowChanged != null)) {
                    this.DS_ItemValueRowChanged(this, new DS_ItemValueRowChangeEvent(((DS_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DS_ItemValueRowChanging != null)) {
                    this.DS_ItemValueRowChanging(this, new DS_ItemValueRowChangeEvent(((DS_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DS_ItemValueRowDeleted != null)) {
                    this.DS_ItemValueRowDeleted(this, new DS_ItemValueRowChangeEvent(((DS_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DS_ItemValueRowDeleting != null)) {
                    this.DS_ItemValueRowDeleting(this, new DS_ItemValueRowChangeEvent(((DS_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDS_ItemValueRow(DS_ItemValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DS_ItemValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Null_ItemValueDataTable : global::System.Data.TypedTableBase<Null_ItemValueRow> {
            
            private global::System.Data.DataColumn columnItem;
            
            private global::System.Data.DataColumn columnTotalValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Null_ItemValueDataTable() {
                this.TableName = "Null_ItemValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Null_ItemValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Null_ItemValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemColumn {
                get {
                    return this.columnItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalValueColumn {
                get {
                    return this.columnTotalValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Null_ItemValueRow this[int index] {
                get {
                    return ((Null_ItemValueRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Null_ItemValueRowChangeEventHandler Null_ItemValueRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Null_ItemValueRowChangeEventHandler Null_ItemValueRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Null_ItemValueRowChangeEventHandler Null_ItemValueRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Null_ItemValueRowChangeEventHandler Null_ItemValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNull_ItemValueRow(Null_ItemValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Null_ItemValueRow AddNull_ItemValueRow(string Item, float TotalValue) {
                Null_ItemValueRow rowNull_ItemValueRow = ((Null_ItemValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Item,
                        TotalValue};
                rowNull_ItemValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNull_ItemValueRow);
                return rowNull_ItemValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Null_ItemValueDataTable cln = ((Null_ItemValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Null_ItemValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnItem = base.Columns["Item"];
                this.columnTotalValue = base.Columns["TotalValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnItem = new global::System.Data.DataColumn("Item", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem");
                this.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item");
                base.Columns.Add(this.columnItem);
                this.columnTotalValue = new global::System.Data.DataColumn("TotalValue", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalValue);
                this.columnTotalValue.DefaultValue = ((float)(0F));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Null_ItemValueRow NewNull_ItemValueRow() {
                return ((Null_ItemValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Null_ItemValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Null_ItemValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Null_ItemValueRowChanged != null)) {
                    this.Null_ItemValueRowChanged(this, new Null_ItemValueRowChangeEvent(((Null_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Null_ItemValueRowChanging != null)) {
                    this.Null_ItemValueRowChanging(this, new Null_ItemValueRowChangeEvent(((Null_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Null_ItemValueRowDeleted != null)) {
                    this.Null_ItemValueRowDeleted(this, new Null_ItemValueRowChangeEvent(((Null_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Null_ItemValueRowDeleting != null)) {
                    this.Null_ItemValueRowDeleting(this, new Null_ItemValueRowChangeEvent(((Null_ItemValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNull_ItemValueRow(Null_ItemValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LivellPayRollDataSet ds = new LivellPayRollDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Null_ItemValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CompanyRow : global::System.Data.DataRow {
            
            private CompanyDataTable tableCompany;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CompanyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCompany = ((CompanyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyId {
                get {
                    return ((int)(this[this.tableCompany.CompanyIdColumn]));
                }
                set {
                    this[this.tableCompany.CompanyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompanyName {
                get {
                    return ((string)(this[this.tableCompany.CompanyNameColumn]));
                }
                set {
                    this[this.tableCompany.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FedTaxId {
                get {
                    try {
                        return ((string)(this[this.tableCompany.FedTaxIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“FedTaxId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.FedTaxIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableCompany.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“ContactName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Telphone {
                get {
                    try {
                        return ((string)(this[this.tableCompany.TelphoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“Telphone”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.TelphoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableCompany.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“Fax”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Email {
                get {
                    return ((string)(this[this.tableCompany.EmailColumn]));
                }
                set {
                    this[this.tableCompany.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WWW {
                get {
                    try {
                        return ((string)(this[this.tableCompany.WWWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“WWW”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.WWWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address1 {
                get {
                    return ((string)(this[this.tableCompany.Address1Column]));
                }
                set {
                    this[this.tableCompany.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableCompany.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“Address2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    return ((string)(this[this.tableCompany.CityColumn]));
                }
                set {
                    this[this.tableCompany.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string State {
                get {
                    return ((string)(this[this.tableCompany.StateColumn]));
                }
                set {
                    this[this.tableCompany.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableCompany.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“Country”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Zip {
                get {
                    try {
                        return ((string)(this[this.tableCompany.ZipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“Zip”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradeName {
                get {
                    try {
                        return ((string)(this[this.tableCompany.TradeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“TradeName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.TradeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PayFreq {
                get {
                    return ((string)(this[this.tableCompany.PayFreqColumn]));
                }
                set {
                    this[this.tableCompany.PayFreqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TimeZone {
                get {
                    return ((string)(this[this.tableCompany.TimeZoneColumn]));
                }
                set {
                    this[this.tableCompany.TimeZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RoundTo {
                get {
                    return ((string)(this[this.tableCompany.RoundToColumn]));
                }
                set {
                    this[this.tableCompany.RoundToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool WeekRule {
                get {
                    return ((bool)(this[this.tableCompany.WeekRuleColumn]));
                }
                set {
                    this[this.tableCompany.WeekRuleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WeekRuleValue {
                get {
                    return ((double)(this[this.tableCompany.WeekRuleValueColumn]));
                }
                set {
                    this[this.tableCompany.WeekRuleValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DayRule {
                get {
                    return ((bool)(this[this.tableCompany.DayRuleColumn]));
                }
                set {
                    this[this.tableCompany.DayRuleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DayRuleValue {
                get {
                    return ((double)(this[this.tableCompany.DayRuleValueColumn]));
                }
                set {
                    this[this.tableCompany.DayRuleValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DoubeRule {
                get {
                    return ((bool)(this[this.tableCompany.DoubeRuleColumn]));
                }
                set {
                    this[this.tableCompany.DoubeRuleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DoubeRuleValue {
                get {
                    return ((double)(this[this.tableCompany.DoubeRuleValueColumn]));
                }
                set {
                    this[this.tableCompany.DoubeRuleValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CaliforniaRule {
                get {
                    return ((bool)(this[this.tableCompany.CaliforniaRuleColumn]));
                }
                set {
                    this[this.tableCompany.CaliforniaRuleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool allowedit {
                get {
                    return ((bool)(this[this.tableCompany.alloweditColumn]));
                }
                set {
                    this[this.tableCompany.alloweditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DaylightSavingTime {
                get {
                    return ((bool)(this[this.tableCompany.DaylightSavingTimeColumn]));
                }
                set {
                    this[this.tableCompany.DaylightSavingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PayReportByEndingDate {
                get {
                    return ((bool)(this[this.tableCompany.PayReportByEndingDateColumn]));
                }
                set {
                    this[this.tableCompany.PayReportByEndingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ControlNo {
                get {
                    try {
                        return ((string)(this[this.tableCompany.ControlNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“ControlNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.ControlNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Establish {
                get {
                    try {
                        return ((string)(this[this.tableCompany.EstablishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“Establish”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.EstablishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FUTA {
                get {
                    return ((double)(this[this.tableCompany.FUTAColumn]));
                }
                set {
                    this[this.tableCompany.FUTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StateID {
                get {
                    try {
                        return ((string)(this[this.tableCompany.StateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Company”中列“StateID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCompany.StateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StateUnemWage {
                get {
                    return ((double)(this[this.tableCompany.StateUnemWageColumn]));
                }
                set {
                    this[this.tableCompany.StateUnemWageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SUTA {
                get {
                    return ((double)(this[this.tableCompany.SUTAColumn]));
                }
                set {
                    this[this.tableCompany.SUTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PayRollRegTime {
                get {
                    return ((global::System.DateTime)(this[this.tableCompany.PayRollRegTimeColumn]));
                }
                set {
                    this[this.tableCompany.PayRollRegTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFedTaxIdNull() {
                return this.IsNull(this.tableCompany.FedTaxIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFedTaxIdNull() {
                this[this.tableCompany.FedTaxIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactNameNull() {
                return this.IsNull(this.tableCompany.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactNameNull() {
                this[this.tableCompany.ContactNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelphoneNull() {
                return this.IsNull(this.tableCompany.TelphoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelphoneNull() {
                this[this.tableCompany.TelphoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaxNull() {
                return this.IsNull(this.tableCompany.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaxNull() {
                this[this.tableCompany.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWWWNull() {
                return this.IsNull(this.tableCompany.WWWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWWWNull() {
                this[this.tableCompany.WWWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableCompany.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress2Null() {
                this[this.tableCompany.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryNull() {
                return this.IsNull(this.tableCompany.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryNull() {
                this[this.tableCompany.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZipNull() {
                return this.IsNull(this.tableCompany.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZipNull() {
                this[this.tableCompany.ZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeNameNull() {
                return this.IsNull(this.tableCompany.TradeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradeNameNull() {
                this[this.tableCompany.TradeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsControlNoNull() {
                return this.IsNull(this.tableCompany.ControlNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetControlNoNull() {
                this[this.tableCompany.ControlNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstablishNull() {
                return this.IsNull(this.tableCompany.EstablishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstablishNull() {
                this[this.tableCompany.EstablishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStateIDNull() {
                return this.IsNull(this.tableCompany.StateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStateIDNull() {
                this[this.tableCompany.StateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow[] GetEmployeeRows() {
                if ((this.Table.ChildRelations["FK_dbo.Employee_dbo.Company_CompanyId"] == null)) {
                    return new EmployeeRow[0];
                }
                else {
                    return ((EmployeeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.Employee_dbo.Company_CompanyId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T100Row[] GetT100Rows() {
                if ((this.Table.ChildRelations["FK_dbo.T100_dbo.Company_CompanyId"] == null)) {
                    return new T100Row[0];
                }
                else {
                    return ((T100Row[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.T100_dbo.Company_CompanyId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T102Row[] GetT102Rows() {
                if ((this.Table.ChildRelations["FK_dbo.T102_dbo.Company_CompanyId"] == null)) {
                    return new T102Row[0];
                }
                else {
                    return ((T102Row[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.T102_dbo.Company_CompanyId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T105Row[] GetT105Rows() {
                if ((this.Table.ChildRelations["FK_dbo.T105_dbo.Company_CompanyId"] == null)) {
                    return new T105Row[0];
                }
                else {
                    return ((T105Row[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.T105_dbo.Company_CompanyId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T201Row[] GetT201Rows() {
                if ((this.Table.ChildRelations["FK_dbo.T201_dbo.Company_CompanyId"] == null)) {
                    return new T201Row[0];
                }
                else {
                    return ((T201Row[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.T201_dbo.Company_CompanyId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TimeSheetRow[] GetTimeSheetRows() {
                if ((this.Table.ChildRelations["FK_dbo.TimeSheet_dbo.Company_CompanyId"] == null)) {
                    return new TimeSheetRow[0];
                }
                else {
                    return ((TimeSheetRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.TimeSheet_dbo.Company_CompanyId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EmployeeRow : global::System.Data.DataRow {
            
            private EmployeeDataTable tableEmployee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EmployeeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmployee = ((EmployeeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid EmployeeId {
                get {
                    return ((global::System.Guid)(this[this.tableEmployee.EmployeeIdColumn]));
                }
                set {
                    this[this.tableEmployee.EmployeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LName {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.LNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“LName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.LNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“FName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MInit {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.MInitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“MInit”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.MInitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSN {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.SSNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“SSN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.SSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte F99 {
                get {
                    return ((byte)(this[this.tableEmployee.F99Column]));
                }
                set {
                    this[this.tableEmployee.F99Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“Address1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“Address2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“City”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“State”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ZipCode {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.ZipCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“ZipCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.ZipCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TimeZone {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.TimeZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“TimeZone”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.TimeZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“Phone”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“Email”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserRole {
                get {
                    return ((string)(this[this.tableEmployee.UserRoleColumn]));
                }
                set {
                    this[this.tableEmployee.UserRoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F100 {
                get {
                    return ((float)(this[this.tableEmployee.F100Column]));
                }
                set {
                    this[this.tableEmployee.F100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F101 {
                get {
                    return ((float)(this[this.tableEmployee.F101Column]));
                }
                set {
                    this[this.tableEmployee.F101Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F102 {
                get {
                    return ((float)(this[this.tableEmployee.F102Column]));
                }
                set {
                    this[this.tableEmployee.F102Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime F103 {
                get {
                    return ((global::System.DateTime)(this[this.tableEmployee.F103Column]));
                }
                set {
                    this[this.tableEmployee.F103Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime F104 {
                get {
                    return ((global::System.DateTime)(this[this.tableEmployee.F104Column]));
                }
                set {
                    this[this.tableEmployee.F104Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime F105 {
                get {
                    return ((global::System.DateTime)(this[this.tableEmployee.F105Column]));
                }
                set {
                    this[this.tableEmployee.F105Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F106 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.F106Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“F106”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.F106Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F107 {
                get {
                    return ((int)(this[this.tableEmployee.F107Column]));
                }
                set {
                    this[this.tableEmployee.F107Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F108 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.F108Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“F108”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.F108Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F109 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.F109Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“F109”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.F109Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F110 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.F110Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“F110”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.F110Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F111 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.F111Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“F111”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.F111Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F112 {
                get {
                    return ((int)(this[this.tableEmployee.F112Column]));
                }
                set {
                    this[this.tableEmployee.F112Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F113 {
                get {
                    return ((int)(this[this.tableEmployee.F113Column]));
                }
                set {
                    this[this.tableEmployee.F113Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F114 {
                get {
                    return ((int)(this[this.tableEmployee.F114Column]));
                }
                set {
                    this[this.tableEmployee.F114Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F115 {
                get {
                    return ((int)(this[this.tableEmployee.F115Column]));
                }
                set {
                    this[this.tableEmployee.F115Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F116 {
                get {
                    return ((int)(this[this.tableEmployee.F116Column]));
                }
                set {
                    this[this.tableEmployee.F116Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F117 {
                get {
                    return ((int)(this[this.tableEmployee.F117Column]));
                }
                set {
                    this[this.tableEmployee.F117Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F118 {
                get {
                    return ((int)(this[this.tableEmployee.F118Column]));
                }
                set {
                    this[this.tableEmployee.F118Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F119 {
                get {
                    return ((int)(this[this.tableEmployee.F119Column]));
                }
                set {
                    this[this.tableEmployee.F119Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F120 {
                get {
                    return ((float)(this[this.tableEmployee.F120Column]));
                }
                set {
                    this[this.tableEmployee.F120Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F121 {
                get {
                    return ((float)(this[this.tableEmployee.F121Column]));
                }
                set {
                    this[this.tableEmployee.F121Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F122 {
                get {
                    return ((float)(this[this.tableEmployee.F122Column]));
                }
                set {
                    this[this.tableEmployee.F122Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F1231 {
                get {
                    return ((float)(this[this.tableEmployee.F1231Column]));
                }
                set {
                    this[this.tableEmployee.F1231Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F1232 {
                get {
                    return ((float)(this[this.tableEmployee.F1232Column]));
                }
                set {
                    this[this.tableEmployee.F1232Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F1233 {
                get {
                    return ((float)(this[this.tableEmployee.F1233Column]));
                }
                set {
                    this[this.tableEmployee.F1233Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F1234 {
                get {
                    return ((float)(this[this.tableEmployee.F1234Column]));
                }
                set {
                    this[this.tableEmployee.F1234Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F1235 {
                get {
                    return ((float)(this[this.tableEmployee.F1235Column]));
                }
                set {
                    this[this.tableEmployee.F1235Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F124 {
                get {
                    return ((int)(this[this.tableEmployee.F124Column]));
                }
                set {
                    this[this.tableEmployee.F124Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F125 {
                get {
                    return ((int)(this[this.tableEmployee.F125Column]));
                }
                set {
                    this[this.tableEmployee.F125Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsW2StatutoryEmployee {
                get {
                    return ((int)(this[this.tableEmployee.IsW2StatutoryEmployeeColumn]));
                }
                set {
                    this[this.tableEmployee.IsW2StatutoryEmployeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsW2RetirementPlan {
                get {
                    return ((int)(this[this.tableEmployee.IsW2RetirementPlanColumn]));
                }
                set {
                    this[this.tableEmployee.IsW2RetirementPlanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DoesReceiveAdvanceEIC {
                get {
                    return ((int)(this[this.tableEmployee.DoesReceiveAdvanceEICColumn]));
                }
                set {
                    this[this.tableEmployee.DoesReceiveAdvanceEICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F1236 {
                get {
                    return ((float)(this[this.tableEmployee.F1236Column]));
                }
                set {
                    this[this.tableEmployee.F1236Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F1237 {
                get {
                    return ((float)(this[this.tableEmployee.F1237Column]));
                }
                set {
                    this[this.tableEmployee.F1237Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HourlyPay1 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.HourlyPay1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“HourlyPay1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.HourlyPay1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HourlyPay2 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.HourlyPay2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“HourlyPay2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.HourlyPay2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HourlyPay3 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.HourlyPay3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“HourlyPay3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.HourlyPay3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HourlyPay4 {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.HourlyPay4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“HourlyPay4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.HourlyPay4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float SickRate {
                get {
                    return ((float)(this[this.tableEmployee.SickRateColumn]));
                }
                set {
                    this[this.tableEmployee.SickRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float VacationRate {
                get {
                    return ((float)(this[this.tableEmployee.VacationRateColumn]));
                }
                set {
                    this[this.tableEmployee.VacationRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int is1099Employee {
                get {
                    return ((int)(this[this.tableEmployee.is1099EmployeeColumn]));
                }
                set {
                    this[this.tableEmployee.is1099EmployeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float PTOAcchours {
                get {
                    return ((float)(this[this.tableEmployee.PTOAcchoursColumn]));
                }
                set {
                    this[this.tableEmployee.PTOAcchoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float VacAccHours {
                get {
                    return ((float)(this[this.tableEmployee.VacAccHoursColumn]));
                }
                set {
                    this[this.tableEmployee.VacAccHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int printPTOStub {
                get {
                    return ((int)(this[this.tableEmployee.printPTOStubColumn]));
                }
                set {
                    this[this.tableEmployee.printPTOStubColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float PTOAccRate {
                get {
                    return ((float)(this[this.tableEmployee.PTOAccRateColumn]));
                }
                set {
                    this[this.tableEmployee.PTOAccRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float VacAccRate {
                get {
                    return ((float)(this[this.tableEmployee.VacAccRateColumn]));
                }
                set {
                    this[this.tableEmployee.VacAccRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float PTOCapHours {
                get {
                    return ((float)(this[this.tableEmployee.PTOCapHoursColumn]));
                }
                set {
                    this[this.tableEmployee.PTOCapHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float VacCapHours {
                get {
                    return ((float)(this[this.tableEmployee.VacCapHoursColumn]));
                }
                set {
                    this[this.tableEmployee.VacCapHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int isPayrollSetup {
                get {
                    return ((int)(this[this.tableEmployee.isPayrollSetupColumn]));
                }
                set {
                    this[this.tableEmployee.isPayrollSetupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DefaultJob {
                get {
                    return ((int)(this[this.tableEmployee.DefaultJobColumn]));
                }
                set {
                    this[this.tableEmployee.DefaultJobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int isEmailComfirmed {
                get {
                    return ((int)(this[this.tableEmployee.isEmailComfirmedColumn]));
                }
                set {
                    this[this.tableEmployee.isEmailComfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SecurityStamp {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.SecurityStampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“SecurityStamp”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.SecurityStampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyId {
                get {
                    return ((int)(this[this.tableEmployee.CompanyIdColumn]));
                }
                set {
                    this[this.tableEmployee.CompanyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AppUserId {
                get {
                    try {
                        return ((string)(this[this.tableEmployee.AppUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Employee”中列“AppUserId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEmployee.AppUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow CompanyRow {
                get {
                    return ((CompanyRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.Employee_dbo.Company_CompanyId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.Employee_dbo.Company_CompanyId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLNameNull() {
                return this.IsNull(this.tableEmployee.LNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLNameNull() {
                this[this.tableEmployee.LNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFNameNull() {
                return this.IsNull(this.tableEmployee.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFNameNull() {
                this[this.tableEmployee.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMInitNull() {
                return this.IsNull(this.tableEmployee.MInitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMInitNull() {
                this[this.tableEmployee.MInitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSSNNull() {
                return this.IsNull(this.tableEmployee.SSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSSNNull() {
                this[this.tableEmployee.SSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableEmployee.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress1Null() {
                this[this.tableEmployee.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableEmployee.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress2Null() {
                this[this.tableEmployee.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityNull() {
                return this.IsNull(this.tableEmployee.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityNull() {
                this[this.tableEmployee.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStateNull() {
                return this.IsNull(this.tableEmployee.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStateNull() {
                this[this.tableEmployee.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZipCodeNull() {
                return this.IsNull(this.tableEmployee.ZipCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZipCodeNull() {
                this[this.tableEmployee.ZipCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimeZoneNull() {
                return this.IsNull(this.tableEmployee.TimeZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimeZoneNull() {
                this[this.tableEmployee.TimeZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableEmployee.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhoneNull() {
                this[this.tableEmployee.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmailNull() {
                return this.IsNull(this.tableEmployee.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmailNull() {
                this[this.tableEmployee.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF106Null() {
                return this.IsNull(this.tableEmployee.F106Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF106Null() {
                this[this.tableEmployee.F106Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF108Null() {
                return this.IsNull(this.tableEmployee.F108Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF108Null() {
                this[this.tableEmployee.F108Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF109Null() {
                return this.IsNull(this.tableEmployee.F109Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF109Null() {
                this[this.tableEmployee.F109Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF110Null() {
                return this.IsNull(this.tableEmployee.F110Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF110Null() {
                this[this.tableEmployee.F110Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF111Null() {
                return this.IsNull(this.tableEmployee.F111Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF111Null() {
                this[this.tableEmployee.F111Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourlyPay1Null() {
                return this.IsNull(this.tableEmployee.HourlyPay1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourlyPay1Null() {
                this[this.tableEmployee.HourlyPay1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourlyPay2Null() {
                return this.IsNull(this.tableEmployee.HourlyPay2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourlyPay2Null() {
                this[this.tableEmployee.HourlyPay2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourlyPay3Null() {
                return this.IsNull(this.tableEmployee.HourlyPay3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourlyPay3Null() {
                this[this.tableEmployee.HourlyPay3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourlyPay4Null() {
                return this.IsNull(this.tableEmployee.HourlyPay4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourlyPay4Null() {
                this[this.tableEmployee.HourlyPay4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecurityStampNull() {
                return this.IsNull(this.tableEmployee.SecurityStampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecurityStampNull() {
                this[this.tableEmployee.SecurityStampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppUserIdNull() {
                return this.IsNull(this.tableEmployee.AppUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppUserIdNull() {
                this[this.tableEmployee.AppUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T105Row[] GetT105Rows() {
                if ((this.Table.ChildRelations["FK_dbo.T105_dbo.Employee_EmployeeId"] == null)) {
                    return new T105Row[0];
                }
                else {
                    return ((T105Row[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.T105_dbo.Employee_EmployeeId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TimeSheetRow[] GetTimeSheetRows() {
                if ((this.Table.ChildRelations["FK_dbo.TimeSheet_dbo.Employee_EmployeeId"] == null)) {
                    return new TimeSheetRow[0];
                }
                else {
                    return ((TimeSheetRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.TimeSheet_dbo.Employee_EmployeeId"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccrualTimeJournalRow[] GetAccrualTimeJournalRows() {
                if ((this.Table.ChildRelations["FK_dbo.AccrualTimeJournal_dbo.Employee_EmployeeId"] == null)) {
                    return new AccrualTimeJournalRow[0];
                }
                else {
                    return ((AccrualTimeJournalRow[])(base.GetChildRows(this.Table.ChildRelations["FK_dbo.AccrualTimeJournal_dbo.Employee_EmployeeId"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T100Row : global::System.Data.DataRow {
            
            private T100DataTable tableT100;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T100Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT100 = ((T100DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableT100.IdColumn]));
                }
                set {
                    this[this.tableT100.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableT100.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“BankName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankInfo1 {
                get {
                    try {
                        return ((string)(this[this.tableT100.BankInfo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“BankInfo1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.BankInfo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankInfo2 {
                get {
                    try {
                        return ((string)(this[this.tableT100.BankInfo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“BankInfo2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.BankInfo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankInfo3 {
                get {
                    try {
                        return ((string)(this[this.tableT100.BankInfo3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“BankInfo3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.BankInfo3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransitCode {
                get {
                    try {
                        return ((string)(this[this.tableT100.TransitCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“TransitCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.TransitCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankRouteNo {
                get {
                    try {
                        return ((string)(this[this.tableT100.BankRouteNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“BankRouteNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.BankRouteNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankAccountNo {
                get {
                    try {
                        return ((string)(this[this.tableT100.BankAccountNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“BankAccountNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.BankAccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StartCheckNo {
                get {
                    return ((int)(this[this.tableT100.StartCheckNoColumn]));
                }
                set {
                    this[this.tableT100.StartCheckNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrentCheckNo {
                get {
                    return ((int)(this[this.tableT100.CurrentCheckNoColumn]));
                }
                set {
                    this[this.tableT100.CurrentCheckNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float CheckWidth {
                get {
                    return ((float)(this[this.tableT100.CheckWidthColumn]));
                }
                set {
                    this[this.tableT100.CheckWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float CheckHeight {
                get {
                    return ((float)(this[this.tableT100.CheckHeightColumn]));
                }
                set {
                    this[this.tableT100.CheckHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OffsetLeft {
                get {
                    return ((float)(this[this.tableT100.OffsetLeftColumn]));
                }
                set {
                    this[this.tableT100.OffsetLeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OffsetRight {
                get {
                    return ((float)(this[this.tableT100.OffsetRightColumn]));
                }
                set {
                    this[this.tableT100.OffsetRightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OffsetUp {
                get {
                    return ((float)(this[this.tableT100.OffsetUpColumn]));
                }
                set {
                    this[this.tableT100.OffsetUpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OffsetDown {
                get {
                    return ((float)(this[this.tableT100.OffsetDownColumn]));
                }
                set {
                    this[this.tableT100.OffsetDownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Logo {
                get {
                    try {
                        return ((string)(this[this.tableT100.LogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“Logo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.LogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Signature {
                get {
                    try {
                        return ((string)(this[this.tableT100.SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“Signature”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Company1 {
                get {
                    try {
                        return ((string)(this[this.tableT100.Company1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“Company1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.Company1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Company2 {
                get {
                    try {
                        return ((string)(this[this.tableT100.Company2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“Company2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.Company2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Company3 {
                get {
                    try {
                        return ((string)(this[this.tableT100.Company3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“Company3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.Company3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Company4 {
                get {
                    try {
                        return ((string)(this[this.tableT100.Company4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“Company4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.Company4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BlankBankStock {
                get {
                    return ((bool)(this[this.tableT100.BlankBankStockColumn]));
                }
                set {
                    this[this.tableT100.BlankBankStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExField1 {
                get {
                    try {
                        return ((string)(this[this.tableT100.ExField1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“ExField1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.ExField1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExField2 {
                get {
                    return ((bool)(this[this.tableT100.ExField2Column]));
                }
                set {
                    this[this.tableT100.ExField2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExField3 {
                get {
                    try {
                        return ((string)(this[this.tableT100.ExField3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T100”中列“ExField3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT100.ExField3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool nodisplaymicr {
                get {
                    return ((bool)(this[this.tableT100.nodisplaymicrColumn]));
                }
                set {
                    this[this.tableT100.nodisplaymicrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyId {
                get {
                    return ((int)(this[this.tableT100.CompanyIdColumn]));
                }
                set {
                    this[this.tableT100.CompanyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow CompanyRow {
                get {
                    return ((CompanyRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.T100_dbo.Company_CompanyId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.T100_dbo.Company_CompanyId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableT100.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableT100.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankInfo1Null() {
                return this.IsNull(this.tableT100.BankInfo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankInfo1Null() {
                this[this.tableT100.BankInfo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankInfo2Null() {
                return this.IsNull(this.tableT100.BankInfo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankInfo2Null() {
                this[this.tableT100.BankInfo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankInfo3Null() {
                return this.IsNull(this.tableT100.BankInfo3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankInfo3Null() {
                this[this.tableT100.BankInfo3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransitCodeNull() {
                return this.IsNull(this.tableT100.TransitCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransitCodeNull() {
                this[this.tableT100.TransitCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankRouteNoNull() {
                return this.IsNull(this.tableT100.BankRouteNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankRouteNoNull() {
                this[this.tableT100.BankRouteNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAccountNoNull() {
                return this.IsNull(this.tableT100.BankAccountNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAccountNoNull() {
                this[this.tableT100.BankAccountNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLogoNull() {
                return this.IsNull(this.tableT100.LogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLogoNull() {
                this[this.tableT100.LogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSignatureNull() {
                return this.IsNull(this.tableT100.SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSignatureNull() {
                this[this.tableT100.SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompany1Null() {
                return this.IsNull(this.tableT100.Company1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompany1Null() {
                this[this.tableT100.Company1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompany2Null() {
                return this.IsNull(this.tableT100.Company2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompany2Null() {
                this[this.tableT100.Company2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompany3Null() {
                return this.IsNull(this.tableT100.Company3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompany3Null() {
                this[this.tableT100.Company3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompany4Null() {
                return this.IsNull(this.tableT100.Company4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompany4Null() {
                this[this.tableT100.Company4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExField1Null() {
                return this.IsNull(this.tableT100.ExField1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExField1Null() {
                this[this.tableT100.ExField1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExField3Null() {
                return this.IsNull(this.tableT100.ExField3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExField3Null() {
                this[this.tableT100.ExField3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T102Row : global::System.Data.DataRow {
            
            private T102DataTable tableT102;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T102Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT102 = ((T102DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableT102.IdColumn]));
                }
                set {
                    this[this.tableT102.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ItemId {
                get {
                    return ((int)(this[this.tableT102.ItemIdColumn]));
                }
                set {
                    this[this.tableT102.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeMap {
                get {
                    return ((string)(this[this.tableT102.CodeMapColumn]));
                }
                set {
                    this[this.tableT102.CodeMapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableT102.DescriptionColumn]));
                }
                set {
                    this[this.tableT102.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnnualLimit {
                get {
                    return ((double)(this[this.tableT102.AnnualLimitColumn]));
                }
                set {
                    this[this.tableT102.AnnualLimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Taxable {
                get {
                    return ((bool)(this[this.tableT102.TaxableColumn]));
                }
                set {
                    this[this.tableT102.TaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FICATaxable {
                get {
                    return ((bool)(this[this.tableT102.FICATaxableColumn]));
                }
                set {
                    this[this.tableT102.FICATaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PctofIncome {
                get {
                    return ((bool)(this[this.tableT102.PctofIncomeColumn]));
                }
                set {
                    this[this.tableT102.PctofIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Enabled {
                get {
                    return ((bool)(this[this.tableT102.EnabledColumn]));
                }
                set {
                    this[this.tableT102.EnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool W2Box10 {
                get {
                    return ((bool)(this[this.tableT102.W2Box10Column]));
                }
                set {
                    this[this.tableT102.W2Box10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool W2Box12 {
                get {
                    return ((bool)(this[this.tableT102.W2Box12Column]));
                }
                set {
                    this[this.tableT102.W2Box12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string W2Code {
                get {
                    try {
                        return ((string)(this[this.tableT102.W2CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T102”中列“W2Code”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT102.W2CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExField1 {
                get {
                    try {
                        return ((string)(this[this.tableT102.ExField1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T102”中列“ExField1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT102.ExField1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExField2 {
                get {
                    return ((int)(this[this.tableT102.ExField2Column]));
                }
                set {
                    this[this.tableT102.ExField2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExField3 {
                get {
                    try {
                        return ((string)(this[this.tableT102.ExField3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T102”中列“ExField3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT102.ExField3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExField4 {
                get {
                    return ((int)(this[this.tableT102.ExField4Column]));
                }
                set {
                    this[this.tableT102.ExField4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    return ((int)(this[this.tableT102.TypeColumn]));
                }
                set {
                    this[this.tableT102.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyId {
                get {
                    return ((int)(this[this.tableT102.CompanyIdColumn]));
                }
                set {
                    this[this.tableT102.CompanyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow CompanyRow {
                get {
                    return ((CompanyRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.T102_dbo.Company_CompanyId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.T102_dbo.Company_CompanyId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsW2CodeNull() {
                return this.IsNull(this.tableT102.W2CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetW2CodeNull() {
                this[this.tableT102.W2CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExField1Null() {
                return this.IsNull(this.tableT102.ExField1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExField1Null() {
                this[this.tableT102.ExField1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExField3Null() {
                return this.IsNull(this.tableT102.ExField3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExField3Null() {
                this[this.tableT102.ExField3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T105Row : global::System.Data.DataRow {
            
            private T105DataTable tableT105;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T105Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT105 = ((T105DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableT105.IdColumn]));
                }
                set {
                    this[this.tableT105.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateEndPeriod {
                get {
                    return ((global::System.DateTime)(this[this.tableT105.DateEndPeriodColumn]));
                }
                set {
                    this[this.tableT105.DateEndPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateStartPeriod {
                get {
                    return ((global::System.DateTime)(this[this.tableT105.DateStartPeriodColumn]));
                }
                set {
                    this[this.tableT105.DateStartPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateSubmitted {
                get {
                    return ((global::System.DateTime)(this[this.tableT105.DateSubmittedColumn]));
                }
                set {
                    this[this.tableT105.DateSubmittedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LName {
                get {
                    try {
                        return ((string)(this[this.tableT105.LNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“LName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.LNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FName {
                get {
                    try {
                        return ((string)(this[this.tableT105.FNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“FName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.FNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MInit {
                get {
                    try {
                        return ((string)(this[this.tableT105.MInitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“MInit”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.MInitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSN {
                get {
                    try {
                        return ((string)(this[this.tableT105.SSNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“SSN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.SSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F99 {
                get {
                    return ((int)(this[this.tableT105.F99Column]));
                }
                set {
                    this[this.tableT105.F99Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableT105.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“Address1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableT105.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“Address2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableT105.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“City”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ZipCode {
                get {
                    try {
                        return ((string)(this[this.tableT105.ZipCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“ZipCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.ZipCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableT105.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“State”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableT105.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“Phone”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F100 {
                get {
                    return ((float)(this[this.tableT105.F100Column]));
                }
                set {
                    this[this.tableT105.F100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F101 {
                get {
                    return ((float)(this[this.tableT105.F101Column]));
                }
                set {
                    this[this.tableT105.F101Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F102 {
                get {
                    return ((float)(this[this.tableT105.F102Column]));
                }
                set {
                    this[this.tableT105.F102Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime F103 {
                get {
                    return ((global::System.DateTime)(this[this.tableT105.F103Column]));
                }
                set {
                    this[this.tableT105.F103Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime F104 {
                get {
                    return ((global::System.DateTime)(this[this.tableT105.F104Column]));
                }
                set {
                    this[this.tableT105.F104Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime F105 {
                get {
                    return ((global::System.DateTime)(this[this.tableT105.F105Column]));
                }
                set {
                    this[this.tableT105.F105Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S100 {
                get {
                    return ((float)(this[this.tableT105.S100Column]));
                }
                set {
                    this[this.tableT105.S100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S101 {
                get {
                    return ((float)(this[this.tableT105.S101Column]));
                }
                set {
                    this[this.tableT105.S101Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S102 {
                get {
                    return ((float)(this[this.tableT105.S102Column]));
                }
                set {
                    this[this.tableT105.S102Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S103 {
                get {
                    return ((float)(this[this.tableT105.S103Column]));
                }
                set {
                    this[this.tableT105.S103Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S104 {
                get {
                    return ((float)(this[this.tableT105.S104Column]));
                }
                set {
                    this[this.tableT105.S104Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S105 {
                get {
                    return ((float)(this[this.tableT105.S105Column]));
                }
                set {
                    this[this.tableT105.S105Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S106 {
                get {
                    return ((float)(this[this.tableT105.S106Column]));
                }
                set {
                    this[this.tableT105.S106Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S107 {
                get {
                    return ((float)(this[this.tableT105.S107Column]));
                }
                set {
                    this[this.tableT105.S107Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S108 {
                get {
                    return ((float)(this[this.tableT105.S108Column]));
                }
                set {
                    this[this.tableT105.S108Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S109 {
                get {
                    return ((float)(this[this.tableT105.S109Column]));
                }
                set {
                    this[this.tableT105.S109Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S110 {
                get {
                    return ((float)(this[this.tableT105.S110Column]));
                }
                set {
                    this[this.tableT105.S110Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S111 {
                get {
                    return ((float)(this[this.tableT105.S111Column]));
                }
                set {
                    this[this.tableT105.S111Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S112 {
                get {
                    return ((float)(this[this.tableT105.S112Column]));
                }
                set {
                    this[this.tableT105.S112Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S113 {
                get {
                    return ((float)(this[this.tableT105.S113Column]));
                }
                set {
                    this[this.tableT105.S113Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S114 {
                get {
                    return ((float)(this[this.tableT105.S114Column]));
                }
                set {
                    this[this.tableT105.S114Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S115 {
                get {
                    return ((float)(this[this.tableT105.S115Column]));
                }
                set {
                    this[this.tableT105.S115Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double S116 {
                get {
                    return ((double)(this[this.tableT105.S116Column]));
                }
                set {
                    this[this.tableT105.S116Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double S117 {
                get {
                    return ((double)(this[this.tableT105.S117Column]));
                }
                set {
                    this[this.tableT105.S117Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S118 {
                get {
                    return ((float)(this[this.tableT105.S118Column]));
                }
                set {
                    this[this.tableT105.S118Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S119 {
                get {
                    return ((float)(this[this.tableT105.S119Column]));
                }
                set {
                    this[this.tableT105.S119Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S120 {
                get {
                    return ((float)(this[this.tableT105.S120Column]));
                }
                set {
                    this[this.tableT105.S120Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S121 {
                get {
                    return ((float)(this[this.tableT105.S121Column]));
                }
                set {
                    this[this.tableT105.S121Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S122 {
                get {
                    return ((float)(this[this.tableT105.S122Column]));
                }
                set {
                    this[this.tableT105.S122Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F106 {
                get {
                    try {
                        return ((string)(this[this.tableT105.F106Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“F106”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.F106Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F107 {
                get {
                    return ((int)(this[this.tableT105.F107Column]));
                }
                set {
                    this[this.tableT105.F107Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F108 {
                get {
                    try {
                        return ((string)(this[this.tableT105.F108Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“F108”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.F108Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F109 {
                get {
                    try {
                        return ((string)(this[this.tableT105.F109Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“F109”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.F109Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F110 {
                get {
                    try {
                        return ((string)(this[this.tableT105.F110Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“F110”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.F110Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F111 {
                get {
                    try {
                        return ((string)(this[this.tableT105.F111Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“F111”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.F111Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F112 {
                get {
                    return ((int)(this[this.tableT105.F112Column]));
                }
                set {
                    this[this.tableT105.F112Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F113 {
                get {
                    return ((int)(this[this.tableT105.F113Column]));
                }
                set {
                    this[this.tableT105.F113Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F114 {
                get {
                    return ((int)(this[this.tableT105.F114Column]));
                }
                set {
                    this[this.tableT105.F114Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F115 {
                get {
                    return ((int)(this[this.tableT105.F115Column]));
                }
                set {
                    this[this.tableT105.F115Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F116 {
                get {
                    return ((int)(this[this.tableT105.F116Column]));
                }
                set {
                    this[this.tableT105.F116Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F117 {
                get {
                    return ((int)(this[this.tableT105.F117Column]));
                }
                set {
                    this[this.tableT105.F117Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F118 {
                get {
                    return ((int)(this[this.tableT105.F118Column]));
                }
                set {
                    this[this.tableT105.F118Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F119 {
                get {
                    return ((int)(this[this.tableT105.F119Column]));
                }
                set {
                    this[this.tableT105.F119Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double F120 {
                get {
                    return ((double)(this[this.tableT105.F120Column]));
                }
                set {
                    this[this.tableT105.F120Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F121 {
                get {
                    return ((float)(this[this.tableT105.F121Column]));
                }
                set {
                    this[this.tableT105.F121Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F122 {
                get {
                    return ((float)(this[this.tableT105.F122Column]));
                }
                set {
                    this[this.tableT105.F122Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1231 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1231Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1231”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1231Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1241 {
                get {
                    return ((float)(this[this.tableT105.S1241Column]));
                }
                set {
                    this[this.tableT105.S1241Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1232 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1232Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1232”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1232Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1242 {
                get {
                    return ((float)(this[this.tableT105.S1242Column]));
                }
                set {
                    this[this.tableT105.S1242Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1233 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1233Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1233”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1233Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1243 {
                get {
                    return ((float)(this[this.tableT105.S1243Column]));
                }
                set {
                    this[this.tableT105.S1243Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1234 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1234Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1234”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1234Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1244 {
                get {
                    return ((float)(this[this.tableT105.S1244Column]));
                }
                set {
                    this[this.tableT105.S1244Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1235 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1235Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1235”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1235Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1245 {
                get {
                    return ((float)(this[this.tableT105.S1245Column]));
                }
                set {
                    this[this.tableT105.S1245Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1251 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1251Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1251”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1251Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1261 {
                get {
                    return ((float)(this[this.tableT105.S1261Column]));
                }
                set {
                    this[this.tableT105.S1261Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1252 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1252Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1252”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1252Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1262 {
                get {
                    return ((float)(this[this.tableT105.S1262Column]));
                }
                set {
                    this[this.tableT105.S1262Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1253 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1253Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1253”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1253Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1263 {
                get {
                    return ((float)(this[this.tableT105.S1263Column]));
                }
                set {
                    this[this.tableT105.S1263Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1254 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1254Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1254”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1254Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1264 {
                get {
                    return ((float)(this[this.tableT105.S1264Column]));
                }
                set {
                    this[this.tableT105.S1264Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1255 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1255Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1255”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1255Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1265 {
                get {
                    return ((float)(this[this.tableT105.S1265Column]));
                }
                set {
                    this[this.tableT105.S1265Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S127 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S127Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S127”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S127Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double F1231 {
                get {
                    return ((double)(this[this.tableT105.F1231Column]));
                }
                set {
                    this[this.tableT105.F1231Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double F1232 {
                get {
                    return ((double)(this[this.tableT105.F1232Column]));
                }
                set {
                    this[this.tableT105.F1232Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double F1233 {
                get {
                    return ((double)(this[this.tableT105.F1233Column]));
                }
                set {
                    this[this.tableT105.F1233Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double F1234 {
                get {
                    return ((double)(this[this.tableT105.F1234Column]));
                }
                set {
                    this[this.tableT105.F1234Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double F1235 {
                get {
                    return ((double)(this[this.tableT105.F1235Column]));
                }
                set {
                    this[this.tableT105.F1235Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F124 {
                get {
                    return ((int)(this[this.tableT105.F124Column]));
                }
                set {
                    this[this.tableT105.F124Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int F125 {
                get {
                    return ((int)(this[this.tableT105.F125Column]));
                }
                set {
                    this[this.tableT105.F125Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsW2StatutoryEmployee {
                get {
                    return ((int)(this[this.tableT105.IsW2StatutoryEmployeeColumn]));
                }
                set {
                    this[this.tableT105.IsW2StatutoryEmployeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsW2RetirementPlan {
                get {
                    return ((int)(this[this.tableT105.IsW2RetirementPlanColumn]));
                }
                set {
                    this[this.tableT105.IsW2RetirementPlanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DoesReceiveAdvanceEIC {
                get {
                    return ((int)(this[this.tableT105.DoesReceiveAdvanceEICColumn]));
                }
                set {
                    this[this.tableT105.DoesReceiveAdvanceEICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float EmployerSocialSecurity {
                get {
                    return ((float)(this[this.tableT105.EmployerSocialSecurityColumn]));
                }
                set {
                    this[this.tableT105.EmployerSocialSecurityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float EmployerMedicare {
                get {
                    return ((float)(this[this.tableT105.EmployerMedicareColumn]));
                }
                set {
                    this[this.tableT105.EmployerMedicareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float AdvanceEIC {
                get {
                    return ((float)(this[this.tableT105.AdvanceEICColumn]));
                }
                set {
                    this[this.tableT105.AdvanceEICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CheckNo {
                get {
                    return ((int)(this[this.tableT105.CheckNoColumn]));
                }
                set {
                    this[this.tableT105.CheckNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateLastEdit {
                get {
                    return ((global::System.DateTime)(this[this.tableT105.DateLastEditColumn]));
                }
                set {
                    this[this.tableT105.DateLastEditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Checked {
                get {
                    return ((int)(this[this.tableT105.CheckedColumn]));
                }
                set {
                    this[this.tableT105.CheckedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1236 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1236Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1236”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1236Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1246 {
                get {
                    return ((float)(this[this.tableT105.S1246Column]));
                }
                set {
                    this[this.tableT105.S1246Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string S1237 {
                get {
                    try {
                        return ((string)(this[this.tableT105.S1237Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“S1237”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.S1237Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float S1247 {
                get {
                    return ((float)(this[this.tableT105.S1247Column]));
                }
                set {
                    this[this.tableT105.S1247Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F1236 {
                get {
                    return ((float)(this[this.tableT105.F1236Column]));
                }
                set {
                    this[this.tableT105.F1236Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float F1237 {
                get {
                    return ((float)(this[this.tableT105.F1237Column]));
                }
                set {
                    this[this.tableT105.F1237Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HourlyPay1 {
                get {
                    try {
                        return ((string)(this[this.tableT105.HourlyPay1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“HourlyPay1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.HourlyPay1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HourlyPay2 {
                get {
                    try {
                        return ((string)(this[this.tableT105.HourlyPay2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“HourlyPay2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.HourlyPay2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HourlyPay3 {
                get {
                    try {
                        return ((string)(this[this.tableT105.HourlyPay3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“HourlyPay3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.HourlyPay3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HourlyPay4 {
                get {
                    try {
                        return ((string)(this[this.tableT105.HourlyPay4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“HourlyPay4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.HourlyPay4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float SickRate {
                get {
                    return ((float)(this[this.tableT105.SickRateColumn]));
                }
                set {
                    this[this.tableT105.SickRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float VacationRate {
                get {
                    return ((float)(this[this.tableT105.VacationRateColumn]));
                }
                set {
                    this[this.tableT105.VacationRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsPaid {
                get {
                    return ((int)(this[this.tableT105.IsPaidColumn]));
                }
                set {
                    this[this.tableT105.IsPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int is1099Employee {
                get {
                    return ((int)(this[this.tableT105.is1099EmployeeColumn]));
                }
                set {
                    this[this.tableT105.is1099EmployeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float PTOAcchours {
                get {
                    return ((float)(this[this.tableT105.PTOAcchoursColumn]));
                }
                set {
                    this[this.tableT105.PTOAcchoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float VacAccHours {
                get {
                    return ((float)(this[this.tableT105.VacAccHoursColumn]));
                }
                set {
                    this[this.tableT105.VacAccHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int printPTOStub {
                get {
                    return ((int)(this[this.tableT105.printPTOStubColumn]));
                }
                set {
                    this[this.tableT105.printPTOStubColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float PTOAccRate {
                get {
                    return ((float)(this[this.tableT105.PTOAccRateColumn]));
                }
                set {
                    this[this.tableT105.PTOAccRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float VacAccRate {
                get {
                    return ((float)(this[this.tableT105.VacAccRateColumn]));
                }
                set {
                    this[this.tableT105.VacAccRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PTOCapHours {
                get {
                    return ((double)(this[this.tableT105.PTOCapHoursColumn]));
                }
                set {
                    this[this.tableT105.PTOCapHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VacCapHours {
                get {
                    return ((double)(this[this.tableT105.VacCapHoursColumn]));
                }
                set {
                    this[this.tableT105.VacCapHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int isPayrollSetup {
                get {
                    return ((int)(this[this.tableT105.isPayrollSetupColumn]));
                }
                set {
                    this[this.tableT105.isPayrollSetupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tableT105.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T105”中列“Memo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT105.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid EmployeeId {
                get {
                    return ((global::System.Guid)(this[this.tableT105.EmployeeIdColumn]));
                }
                set {
                    this[this.tableT105.EmployeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyId {
                get {
                    return ((int)(this[this.tableT105.CompanyIdColumn]));
                }
                set {
                    this[this.tableT105.CompanyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow CompanyRow {
                get {
                    return ((CompanyRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.T105_dbo.Company_CompanyId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.T105_dbo.Company_CompanyId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow EmployeeRow {
                get {
                    return ((EmployeeRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.T105_dbo.Employee_EmployeeId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.T105_dbo.Employee_EmployeeId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLNameNull() {
                return this.IsNull(this.tableT105.LNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLNameNull() {
                this[this.tableT105.LNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFNameNull() {
                return this.IsNull(this.tableT105.FNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFNameNull() {
                this[this.tableT105.FNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMInitNull() {
                return this.IsNull(this.tableT105.MInitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMInitNull() {
                this[this.tableT105.MInitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSSNNull() {
                return this.IsNull(this.tableT105.SSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSSNNull() {
                this[this.tableT105.SSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableT105.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress1Null() {
                this[this.tableT105.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableT105.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress2Null() {
                this[this.tableT105.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityNull() {
                return this.IsNull(this.tableT105.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityNull() {
                this[this.tableT105.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZipCodeNull() {
                return this.IsNull(this.tableT105.ZipCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZipCodeNull() {
                this[this.tableT105.ZipCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStateNull() {
                return this.IsNull(this.tableT105.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStateNull() {
                this[this.tableT105.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableT105.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhoneNull() {
                this[this.tableT105.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF106Null() {
                return this.IsNull(this.tableT105.F106Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF106Null() {
                this[this.tableT105.F106Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF108Null() {
                return this.IsNull(this.tableT105.F108Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF108Null() {
                this[this.tableT105.F108Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF109Null() {
                return this.IsNull(this.tableT105.F109Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF109Null() {
                this[this.tableT105.F109Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF110Null() {
                return this.IsNull(this.tableT105.F110Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF110Null() {
                this[this.tableT105.F110Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF111Null() {
                return this.IsNull(this.tableT105.F111Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF111Null() {
                this[this.tableT105.F111Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1231Null() {
                return this.IsNull(this.tableT105.S1231Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1231Null() {
                this[this.tableT105.S1231Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1232Null() {
                return this.IsNull(this.tableT105.S1232Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1232Null() {
                this[this.tableT105.S1232Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1233Null() {
                return this.IsNull(this.tableT105.S1233Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1233Null() {
                this[this.tableT105.S1233Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1234Null() {
                return this.IsNull(this.tableT105.S1234Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1234Null() {
                this[this.tableT105.S1234Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1235Null() {
                return this.IsNull(this.tableT105.S1235Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1235Null() {
                this[this.tableT105.S1235Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1251Null() {
                return this.IsNull(this.tableT105.S1251Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1251Null() {
                this[this.tableT105.S1251Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1252Null() {
                return this.IsNull(this.tableT105.S1252Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1252Null() {
                this[this.tableT105.S1252Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1253Null() {
                return this.IsNull(this.tableT105.S1253Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1253Null() {
                this[this.tableT105.S1253Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1254Null() {
                return this.IsNull(this.tableT105.S1254Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1254Null() {
                this[this.tableT105.S1254Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1255Null() {
                return this.IsNull(this.tableT105.S1255Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1255Null() {
                this[this.tableT105.S1255Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS127Null() {
                return this.IsNull(this.tableT105.S127Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS127Null() {
                this[this.tableT105.S127Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1236Null() {
                return this.IsNull(this.tableT105.S1236Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1236Null() {
                this[this.tableT105.S1236Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsS1237Null() {
                return this.IsNull(this.tableT105.S1237Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetS1237Null() {
                this[this.tableT105.S1237Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourlyPay1Null() {
                return this.IsNull(this.tableT105.HourlyPay1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourlyPay1Null() {
                this[this.tableT105.HourlyPay1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourlyPay2Null() {
                return this.IsNull(this.tableT105.HourlyPay2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourlyPay2Null() {
                this[this.tableT105.HourlyPay2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourlyPay3Null() {
                return this.IsNull(this.tableT105.HourlyPay3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourlyPay3Null() {
                this[this.tableT105.HourlyPay3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHourlyPay4Null() {
                return this.IsNull(this.tableT105.HourlyPay4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHourlyPay4Null() {
                this[this.tableT105.HourlyPay4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMemoNull() {
                return this.IsNull(this.tableT105.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMemoNull() {
                this[this.tableT105.MemoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class T201Row : global::System.Data.DataRow {
            
            private T201DataTable tableT201;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal T201Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT201 = ((T201DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableT201.IdColumn]));
                }
                set {
                    this[this.tableT201.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ord {
                get {
                    return ((int)(this[this.tableT201.OrdColumn]));
                }
                set {
                    this[this.tableT201.OrdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeMap {
                get {
                    return ((string)(this[this.tableT201.CodeMapColumn]));
                }
                set {
                    this[this.tableT201.CodeMapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableT201.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T201”中列“Description”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT201.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Enabled {
                get {
                    return ((bool)(this[this.tableT201.EnabledColumn]));
                }
                set {
                    this[this.tableT201.EnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    return ((int)(this[this.tableT201.TypeColumn]));
                }
                set {
                    this[this.tableT201.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyId {
                get {
                    return ((int)(this[this.tableT201.CompanyIdColumn]));
                }
                set {
                    this[this.tableT201.CompanyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow CompanyRow {
                get {
                    return ((CompanyRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.T201_dbo.Company_CompanyId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.T201_dbo.Company_CompanyId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableT201.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableT201.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TimeSheetRow : global::System.Data.DataRow {
            
            private TimeSheetDataTable tableTimeSheet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TimeSheetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTimeSheet = ((TimeSheetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableTimeSheet.IdColumn]));
                }
                set {
                    this[this.tableTimeSheet.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime StartDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTimeSheet.StartDateColumn]));
                }
                set {
                    this[this.tableTimeSheet.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime StopDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTimeSheet.StopDateColumn]));
                }
                set {
                    this[this.tableTimeSheet.StopDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Note {
                get {
                    try {
                        return ((string)(this[this.tableTimeSheet.NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TimeSheet”中列“Note”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTimeSheet.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Paid {
                get {
                    return ((bool)(this[this.tableTimeSheet.PaidColumn]));
                }
                set {
                    this[this.tableTimeSheet.PaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TimeSheetDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTimeSheet.TimeSheetDateColumn]));
                }
                set {
                    this[this.tableTimeSheet.TimeSheetDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TimeSheetType {
                get {
                    return ((int)(this[this.tableTimeSheet.TimeSheetTypeColumn]));
                }
                set {
                    this[this.tableTimeSheet.TimeSheetTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double VacationTime {
                get {
                    return ((double)(this[this.tableTimeSheet.VacationTimeColumn]));
                }
                set {
                    this[this.tableTimeSheet.VacationTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalWorkTime {
                get {
                    return ((double)(this[this.tableTimeSheet.TotalWorkTimeColumn]));
                }
                set {
                    this[this.tableTimeSheet.TotalWorkTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SickTime {
                get {
                    return ((double)(this[this.tableTimeSheet.SickTimeColumn]));
                }
                set {
                    this[this.tableTimeSheet.SickTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RegulaWorkTime {
                get {
                    return ((double)(this[this.tableTimeSheet.RegulaWorkTimeColumn]));
                }
                set {
                    this[this.tableTimeSheet.RegulaWorkTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OverTimeWorkTime {
                get {
                    return ((double)(this[this.tableTimeSheet.OverTimeWorkTimeColumn]));
                }
                set {
                    this[this.tableTimeSheet.OverTimeWorkTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float RegularPayrate {
                get {
                    return ((float)(this[this.tableTimeSheet.RegularPayrateColumn]));
                }
                set {
                    this[this.tableTimeSheet.RegularPayrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float OvertimePayrate {
                get {
                    return ((float)(this[this.tableTimeSheet.OvertimePayrateColumn]));
                }
                set {
                    this[this.tableTimeSheet.OvertimePayrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Locked {
                get {
                    return ((bool)(this[this.tableTimeSheet.LockedColumn]));
                }
                set {
                    this[this.tableTimeSheet.LockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExtraInt1 {
                get {
                    return ((bool)(this[this.tableTimeSheet.ExtraInt1Column]));
                }
                set {
                    this[this.tableTimeSheet.ExtraInt1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExtraInt2 {
                get {
                    return ((bool)(this[this.tableTimeSheet.ExtraInt2Column]));
                }
                set {
                    this[this.tableTimeSheet.ExtraInt2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExtraStr1 {
                get {
                    try {
                        return ((string)(this[this.tableTimeSheet.ExtraStr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TimeSheet”中列“ExtraStr1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTimeSheet.ExtraStr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExtraStr2 {
                get {
                    try {
                        return ((string)(this[this.tableTimeSheet.ExtraStr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TimeSheet”中列“ExtraStr2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTimeSheet.ExtraStr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JobId {
                get {
                    return ((int)(this[this.tableTimeSheet.JobIdColumn]));
                }
                set {
                    this[this.tableTimeSheet.JobIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid EmployeeId {
                get {
                    return ((global::System.Guid)(this[this.tableTimeSheet.EmployeeIdColumn]));
                }
                set {
                    this[this.tableTimeSheet.EmployeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyId {
                get {
                    return ((int)(this[this.tableTimeSheet.CompanyIdColumn]));
                }
                set {
                    this[this.tableTimeSheet.CompanyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow CompanyRow {
                get {
                    return ((CompanyRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.TimeSheet_dbo.Company_CompanyId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.TimeSheet_dbo.Company_CompanyId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow EmployeeRow {
                get {
                    return ((EmployeeRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.TimeSheet_dbo.Employee_EmployeeId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.TimeSheet_dbo.Employee_EmployeeId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoteNull() {
                return this.IsNull(this.tableTimeSheet.NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoteNull() {
                this[this.tableTimeSheet.NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExtraStr1Null() {
                return this.IsNull(this.tableTimeSheet.ExtraStr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExtraStr1Null() {
                this[this.tableTimeSheet.ExtraStr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExtraStr2Null() {
                return this.IsNull(this.tableTimeSheet.ExtraStr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExtraStr2Null() {
                this[this.tableTimeSheet.ExtraStr2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AccrualTimeJournalRow : global::System.Data.DataRow {
            
            private AccrualTimeJournalDataTable tableAccrualTimeJournal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AccrualTimeJournalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccrualTimeJournal = ((AccrualTimeJournalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid Id {
                get {
                    return ((global::System.Guid)(this[this.tableAccrualTimeJournal.IdColumn]));
                }
                set {
                    this[this.tableAccrualTimeJournal.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSN {
                get {
                    try {
                        return ((string)(this[this.tableAccrualTimeJournal.SSNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AccrualTimeJournal”中列“SSN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAccrualTimeJournal.SSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableAccrualTimeJournal.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AccrualTimeJournal”中列“EmployeeName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAccrualTimeJournal.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    return ((int)(this[this.tableAccrualTimeJournal.TypeColumn]));
                }
                set {
                    this[this.tableAccrualTimeJournal.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float Hours {
                get {
                    return ((float)(this[this.tableAccrualTimeJournal.HoursColumn]));
                }
                set {
                    this[this.tableAccrualTimeJournal.HoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Date {
                get {
                    return ((global::System.DateTime)(this[this.tableAccrualTimeJournal.DateColumn]));
                }
                set {
                    this[this.tableAccrualTimeJournal.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tableAccrualTimeJournal.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AccrualTimeJournal”中列“Memo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAccrualTimeJournal.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDate {
                get {
                    return ((global::System.DateTime)(this[this.tableAccrualTimeJournal.CreateDateColumn]));
                }
                set {
                    this[this.tableAccrualTimeJournal.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid EmployeeId {
                get {
                    return ((global::System.Guid)(this[this.tableAccrualTimeJournal.EmployeeIdColumn]));
                }
                set {
                    this[this.tableAccrualTimeJournal.EmployeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow EmployeeRow {
                get {
                    return ((EmployeeRow)(this.GetParentRow(this.Table.ParentRelations["FK_dbo.AccrualTimeJournal_dbo.Employee_EmployeeId"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_dbo.AccrualTimeJournal_dbo.Employee_EmployeeId"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSSNNull() {
                return this.IsNull(this.tableAccrualTimeJournal.SSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSSNNull() {
                this[this.tableAccrualTimeJournal.SSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableAccrualTimeJournal.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeNameNull() {
                this[this.tableAccrualTimeJournal.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMemoNull() {
                return this.IsNull(this.tableAccrualTimeJournal.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMemoNull() {
                this[this.tableAccrualTimeJournal.MemoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PS_ItemValueRow : global::System.Data.DataRow {
            
            private PS_ItemValueDataTable tablePS_ItemValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PS_ItemValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePS_ItemValue = ((PS_ItemValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Item {
                get {
                    try {
                        return ((string)(this[this.tablePS_ItemValue.ItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PS_ItemValue”中列“Item”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePS_ItemValue.ItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float TotalValue {
                get {
                    try {
                        return ((float)(this[this.tablePS_ItemValue.TotalValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PS_ItemValue”中列“TotalValue”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePS_ItemValue.TotalValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemNull() {
                return this.IsNull(this.tablePS_ItemValue.ItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemNull() {
                this[this.tablePS_ItemValue.ItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalValueNull() {
                return this.IsNull(this.tablePS_ItemValue.TotalValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalValueNull() {
                this[this.tablePS_ItemValue.TotalValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DS_ItemValueRow : global::System.Data.DataRow {
            
            private DS_ItemValueDataTable tableDS_ItemValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DS_ItemValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDS_ItemValue = ((DS_ItemValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Item {
                get {
                    try {
                        return ((string)(this[this.tableDS_ItemValue.ItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DS_ItemValue”中列“Item”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDS_ItemValue.ItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float TotalValue {
                get {
                    try {
                        return ((float)(this[this.tableDS_ItemValue.TotalValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DS_ItemValue”中列“TotalValue”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDS_ItemValue.TotalValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemNull() {
                return this.IsNull(this.tableDS_ItemValue.ItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemNull() {
                this[this.tableDS_ItemValue.ItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalValueNull() {
                return this.IsNull(this.tableDS_ItemValue.TotalValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalValueNull() {
                this[this.tableDS_ItemValue.TotalValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Null_ItemValueRow : global::System.Data.DataRow {
            
            private Null_ItemValueDataTable tableNull_ItemValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Null_ItemValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNull_ItemValue = ((Null_ItemValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Item {
                get {
                    try {
                        return ((string)(this[this.tableNull_ItemValue.ItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Null_ItemValue”中列“Item”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNull_ItemValue.ItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float TotalValue {
                get {
                    try {
                        return ((float)(this[this.tableNull_ItemValue.TotalValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Null_ItemValue”中列“TotalValue”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNull_ItemValue.TotalValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemNull() {
                return this.IsNull(this.tableNull_ItemValue.ItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemNull() {
                this[this.tableNull_ItemValue.ItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalValueNull() {
                return this.IsNull(this.tableNull_ItemValue.TotalValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalValueNull() {
                this[this.tableNull_ItemValue.TotalValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CompanyRowChangeEvent : global::System.EventArgs {
            
            private CompanyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRowChangeEvent(CompanyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CompanyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EmployeeRowChangeEvent : global::System.EventArgs {
            
            private EmployeeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRowChangeEvent(EmployeeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EmployeeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T100RowChangeEvent : global::System.EventArgs {
            
            private T100Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T100RowChangeEvent(T100Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T100Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T102RowChangeEvent : global::System.EventArgs {
            
            private T102Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T102RowChangeEvent(T102Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T102Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T105RowChangeEvent : global::System.EventArgs {
            
            private T105Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T105RowChangeEvent(T105Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T105Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class T201RowChangeEvent : global::System.EventArgs {
            
            private T201Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T201RowChangeEvent(T201Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public T201Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TimeSheetRowChangeEvent : global::System.EventArgs {
            
            private TimeSheetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TimeSheetRowChangeEvent(TimeSheetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TimeSheetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AccrualTimeJournalRowChangeEvent : global::System.EventArgs {
            
            private AccrualTimeJournalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccrualTimeJournalRowChangeEvent(AccrualTimeJournalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AccrualTimeJournalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PS_ItemValueRowChangeEvent : global::System.EventArgs {
            
            private PS_ItemValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PS_ItemValueRowChangeEvent(PS_ItemValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PS_ItemValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DS_ItemValueRowChangeEvent : global::System.EventArgs {
            
            private DS_ItemValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DS_ItemValueRowChangeEvent(DS_ItemValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DS_ItemValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Null_ItemValueRowChangeEvent : global::System.EventArgs {
            
            private Null_ItemValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Null_ItemValueRowChangeEvent(Null_ItemValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Null_ItemValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LivellPayRoll.LivellPayRollDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CompanyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CompanyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Company";
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("FedTaxId", "FedTaxId");
            tableMapping.ColumnMappings.Add("ContactName", "ContactName");
            tableMapping.ColumnMappings.Add("Telphone", "Telphone");
            tableMapping.ColumnMappings.Add("Fax", "Fax");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("WWW", "WWW");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("Address2", "Address2");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("Zip", "Zip");
            tableMapping.ColumnMappings.Add("TradeName", "TradeName");
            tableMapping.ColumnMappings.Add("PayFreq", "PayFreq");
            tableMapping.ColumnMappings.Add("TimeZone", "TimeZone");
            tableMapping.ColumnMappings.Add("RoundTo", "RoundTo");
            tableMapping.ColumnMappings.Add("WeekRule", "WeekRule");
            tableMapping.ColumnMappings.Add("WeekRuleValue", "WeekRuleValue");
            tableMapping.ColumnMappings.Add("DayRule", "DayRule");
            tableMapping.ColumnMappings.Add("DayRuleValue", "DayRuleValue");
            tableMapping.ColumnMappings.Add("DoubeRule", "DoubeRule");
            tableMapping.ColumnMappings.Add("DoubeRuleValue", "DoubeRuleValue");
            tableMapping.ColumnMappings.Add("CaliforniaRule", "CaliforniaRule");
            tableMapping.ColumnMappings.Add("allowedit", "allowedit");
            tableMapping.ColumnMappings.Add("DaylightSavingTime", "DaylightSavingTime");
            tableMapping.ColumnMappings.Add("PayReportByEndingDate", "PayReportByEndingDate");
            tableMapping.ColumnMappings.Add("ControlNo", "ControlNo");
            tableMapping.ColumnMappings.Add("Establish", "Establish");
            tableMapping.ColumnMappings.Add("FUTA", "FUTA");
            tableMapping.ColumnMappings.Add("StateID", "StateID");
            tableMapping.ColumnMappings.Add("StateUnemWage", "StateUnemWage");
            tableMapping.ColumnMappings.Add("SUTA", "SUTA");
            tableMapping.ColumnMappings.Add("PayRollRegTime", "PayRollRegTime");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Company] WHERE (([CompanyId] = @Original_CompanyId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Company] ([CompanyName], [FedTaxId], [ContactName], [Telphone], [Fax], [Email], [WWW], [Address1], [Address2], [City], [State], [Country], [Zip], [TradeName], [PayFreq], [TimeZone], [RoundTo], [WeekRule], [WeekRuleValue], [DayRule], [DayRuleValue], [DoubeRule], [DoubeRuleValue], [CaliforniaRule], [allowedit], [DaylightSavingTime], [PayReportByEndingDate], [ControlNo], [Establish], [FUTA], [StateID], [StateUnemWage], [SUTA], [PayRollRegTime]) VALUES (@CompanyName, @FedTaxId, @ContactName, @Telphone, @Fax, @Email, @WWW, @Address1, @Address2, @City, @State, @Country, @Zip, @TradeName, @PayFreq, @TimeZone, @RoundTo, @WeekRule, @WeekRuleValue, @DayRule, @DayRuleValue, @DoubeRule, @DoubeRuleValue, @CaliforniaRule, @allowedit, @DaylightSavingTime, @PayReportByEndingDate, @ControlNo, @Establish, @FUTA, @StateID, @StateUnemWage, @SUTA, @PayRollRegTime)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FedTaxId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FedTaxId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telphone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telphone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WWW", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WWW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Zip", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayFreq", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayFreq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeZone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeZone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoundTo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoundTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeekRule", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeekRule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeekRuleValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeekRuleValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayRule", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayRuleValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRuleValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoubeRule", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoubeRule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoubeRuleValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoubeRuleValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CaliforniaRule", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CaliforniaRule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@allowedit", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "allowedit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DaylightSavingTime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DaylightSavingTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayReportByEndingDate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayReportByEndingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ControlNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ControlNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Establish", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Establish", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StateID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StateUnemWage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StateUnemWage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayRollRegTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayRollRegTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Company] SET [CompanyName] = @CompanyName, [FedTaxId] = @FedTaxId, [ContactName] = @ContactName, [Telphone] = @Telphone, [Fax] = @Fax, [Email] = @Email, [WWW] = @WWW, [Address1] = @Address1, [Address2] = @Address2, [City] = @City, [State] = @State, [Country] = @Country, [Zip] = @Zip, [TradeName] = @TradeName, [PayFreq] = @PayFreq, [TimeZone] = @TimeZone, [RoundTo] = @RoundTo, [WeekRule] = @WeekRule, [WeekRuleValue] = @WeekRuleValue, [DayRule] = @DayRule, [DayRuleValue] = @DayRuleValue, [DoubeRule] = @DoubeRule, [DoubeRuleValue] = @DoubeRuleValue, [CaliforniaRule] = @CaliforniaRule, [allowedit] = @allowedit, [DaylightSavingTime] = @DaylightSavingTime, [PayReportByEndingDate] = @PayReportByEndingDate, [ControlNo] = @ControlNo, [Establish] = @Establish, [FUTA] = @FUTA, [StateID] = @StateID, [StateUnemWage] = @StateUnemWage, [SUTA] = @SUTA, [PayRollRegTime] = @PayRollRegTime WHERE (([CompanyId] = @Original_CompanyId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FedTaxId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FedTaxId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telphone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telphone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fax", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WWW", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WWW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Country", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Zip", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayFreq", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayFreq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeZone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeZone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoundTo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoundTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeekRule", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeekRule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WeekRuleValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WeekRuleValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayRule", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DayRuleValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DayRuleValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoubeRule", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoubeRule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoubeRuleValue", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoubeRuleValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CaliforniaRule", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CaliforniaRule", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@allowedit", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "allowedit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DaylightSavingTime", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DaylightSavingTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayReportByEndingDate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayReportByEndingDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ControlNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ControlNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Establish", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Establish", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StateID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StateUnemWage", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StateUnemWage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUTA", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayRollRegTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PayRollRegTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PayRollCon"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT CompanyId, CompanyName, FedTaxId, ContactName, Telphone, Fax, Email, WWW, Address1, Address2, City, State, Country, Zip, TradeName, PayFreq, TimeZone, RoundTo, WeekRule, WeekRuleValue, DayRule, DayRuleValue, DoubeRule, DoubeRuleValue, CaliforniaRule, allowedit, DaylightSavingTime, PayReportByEndingDate, ControlNo, Establish, FUTA, StateID, StateUnemWage, SUTA, PayRollRegTime FROM dbo.Company";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LivellPayRollDataSet.CompanyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LivellPayRollDataSet.CompanyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LivellPayRollDataSet.CompanyDataTable dataTable = new LivellPayRollDataSet.CompanyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet.CompanyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Company");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_CompanyId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_CompanyId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CompanyName, 
                    string FedTaxId, 
                    string ContactName, 
                    string Telphone, 
                    string Fax, 
                    string Email, 
                    string WWW, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zip, 
                    string TradeName, 
                    string PayFreq, 
                    string TimeZone, 
                    string RoundTo, 
                    bool WeekRule, 
                    double WeekRuleValue, 
                    bool DayRule, 
                    double DayRuleValue, 
                    bool DoubeRule, 
                    double DoubeRuleValue, 
                    bool CaliforniaRule, 
                    bool allowedit, 
                    bool DaylightSavingTime, 
                    bool PayReportByEndingDate, 
                    string ControlNo, 
                    string Establish, 
                    double FUTA, 
                    string StateID, 
                    double StateUnemWage, 
                    double SUTA, 
                    System.DateTime PayRollRegTime) {
            if ((CompanyName == null)) {
                throw new global::System.ArgumentNullException("CompanyName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CompanyName));
            }
            if ((FedTaxId == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FedTaxId));
            }
            if ((ContactName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ContactName));
            }
            if ((Telphone == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Telphone));
            }
            if ((Fax == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Fax));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Email));
            }
            if ((WWW == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(WWW));
            }
            if ((Address1 == null)) {
                throw new global::System.ArgumentNullException("Address1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Address1));
            }
            if ((Address2 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Address2));
            }
            if ((City == null)) {
                throw new global::System.ArgumentNullException("City");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(City));
            }
            if ((State == null)) {
                throw new global::System.ArgumentNullException("State");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(State));
            }
            if ((Country == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Country));
            }
            if ((Zip == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Zip));
            }
            if ((TradeName == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(TradeName));
            }
            if ((PayFreq == null)) {
                throw new global::System.ArgumentNullException("PayFreq");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(PayFreq));
            }
            if ((TimeZone == null)) {
                throw new global::System.ArgumentNullException("TimeZone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(TimeZone));
            }
            if ((RoundTo == null)) {
                throw new global::System.ArgumentNullException("RoundTo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(RoundTo));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(WeekRule));
            this.Adapter.InsertCommand.Parameters[18].Value = ((double)(WeekRuleValue));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(DayRule));
            this.Adapter.InsertCommand.Parameters[20].Value = ((double)(DayRuleValue));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(DoubeRule));
            this.Adapter.InsertCommand.Parameters[22].Value = ((double)(DoubeRuleValue));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(CaliforniaRule));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(allowedit));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(DaylightSavingTime));
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(PayReportByEndingDate));
            if ((ControlNo == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(ControlNo));
            }
            if ((Establish == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Establish));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((double)(FUTA));
            if ((StateID == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(StateID));
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((double)(StateUnemWage));
            this.Adapter.InsertCommand.Parameters[32].Value = ((double)(SUTA));
            this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(PayRollRegTime));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CompanyName, 
                    string FedTaxId, 
                    string ContactName, 
                    string Telphone, 
                    string Fax, 
                    string Email, 
                    string WWW, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zip, 
                    string TradeName, 
                    string PayFreq, 
                    string TimeZone, 
                    string RoundTo, 
                    bool WeekRule, 
                    double WeekRuleValue, 
                    bool DayRule, 
                    double DayRuleValue, 
                    bool DoubeRule, 
                    double DoubeRuleValue, 
                    bool CaliforniaRule, 
                    bool allowedit, 
                    bool DaylightSavingTime, 
                    bool PayReportByEndingDate, 
                    string ControlNo, 
                    string Establish, 
                    double FUTA, 
                    string StateID, 
                    double StateUnemWage, 
                    double SUTA, 
                    System.DateTime PayRollRegTime, 
                    int Original_CompanyId) {
            if ((CompanyName == null)) {
                throw new global::System.ArgumentNullException("CompanyName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CompanyName));
            }
            if ((FedTaxId == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FedTaxId));
            }
            if ((ContactName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ContactName));
            }
            if ((Telphone == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Telphone));
            }
            if ((Fax == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Fax));
            }
            if ((Email == null)) {
                throw new global::System.ArgumentNullException("Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Email));
            }
            if ((WWW == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(WWW));
            }
            if ((Address1 == null)) {
                throw new global::System.ArgumentNullException("Address1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Address1));
            }
            if ((Address2 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Address2));
            }
            if ((City == null)) {
                throw new global::System.ArgumentNullException("City");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(City));
            }
            if ((State == null)) {
                throw new global::System.ArgumentNullException("State");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(State));
            }
            if ((Country == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Country));
            }
            if ((Zip == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Zip));
            }
            if ((TradeName == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(TradeName));
            }
            if ((PayFreq == null)) {
                throw new global::System.ArgumentNullException("PayFreq");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(PayFreq));
            }
            if ((TimeZone == null)) {
                throw new global::System.ArgumentNullException("TimeZone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(TimeZone));
            }
            if ((RoundTo == null)) {
                throw new global::System.ArgumentNullException("RoundTo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(RoundTo));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(WeekRule));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(WeekRuleValue));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(DayRule));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(DayRuleValue));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(DoubeRule));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(DoubeRuleValue));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(CaliforniaRule));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(allowedit));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(DaylightSavingTime));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(PayReportByEndingDate));
            if ((ControlNo == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(ControlNo));
            }
            if ((Establish == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Establish));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(FUTA));
            if ((StateID == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(StateID));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(StateUnemWage));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(SUTA));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(PayRollRegTime));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_CompanyId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EmployeeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EmployeeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Employee";
            tableMapping.ColumnMappings.Add("EmployeeId", "EmployeeId");
            tableMapping.ColumnMappings.Add("LName", "LName");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("MInit", "MInit");
            tableMapping.ColumnMappings.Add("SSN", "SSN");
            tableMapping.ColumnMappings.Add("F99", "F99");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("Address2", "Address2");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("ZipCode", "ZipCode");
            tableMapping.ColumnMappings.Add("TimeZone", "TimeZone");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("UserRole", "UserRole");
            tableMapping.ColumnMappings.Add("F100", "F100");
            tableMapping.ColumnMappings.Add("F101", "F101");
            tableMapping.ColumnMappings.Add("F102", "F102");
            tableMapping.ColumnMappings.Add("F103", "F103");
            tableMapping.ColumnMappings.Add("F104", "F104");
            tableMapping.ColumnMappings.Add("F105", "F105");
            tableMapping.ColumnMappings.Add("F106", "F106");
            tableMapping.ColumnMappings.Add("F107", "F107");
            tableMapping.ColumnMappings.Add("F108", "F108");
            tableMapping.ColumnMappings.Add("F109", "F109");
            tableMapping.ColumnMappings.Add("F110", "F110");
            tableMapping.ColumnMappings.Add("F111", "F111");
            tableMapping.ColumnMappings.Add("F112", "F112");
            tableMapping.ColumnMappings.Add("F113", "F113");
            tableMapping.ColumnMappings.Add("F114", "F114");
            tableMapping.ColumnMappings.Add("F115", "F115");
            tableMapping.ColumnMappings.Add("F116", "F116");
            tableMapping.ColumnMappings.Add("F117", "F117");
            tableMapping.ColumnMappings.Add("F118", "F118");
            tableMapping.ColumnMappings.Add("F119", "F119");
            tableMapping.ColumnMappings.Add("F120", "F120");
            tableMapping.ColumnMappings.Add("F121", "F121");
            tableMapping.ColumnMappings.Add("F122", "F122");
            tableMapping.ColumnMappings.Add("F1231", "F1231");
            tableMapping.ColumnMappings.Add("F1232", "F1232");
            tableMapping.ColumnMappings.Add("F1233", "F1233");
            tableMapping.ColumnMappings.Add("F1234", "F1234");
            tableMapping.ColumnMappings.Add("F1235", "F1235");
            tableMapping.ColumnMappings.Add("F124", "F124");
            tableMapping.ColumnMappings.Add("F125", "F125");
            tableMapping.ColumnMappings.Add("IsW2StatutoryEmployee", "IsW2StatutoryEmployee");
            tableMapping.ColumnMappings.Add("IsW2RetirementPlan", "IsW2RetirementPlan");
            tableMapping.ColumnMappings.Add("DoesReceiveAdvanceEIC", "DoesReceiveAdvanceEIC");
            tableMapping.ColumnMappings.Add("F1236", "F1236");
            tableMapping.ColumnMappings.Add("F1237", "F1237");
            tableMapping.ColumnMappings.Add("HourlyPay1", "HourlyPay1");
            tableMapping.ColumnMappings.Add("HourlyPay2", "HourlyPay2");
            tableMapping.ColumnMappings.Add("HourlyPay3", "HourlyPay3");
            tableMapping.ColumnMappings.Add("HourlyPay4", "HourlyPay4");
            tableMapping.ColumnMappings.Add("SickRate", "SickRate");
            tableMapping.ColumnMappings.Add("VacationRate", "VacationRate");
            tableMapping.ColumnMappings.Add("is1099Employee", "is1099Employee");
            tableMapping.ColumnMappings.Add("PTOAcchours", "PTOAcchours");
            tableMapping.ColumnMappings.Add("VacAccHours", "VacAccHours");
            tableMapping.ColumnMappings.Add("printPTOStub", "printPTOStub");
            tableMapping.ColumnMappings.Add("PTOAccRate", "PTOAccRate");
            tableMapping.ColumnMappings.Add("VacAccRate", "VacAccRate");
            tableMapping.ColumnMappings.Add("PTOCapHours", "PTOCapHours");
            tableMapping.ColumnMappings.Add("VacCapHours", "VacCapHours");
            tableMapping.ColumnMappings.Add("isPayrollSetup", "isPayrollSetup");
            tableMapping.ColumnMappings.Add("DefaultJob", "DefaultJob");
            tableMapping.ColumnMappings.Add("isEmailComfirmed", "isEmailComfirmed");
            tableMapping.ColumnMappings.Add("SecurityStamp", "SecurityStamp");
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId");
            tableMapping.ColumnMappings.Add("AppUserId", "AppUserId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Employee] WHERE (([EmployeeId] = @Original_EmployeeId))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeId", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Employee] ([EmployeeId], [LName], [FName], [MInit], [SSN], [F9" +
                "9], [Address1], [Address2], [City], [State], [ZipCode], [TimeZone], [Phone], [Em" +
                "ail], [UserRole], [F100], [F101], [F102], [F103], [F104], [F105], [F106], [F107]" +
                ", [F108], [F109], [F110], [F111], [F112], [F113], [F114], [F115], [F116], [F117]" +
                ", [F118], [F119], [F120], [F121], [F122], [F1231], [F1232], [F1233], [F1234], [F" +
                "1235], [F124], [F125], [IsW2StatutoryEmployee], [IsW2RetirementPlan], [DoesRecei" +
                "veAdvanceEIC], [F1236], [F1237], [HourlyPay1], [HourlyPay2], [HourlyPay3], [Hour" +
                "lyPay4], [SickRate], [VacationRate], [is1099Employee], [PTOAcchours], [VacAccHou" +
                "rs], [printPTOStub], [PTOAccRate], [VacAccRate], [PTOCapHours], [VacCapHours], [" +
                "isPayrollSetup], [DefaultJob], [isEmailComfirmed], [SecurityStamp], [CompanyId]," +
                " [AppUserId]) VALUES (@EmployeeId, @LName, @FName, @MInit, @SSN, @F99, @Address1" +
                ", @Address2, @City, @State, @ZipCode, @TimeZone, @Phone, @Email, @UserRole, @F10" +
                "0, @F101, @F102, @F103, @F104, @F105, @F106, @F107, @F108, @F109, @F110, @F111, " +
                "@F112, @F113, @F114, @F115, @F116, @F117, @F118, @F119, @F120, @F121, @F122, @F1" +
                "231, @F1232, @F1233, @F1234, @F1235, @F124, @F125, @IsW2StatutoryEmployee, @IsW2" +
                "RetirementPlan, @DoesReceiveAdvanceEIC, @F1236, @F1237, @HourlyPay1, @HourlyPay2" +
                ", @HourlyPay3, @HourlyPay4, @SickRate, @VacationRate, @is1099Employee, @PTOAccho" +
                "urs, @VacAccHours, @printPTOStub, @PTOAccRate, @VacAccRate, @PTOCapHours, @VacCa" +
                "pHours, @isPayrollSetup, @DefaultJob, @isEmailComfirmed, @SecurityStamp, @Compan" +
                "yId, @AppUserId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MInit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MInit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F99", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F99", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZipCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZipCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeZone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeZone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserRole", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserRole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F100", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F101", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F101", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F102", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F102", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F103", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F103", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F104", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F104", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F105", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F105", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F106", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F106", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F107", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F107", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F108", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F108", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F109", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F109", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F110", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F110", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F111", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F111", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F112", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F112", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F113", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F113", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F114", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F114", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F115", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F115", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F116", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F116", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F117", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F117", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F118", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F118", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F119", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F119", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F120", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F120", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F121", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F121", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F122", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F122", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1231", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1231", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1232", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1232", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1233", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1233", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1234", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1234", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1235", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1235", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F124", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F124", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F125", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F125", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsW2StatutoryEmployee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsW2StatutoryEmployee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsW2RetirementPlan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsW2RetirementPlan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoesReceiveAdvanceEIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoesReceiveAdvanceEIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1236", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1236", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1237", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1237", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SickRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SickRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacationRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacationRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is1099Employee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is1099Employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOAcchours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOAcchours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacAccHours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacAccHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@printPTOStub", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "printPTOStub", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOAccRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOAccRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacAccRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacAccRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOCapHours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOCapHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacCapHours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacCapHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPayrollSetup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isPayrollSetup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultJob", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isEmailComfirmed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isEmailComfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityStamp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityStamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AppUserId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AppUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Employee] SET [EmployeeId] = @EmployeeId, [LName] = @LName, [FName]" +
                " = @FName, [MInit] = @MInit, [SSN] = @SSN, [F99] = @F99, [Address1] = @Address1," +
                " [Address2] = @Address2, [City] = @City, [State] = @State, [ZipCode] = @ZipCode," +
                " [TimeZone] = @TimeZone, [Phone] = @Phone, [Email] = @Email, [UserRole] = @UserR" +
                "ole, [F100] = @F100, [F101] = @F101, [F102] = @F102, [F103] = @F103, [F104] = @F" +
                "104, [F105] = @F105, [F106] = @F106, [F107] = @F107, [F108] = @F108, [F109] = @F" +
                "109, [F110] = @F110, [F111] = @F111, [F112] = @F112, [F113] = @F113, [F114] = @F" +
                "114, [F115] = @F115, [F116] = @F116, [F117] = @F117, [F118] = @F118, [F119] = @F" +
                "119, [F120] = @F120, [F121] = @F121, [F122] = @F122, [F1231] = @F1231, [F1232] =" +
                " @F1232, [F1233] = @F1233, [F1234] = @F1234, [F1235] = @F1235, [F124] = @F124, [" +
                "F125] = @F125, [IsW2StatutoryEmployee] = @IsW2StatutoryEmployee, [IsW2Retirement" +
                "Plan] = @IsW2RetirementPlan, [DoesReceiveAdvanceEIC] = @DoesReceiveAdvanceEIC, [" +
                "F1236] = @F1236, [F1237] = @F1237, [HourlyPay1] = @HourlyPay1, [HourlyPay2] = @H" +
                "ourlyPay2, [HourlyPay3] = @HourlyPay3, [HourlyPay4] = @HourlyPay4, [SickRate] = " +
                "@SickRate, [VacationRate] = @VacationRate, [is1099Employee] = @is1099Employee, [" +
                "PTOAcchours] = @PTOAcchours, [VacAccHours] = @VacAccHours, [printPTOStub] = @pri" +
                "ntPTOStub, [PTOAccRate] = @PTOAccRate, [VacAccRate] = @VacAccRate, [PTOCapHours]" +
                " = @PTOCapHours, [VacCapHours] = @VacCapHours, [isPayrollSetup] = @isPayrollSetu" +
                "p, [DefaultJob] = @DefaultJob, [isEmailComfirmed] = @isEmailComfirmed, [Security" +
                "Stamp] = @SecurityStamp, [CompanyId] = @CompanyId, [AppUserId] = @AppUserId WHER" +
                "E (([EmployeeId] = @Original_EmployeeId))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MInit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MInit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F99", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F99", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZipCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZipCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeZone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeZone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserRole", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserRole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F100", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F101", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F101", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F102", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F102", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F103", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F103", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F104", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F104", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F105", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F105", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F106", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F106", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F107", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F107", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F108", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F108", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F109", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F109", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F110", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F110", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F111", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F111", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F112", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F112", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F113", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F113", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F114", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F114", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F115", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F115", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F116", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F116", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F117", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F117", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F118", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F118", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F119", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F119", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F120", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F120", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F121", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F121", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F122", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F122", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1231", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1231", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1232", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1232", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1233", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1233", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1234", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1234", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1235", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1235", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F124", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F124", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F125", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F125", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsW2StatutoryEmployee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsW2StatutoryEmployee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsW2RetirementPlan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsW2RetirementPlan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoesReceiveAdvanceEIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoesReceiveAdvanceEIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1236", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1236", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1237", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1237", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SickRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SickRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacationRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacationRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is1099Employee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is1099Employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOAcchours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOAcchours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacAccHours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacAccHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@printPTOStub", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "printPTOStub", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOAccRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOAccRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacAccRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacAccRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOCapHours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOCapHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacCapHours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacCapHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPayrollSetup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isPayrollSetup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DefaultJob", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DefaultJob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isEmailComfirmed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isEmailComfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityStamp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityStamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AppUserId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AppUserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeId", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PayRollCon"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT EmployeeId, LName, FName, MInit, SSN, F99, Address1, Address2, City, State, ZipCode, TimeZone, Phone, Email, UserRole, F100, F101, F102, F103, F104, F105, F106, F107, F108, F109, F110, F111, F112, F113, F114, F115, F116, F117, F118, F119, F120, F121, F122, F1231, F1232, F1233, F1234, F1235, F124, F125, IsW2StatutoryEmployee, IsW2RetirementPlan, DoesReceiveAdvanceEIC, F1236, F1237, HourlyPay1, HourlyPay2, HourlyPay3, HourlyPay4, SickRate, VacationRate, is1099Employee, PTOAcchours, VacAccHours, printPTOStub, PTOAccRate, VacAccRate, PTOCapHours, VacCapHours, isPayrollSetup, DefaultJob, isEmailComfirmed, SecurityStamp, CompanyId, AppUserId FROM dbo.Employee";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LivellPayRollDataSet.EmployeeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LivellPayRollDataSet.EmployeeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LivellPayRollDataSet.EmployeeDataTable dataTable = new LivellPayRollDataSet.EmployeeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet.EmployeeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Employee");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_EmployeeId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_EmployeeId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid EmployeeId, 
                    string LName, 
                    string FName, 
                    string MInit, 
                    string SSN, 
                    byte F99, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string ZipCode, 
                    string TimeZone, 
                    string Phone, 
                    string Email, 
                    string UserRole, 
                    float F100, 
                    float F101, 
                    float F102, 
                    System.DateTime F103, 
                    System.DateTime F104, 
                    System.DateTime F105, 
                    string F106, 
                    int F107, 
                    string F108, 
                    string F109, 
                    string F110, 
                    string F111, 
                    int F112, 
                    int F113, 
                    int F114, 
                    int F115, 
                    int F116, 
                    int F117, 
                    int F118, 
                    int F119, 
                    float F120, 
                    float F121, 
                    float F122, 
                    float F1231, 
                    float F1232, 
                    float F1233, 
                    float F1234, 
                    float F1235, 
                    int F124, 
                    int F125, 
                    int IsW2StatutoryEmployee, 
                    int IsW2RetirementPlan, 
                    int DoesReceiveAdvanceEIC, 
                    float F1236, 
                    float F1237, 
                    string HourlyPay1, 
                    string HourlyPay2, 
                    string HourlyPay3, 
                    string HourlyPay4, 
                    float SickRate, 
                    float VacationRate, 
                    int is1099Employee, 
                    float PTOAcchours, 
                    float VacAccHours, 
                    int printPTOStub, 
                    float PTOAccRate, 
                    float VacAccRate, 
                    float PTOCapHours, 
                    float VacCapHours, 
                    int isPayrollSetup, 
                    int DefaultJob, 
                    int isEmailComfirmed, 
                    string SecurityStamp, 
                    int CompanyId, 
                    string AppUserId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(EmployeeId));
            if ((LName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LName));
            }
            if ((FName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FName));
            }
            if ((MInit == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MInit));
            }
            if ((SSN == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SSN));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((byte)(F99));
            if ((Address1 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Address1));
            }
            if ((Address2 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Address2));
            }
            if ((City == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(City));
            }
            if ((State == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(State));
            }
            if ((ZipCode == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ZipCode));
            }
            if ((TimeZone == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(TimeZone));
            }
            if ((Phone == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Phone));
            }
            if ((Email == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Email));
            }
            if ((UserRole == null)) {
                throw new global::System.ArgumentNullException("UserRole");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(UserRole));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((float)(F100));
            this.Adapter.InsertCommand.Parameters[16].Value = ((float)(F101));
            this.Adapter.InsertCommand.Parameters[17].Value = ((float)(F102));
            this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(F103));
            this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(F104));
            this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(F105));
            if ((F106 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(F106));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((int)(F107));
            if ((F108 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(F108));
            }
            if ((F109 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(F109));
            }
            if ((F110 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(F110));
            }
            if ((F111 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(F111));
            }
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(F112));
            this.Adapter.InsertCommand.Parameters[28].Value = ((int)(F113));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(F114));
            this.Adapter.InsertCommand.Parameters[30].Value = ((int)(F115));
            this.Adapter.InsertCommand.Parameters[31].Value = ((int)(F116));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(F117));
            this.Adapter.InsertCommand.Parameters[33].Value = ((int)(F118));
            this.Adapter.InsertCommand.Parameters[34].Value = ((int)(F119));
            this.Adapter.InsertCommand.Parameters[35].Value = ((float)(F120));
            this.Adapter.InsertCommand.Parameters[36].Value = ((float)(F121));
            this.Adapter.InsertCommand.Parameters[37].Value = ((float)(F122));
            this.Adapter.InsertCommand.Parameters[38].Value = ((float)(F1231));
            this.Adapter.InsertCommand.Parameters[39].Value = ((float)(F1232));
            this.Adapter.InsertCommand.Parameters[40].Value = ((float)(F1233));
            this.Adapter.InsertCommand.Parameters[41].Value = ((float)(F1234));
            this.Adapter.InsertCommand.Parameters[42].Value = ((float)(F1235));
            this.Adapter.InsertCommand.Parameters[43].Value = ((int)(F124));
            this.Adapter.InsertCommand.Parameters[44].Value = ((int)(F125));
            this.Adapter.InsertCommand.Parameters[45].Value = ((int)(IsW2StatutoryEmployee));
            this.Adapter.InsertCommand.Parameters[46].Value = ((int)(IsW2RetirementPlan));
            this.Adapter.InsertCommand.Parameters[47].Value = ((int)(DoesReceiveAdvanceEIC));
            this.Adapter.InsertCommand.Parameters[48].Value = ((float)(F1236));
            this.Adapter.InsertCommand.Parameters[49].Value = ((float)(F1237));
            if ((HourlyPay1 == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(HourlyPay1));
            }
            if ((HourlyPay2 == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(HourlyPay2));
            }
            if ((HourlyPay3 == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(HourlyPay3));
            }
            if ((HourlyPay4 == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(HourlyPay4));
            }
            this.Adapter.InsertCommand.Parameters[54].Value = ((float)(SickRate));
            this.Adapter.InsertCommand.Parameters[55].Value = ((float)(VacationRate));
            this.Adapter.InsertCommand.Parameters[56].Value = ((int)(is1099Employee));
            this.Adapter.InsertCommand.Parameters[57].Value = ((float)(PTOAcchours));
            this.Adapter.InsertCommand.Parameters[58].Value = ((float)(VacAccHours));
            this.Adapter.InsertCommand.Parameters[59].Value = ((int)(printPTOStub));
            this.Adapter.InsertCommand.Parameters[60].Value = ((float)(PTOAccRate));
            this.Adapter.InsertCommand.Parameters[61].Value = ((float)(VacAccRate));
            this.Adapter.InsertCommand.Parameters[62].Value = ((float)(PTOCapHours));
            this.Adapter.InsertCommand.Parameters[63].Value = ((float)(VacCapHours));
            this.Adapter.InsertCommand.Parameters[64].Value = ((int)(isPayrollSetup));
            this.Adapter.InsertCommand.Parameters[65].Value = ((int)(DefaultJob));
            this.Adapter.InsertCommand.Parameters[66].Value = ((int)(isEmailComfirmed));
            if ((SecurityStamp == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(SecurityStamp));
            }
            this.Adapter.InsertCommand.Parameters[68].Value = ((int)(CompanyId));
            if ((AppUserId == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(AppUserId));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid EmployeeId, 
                    string LName, 
                    string FName, 
                    string MInit, 
                    string SSN, 
                    byte F99, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string ZipCode, 
                    string TimeZone, 
                    string Phone, 
                    string Email, 
                    string UserRole, 
                    float F100, 
                    float F101, 
                    float F102, 
                    System.DateTime F103, 
                    System.DateTime F104, 
                    System.DateTime F105, 
                    string F106, 
                    int F107, 
                    string F108, 
                    string F109, 
                    string F110, 
                    string F111, 
                    int F112, 
                    int F113, 
                    int F114, 
                    int F115, 
                    int F116, 
                    int F117, 
                    int F118, 
                    int F119, 
                    float F120, 
                    float F121, 
                    float F122, 
                    float F1231, 
                    float F1232, 
                    float F1233, 
                    float F1234, 
                    float F1235, 
                    int F124, 
                    int F125, 
                    int IsW2StatutoryEmployee, 
                    int IsW2RetirementPlan, 
                    int DoesReceiveAdvanceEIC, 
                    float F1236, 
                    float F1237, 
                    string HourlyPay1, 
                    string HourlyPay2, 
                    string HourlyPay3, 
                    string HourlyPay4, 
                    float SickRate, 
                    float VacationRate, 
                    int is1099Employee, 
                    float PTOAcchours, 
                    float VacAccHours, 
                    int printPTOStub, 
                    float PTOAccRate, 
                    float VacAccRate, 
                    float PTOCapHours, 
                    float VacCapHours, 
                    int isPayrollSetup, 
                    int DefaultJob, 
                    int isEmailComfirmed, 
                    string SecurityStamp, 
                    int CompanyId, 
                    string AppUserId, 
                    System.Guid Original_EmployeeId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(EmployeeId));
            if ((LName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LName));
            }
            if ((FName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FName));
            }
            if ((MInit == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MInit));
            }
            if ((SSN == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(SSN));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((byte)(F99));
            if ((Address1 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Address1));
            }
            if ((Address2 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Address2));
            }
            if ((City == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(City));
            }
            if ((State == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(State));
            }
            if ((ZipCode == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ZipCode));
            }
            if ((TimeZone == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(TimeZone));
            }
            if ((Phone == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Phone));
            }
            if ((Email == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Email));
            }
            if ((UserRole == null)) {
                throw new global::System.ArgumentNullException("UserRole");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(UserRole));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((float)(F100));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(F101));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((float)(F102));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(F103));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(F104));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(F105));
            if ((F106 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(F106));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(F107));
            if ((F108 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(F108));
            }
            if ((F109 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(F109));
            }
            if ((F110 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(F110));
            }
            if ((F111 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(F111));
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(F112));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(F113));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(F114));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(F115));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(F116));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(F117));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(F118));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(F119));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((float)(F120));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((float)(F121));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((float)(F122));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((float)(F1231));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((float)(F1232));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((float)(F1233));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((float)(F1234));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((float)(F1235));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(F124));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(F125));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(IsW2StatutoryEmployee));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(IsW2RetirementPlan));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(DoesReceiveAdvanceEIC));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((float)(F1236));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((float)(F1237));
            if ((HourlyPay1 == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(HourlyPay1));
            }
            if ((HourlyPay2 == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(HourlyPay2));
            }
            if ((HourlyPay3 == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(HourlyPay3));
            }
            if ((HourlyPay4 == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(HourlyPay4));
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((float)(SickRate));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((float)(VacationRate));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(is1099Employee));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((float)(PTOAcchours));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((float)(VacAccHours));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(printPTOStub));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((float)(PTOAccRate));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((float)(VacAccRate));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((float)(PTOCapHours));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((float)(VacCapHours));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(isPayrollSetup));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(DefaultJob));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(isEmailComfirmed));
            if ((SecurityStamp == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(SecurityStamp));
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((int)(CompanyId));
            if ((AppUserId == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(AppUserId));
            }
            this.Adapter.UpdateCommand.Parameters[70].Value = ((System.Guid)(Original_EmployeeId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string LName, 
                    string FName, 
                    string MInit, 
                    string SSN, 
                    byte F99, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string ZipCode, 
                    string TimeZone, 
                    string Phone, 
                    string Email, 
                    string UserRole, 
                    float F100, 
                    float F101, 
                    float F102, 
                    System.DateTime F103, 
                    System.DateTime F104, 
                    System.DateTime F105, 
                    string F106, 
                    int F107, 
                    string F108, 
                    string F109, 
                    string F110, 
                    string F111, 
                    int F112, 
                    int F113, 
                    int F114, 
                    int F115, 
                    int F116, 
                    int F117, 
                    int F118, 
                    int F119, 
                    float F120, 
                    float F121, 
                    float F122, 
                    float F1231, 
                    float F1232, 
                    float F1233, 
                    float F1234, 
                    float F1235, 
                    int F124, 
                    int F125, 
                    int IsW2StatutoryEmployee, 
                    int IsW2RetirementPlan, 
                    int DoesReceiveAdvanceEIC, 
                    float F1236, 
                    float F1237, 
                    string HourlyPay1, 
                    string HourlyPay2, 
                    string HourlyPay3, 
                    string HourlyPay4, 
                    float SickRate, 
                    float VacationRate, 
                    int is1099Employee, 
                    float PTOAcchours, 
                    float VacAccHours, 
                    int printPTOStub, 
                    float PTOAccRate, 
                    float VacAccRate, 
                    float PTOCapHours, 
                    float VacCapHours, 
                    int isPayrollSetup, 
                    int DefaultJob, 
                    int isEmailComfirmed, 
                    string SecurityStamp, 
                    int CompanyId, 
                    string AppUserId, 
                    System.Guid Original_EmployeeId) {
            return this.Update(Original_EmployeeId, LName, FName, MInit, SSN, F99, Address1, Address2, City, State, ZipCode, TimeZone, Phone, Email, UserRole, F100, F101, F102, F103, F104, F105, F106, F107, F108, F109, F110, F111, F112, F113, F114, F115, F116, F117, F118, F119, F120, F121, F122, F1231, F1232, F1233, F1234, F1235, F124, F125, IsW2StatutoryEmployee, IsW2RetirementPlan, DoesReceiveAdvanceEIC, F1236, F1237, HourlyPay1, HourlyPay2, HourlyPay3, HourlyPay4, SickRate, VacationRate, is1099Employee, PTOAcchours, VacAccHours, printPTOStub, PTOAccRate, VacAccRate, PTOCapHours, VacCapHours, isPayrollSetup, DefaultJob, isEmailComfirmed, SecurityStamp, CompanyId, AppUserId, Original_EmployeeId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T100TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T100TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T100";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("BankInfo1", "BankInfo1");
            tableMapping.ColumnMappings.Add("BankInfo2", "BankInfo2");
            tableMapping.ColumnMappings.Add("BankInfo3", "BankInfo3");
            tableMapping.ColumnMappings.Add("TransitCode", "TransitCode");
            tableMapping.ColumnMappings.Add("BankRouteNo", "BankRouteNo");
            tableMapping.ColumnMappings.Add("BankAccountNo", "BankAccountNo");
            tableMapping.ColumnMappings.Add("StartCheckNo", "StartCheckNo");
            tableMapping.ColumnMappings.Add("CurrentCheckNo", "CurrentCheckNo");
            tableMapping.ColumnMappings.Add("CheckWidth", "CheckWidth");
            tableMapping.ColumnMappings.Add("CheckHeight", "CheckHeight");
            tableMapping.ColumnMappings.Add("OffsetLeft", "OffsetLeft");
            tableMapping.ColumnMappings.Add("OffsetRight", "OffsetRight");
            tableMapping.ColumnMappings.Add("OffsetUp", "OffsetUp");
            tableMapping.ColumnMappings.Add("OffsetDown", "OffsetDown");
            tableMapping.ColumnMappings.Add("Logo", "Logo");
            tableMapping.ColumnMappings.Add("Signature", "Signature");
            tableMapping.ColumnMappings.Add("Company1", "Company1");
            tableMapping.ColumnMappings.Add("Company2", "Company2");
            tableMapping.ColumnMappings.Add("Company3", "Company3");
            tableMapping.ColumnMappings.Add("Company4", "Company4");
            tableMapping.ColumnMappings.Add("BlankBankStock", "BlankBankStock");
            tableMapping.ColumnMappings.Add("ExField1", "ExField1");
            tableMapping.ColumnMappings.Add("ExField2", "ExField2");
            tableMapping.ColumnMappings.Add("ExField3", "ExField3");
            tableMapping.ColumnMappings.Add("nodisplaymicr", "nodisplaymicr");
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T100] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T100] ([Id], [BankName], [BankInfo1], [BankInfo2], [BankInfo3], [TransitCode], [BankRouteNo], [BankAccountNo], [StartCheckNo], [CurrentCheckNo], [CheckWidth], [CheckHeight], [OffsetLeft], [OffsetRight], [OffsetUp], [OffsetDown], [Logo], [Signature], [Company1], [Company2], [Company3], [Company4], [BlankBankStock], [ExField1], [ExField2], [ExField3], [nodisplaymicr], [CompanyId]) VALUES (@Id, @BankName, @BankInfo1, @BankInfo2, @BankInfo3, @TransitCode, @BankRouteNo, @BankAccountNo, @StartCheckNo, @CurrentCheckNo, @CheckWidth, @CheckHeight, @OffsetLeft, @OffsetRight, @OffsetUp, @OffsetDown, @Logo, @Signature, @Company1, @Company2, @Company3, @Company4, @BlankBankStock, @ExField1, @ExField2, @ExField3, @nodisplaymicr, @CompanyId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankInfo1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankInfo1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankInfo2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankInfo2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankInfo3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankInfo3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransitCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransitCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankRouteNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankRouteNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccountNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartCheckNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartCheckNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentCheckNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentCheckNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckWidth", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckHeight", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OffsetLeft", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffsetLeft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OffsetRight", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffsetRight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OffsetUp", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffsetUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OffsetDown", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffsetDown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Logo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Logo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Signature", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Signature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BlankBankStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BlankBankStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nodisplaymicr", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nodisplaymicr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T100] SET [Id] = @Id, [BankName] = @BankName, [BankInfo1] = @BankInfo1, [BankInfo2] = @BankInfo2, [BankInfo3] = @BankInfo3, [TransitCode] = @TransitCode, [BankRouteNo] = @BankRouteNo, [BankAccountNo] = @BankAccountNo, [StartCheckNo] = @StartCheckNo, [CurrentCheckNo] = @CurrentCheckNo, [CheckWidth] = @CheckWidth, [CheckHeight] = @CheckHeight, [OffsetLeft] = @OffsetLeft, [OffsetRight] = @OffsetRight, [OffsetUp] = @OffsetUp, [OffsetDown] = @OffsetDown, [Logo] = @Logo, [Signature] = @Signature, [Company1] = @Company1, [Company2] = @Company2, [Company3] = @Company3, [Company4] = @Company4, [BlankBankStock] = @BlankBankStock, [ExField1] = @ExField1, [ExField2] = @ExField2, [ExField3] = @ExField3, [nodisplaymicr] = @nodisplaymicr, [CompanyId] = @CompanyId WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankInfo1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankInfo1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankInfo2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankInfo2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankInfo3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankInfo3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransitCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransitCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankRouteNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankRouteNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccountNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartCheckNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartCheckNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentCheckNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrentCheckNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckWidth", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckWidth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CheckHeight", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CheckHeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OffsetLeft", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffsetLeft", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OffsetRight", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffsetRight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OffsetUp", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffsetUp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OffsetDown", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OffsetDown", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Logo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Logo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Signature", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Signature", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BlankBankStock", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BlankBankStock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nodisplaymicr", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nodisplaymicr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PayRollCon"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, BankName, BankInfo1, BankInfo2, BankInfo3, TransitCode, BankRouteNo, BankAccountNo, StartCheckNo, CurrentCheckNo, CheckWidth, CheckHeight, OffsetLeft, OffsetRight, OffsetUp, OffsetDown, Logo, Signature, Company1, Company2, Company3, Company4, BlankBankStock, ExField1, ExField2, ExField3, nodisplaymicr, CompanyId FROM dbo.T100";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LivellPayRollDataSet.T100DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LivellPayRollDataSet.T100DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LivellPayRollDataSet.T100DataTable dataTable = new LivellPayRollDataSet.T100DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet.T100DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet dataSet) {
            return this.Adapter.Update(dataSet, "T100");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid Id, 
                    string BankName, 
                    string BankInfo1, 
                    string BankInfo2, 
                    string BankInfo3, 
                    string TransitCode, 
                    string BankRouteNo, 
                    string BankAccountNo, 
                    int StartCheckNo, 
                    int CurrentCheckNo, 
                    float CheckWidth, 
                    float CheckHeight, 
                    float OffsetLeft, 
                    float OffsetRight, 
                    float OffsetUp, 
                    float OffsetDown, 
                    string Logo, 
                    string Signature, 
                    string Company1, 
                    string Company2, 
                    string Company3, 
                    string Company4, 
                    bool BlankBankStock, 
                    string ExField1, 
                    bool ExField2, 
                    string ExField3, 
                    bool nodisplaymicr, 
                    int CompanyId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(Id));
            if ((BankName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BankName));
            }
            if ((BankInfo1 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(BankInfo1));
            }
            if ((BankInfo2 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BankInfo2));
            }
            if ((BankInfo3 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(BankInfo3));
            }
            if ((TransitCode == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(TransitCode));
            }
            if ((BankRouteNo == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(BankRouteNo));
            }
            if ((BankAccountNo == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BankAccountNo));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(StartCheckNo));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(CurrentCheckNo));
            this.Adapter.InsertCommand.Parameters[10].Value = ((float)(CheckWidth));
            this.Adapter.InsertCommand.Parameters[11].Value = ((float)(CheckHeight));
            this.Adapter.InsertCommand.Parameters[12].Value = ((float)(OffsetLeft));
            this.Adapter.InsertCommand.Parameters[13].Value = ((float)(OffsetRight));
            this.Adapter.InsertCommand.Parameters[14].Value = ((float)(OffsetUp));
            this.Adapter.InsertCommand.Parameters[15].Value = ((float)(OffsetDown));
            if ((Logo == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Logo));
            }
            if ((Signature == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Signature));
            }
            if ((Company1 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Company1));
            }
            if ((Company2 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(Company2));
            }
            if ((Company3 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(Company3));
            }
            if ((Company4 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(Company4));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(BlankBankStock));
            if ((ExField1 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(ExField1));
            }
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(ExField2));
            if ((ExField3 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(ExField3));
            }
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(nodisplaymicr));
            this.Adapter.InsertCommand.Parameters[27].Value = ((int)(CompanyId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid Id, 
                    string BankName, 
                    string BankInfo1, 
                    string BankInfo2, 
                    string BankInfo3, 
                    string TransitCode, 
                    string BankRouteNo, 
                    string BankAccountNo, 
                    int StartCheckNo, 
                    int CurrentCheckNo, 
                    float CheckWidth, 
                    float CheckHeight, 
                    float OffsetLeft, 
                    float OffsetRight, 
                    float OffsetUp, 
                    float OffsetDown, 
                    string Logo, 
                    string Signature, 
                    string Company1, 
                    string Company2, 
                    string Company3, 
                    string Company4, 
                    bool BlankBankStock, 
                    string ExField1, 
                    bool ExField2, 
                    string ExField3, 
                    bool nodisplaymicr, 
                    int CompanyId, 
                    System.Guid Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(Id));
            if ((BankName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BankName));
            }
            if ((BankInfo1 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(BankInfo1));
            }
            if ((BankInfo2 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BankInfo2));
            }
            if ((BankInfo3 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BankInfo3));
            }
            if ((TransitCode == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(TransitCode));
            }
            if ((BankRouteNo == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(BankRouteNo));
            }
            if ((BankAccountNo == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(BankAccountNo));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(StartCheckNo));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(CurrentCheckNo));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((float)(CheckWidth));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(CheckHeight));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((float)(OffsetLeft));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((float)(OffsetRight));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((float)(OffsetUp));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((float)(OffsetDown));
            if ((Logo == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Logo));
            }
            if ((Signature == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Signature));
            }
            if ((Company1 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Company1));
            }
            if ((Company2 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Company2));
            }
            if ((Company3 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Company3));
            }
            if ((Company4 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Company4));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(BlankBankStock));
            if ((ExField1 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(ExField1));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(ExField2));
            if ((ExField3 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(ExField3));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(nodisplaymicr));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(CompanyId));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string BankName, 
                    string BankInfo1, 
                    string BankInfo2, 
                    string BankInfo3, 
                    string TransitCode, 
                    string BankRouteNo, 
                    string BankAccountNo, 
                    int StartCheckNo, 
                    int CurrentCheckNo, 
                    float CheckWidth, 
                    float CheckHeight, 
                    float OffsetLeft, 
                    float OffsetRight, 
                    float OffsetUp, 
                    float OffsetDown, 
                    string Logo, 
                    string Signature, 
                    string Company1, 
                    string Company2, 
                    string Company3, 
                    string Company4, 
                    bool BlankBankStock, 
                    string ExField1, 
                    bool ExField2, 
                    string ExField3, 
                    bool nodisplaymicr, 
                    int CompanyId, 
                    System.Guid Original_Id) {
            return this.Update(Original_Id, BankName, BankInfo1, BankInfo2, BankInfo3, TransitCode, BankRouteNo, BankAccountNo, StartCheckNo, CurrentCheckNo, CheckWidth, CheckHeight, OffsetLeft, OffsetRight, OffsetUp, OffsetDown, Logo, Signature, Company1, Company2, Company3, Company4, BlankBankStock, ExField1, ExField2, ExField3, nodisplaymicr, CompanyId, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T102TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T102TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T102";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("ItemId", "ItemId");
            tableMapping.ColumnMappings.Add("CodeMap", "CodeMap");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("AnnualLimit", "AnnualLimit");
            tableMapping.ColumnMappings.Add("Taxable", "Taxable");
            tableMapping.ColumnMappings.Add("FICATaxable", "FICATaxable");
            tableMapping.ColumnMappings.Add("PctofIncome", "PctofIncome");
            tableMapping.ColumnMappings.Add("Enabled", "Enabled");
            tableMapping.ColumnMappings.Add("W2Box10", "W2Box10");
            tableMapping.ColumnMappings.Add("W2Box12", "W2Box12");
            tableMapping.ColumnMappings.Add("W2Code", "W2Code");
            tableMapping.ColumnMappings.Add("ExField1", "ExField1");
            tableMapping.ColumnMappings.Add("ExField2", "ExField2");
            tableMapping.ColumnMappings.Add("ExField3", "ExField3");
            tableMapping.ColumnMappings.Add("ExField4", "ExField4");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T102] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[T102] ([Id], [ItemId], [CodeMap], [Description], [AnnualLimit], [Taxable], [FICATaxable], [PctofIncome], [Enabled], [W2Box10], [W2Box12], [W2Code], [ExField1], [ExField2], [ExField3], [ExField4], [Type], [CompanyId]) VALUES (@Id, @ItemId, @CodeMap, @Description, @AnnualLimit, @Taxable, @FICATaxable, @PctofIncome, @Enabled, @W2Box10, @W2Box12, @W2Code, @ExField1, @ExField2, @ExField3, @ExField4, @Type, @CompanyId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodeMap", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeMap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnnualLimit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnualLimit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Taxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Taxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FICATaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FICATaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PctofIncome", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PctofIncome", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W2Box10", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W2Box10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W2Box12", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W2Box12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W2Code", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W2Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[T102] SET [Id] = @Id, [ItemId] = @ItemId, [CodeMap] = @CodeMap, [Description] = @Description, [AnnualLimit] = @AnnualLimit, [Taxable] = @Taxable, [FICATaxable] = @FICATaxable, [PctofIncome] = @PctofIncome, [Enabled] = @Enabled, [W2Box10] = @W2Box10, [W2Box12] = @W2Box12, [W2Code] = @W2Code, [ExField1] = @ExField1, [ExField2] = @ExField2, [ExField3] = @ExField3, [ExField4] = @ExField4, [Type] = @Type, [CompanyId] = @CompanyId WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodeMap", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeMap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnnualLimit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnnualLimit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Taxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Taxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FICATaxable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FICATaxable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PctofIncome", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PctofIncome", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W2Box10", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W2Box10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W2Box12", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W2Box12", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@W2Code", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "W2Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExField4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExField4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PayRollCon"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, ItemId, CodeMap, Description, AnnualLimit, Taxable, FICATaxable, Pctof" +
                "Income, Enabled, W2Box10, W2Box12, W2Code, ExField1, ExField2, ExField3, ExField" +
                "4, Type, CompanyId FROM dbo.T102";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LivellPayRollDataSet.T102DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LivellPayRollDataSet.T102DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LivellPayRollDataSet.T102DataTable dataTable = new LivellPayRollDataSet.T102DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet.T102DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet dataSet) {
            return this.Adapter.Update(dataSet, "T102");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid Id, 
                    int ItemId, 
                    string CodeMap, 
                    string Description, 
                    double AnnualLimit, 
                    bool Taxable, 
                    bool FICATaxable, 
                    bool PctofIncome, 
                    bool Enabled, 
                    bool W2Box10, 
                    bool W2Box12, 
                    string W2Code, 
                    string ExField1, 
                    int ExField2, 
                    string ExField3, 
                    int ExField4, 
                    int Type, 
                    int CompanyId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ItemId));
            if ((CodeMap == null)) {
                throw new global::System.ArgumentNullException("CodeMap");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CodeMap));
            }
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(AnnualLimit));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(Taxable));
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(FICATaxable));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(PctofIncome));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Enabled));
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(W2Box10));
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(W2Box12));
            if ((W2Code == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(W2Code));
            }
            if ((ExField1 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ExField1));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(ExField2));
            if ((ExField3 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ExField3));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(ExField4));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Type));
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(CompanyId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid Id, 
                    int ItemId, 
                    string CodeMap, 
                    string Description, 
                    double AnnualLimit, 
                    bool Taxable, 
                    bool FICATaxable, 
                    bool PctofIncome, 
                    bool Enabled, 
                    bool W2Box10, 
                    bool W2Box12, 
                    string W2Code, 
                    string ExField1, 
                    int ExField2, 
                    string ExField3, 
                    int ExField4, 
                    int Type, 
                    int CompanyId, 
                    System.Guid Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ItemId));
            if ((CodeMap == null)) {
                throw new global::System.ArgumentNullException("CodeMap");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CodeMap));
            }
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(AnnualLimit));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(Taxable));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(FICATaxable));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(PctofIncome));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Enabled));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(W2Box10));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(W2Box12));
            if ((W2Code == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(W2Code));
            }
            if ((ExField1 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ExField1));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ExField2));
            if ((ExField3 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ExField3));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(ExField4));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Type));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(CompanyId));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ItemId, 
                    string CodeMap, 
                    string Description, 
                    double AnnualLimit, 
                    bool Taxable, 
                    bool FICATaxable, 
                    bool PctofIncome, 
                    bool Enabled, 
                    bool W2Box10, 
                    bool W2Box12, 
                    string W2Code, 
                    string ExField1, 
                    int ExField2, 
                    string ExField3, 
                    int ExField4, 
                    int Type, 
                    int CompanyId, 
                    System.Guid Original_Id) {
            return this.Update(Original_Id, ItemId, CodeMap, Description, AnnualLimit, Taxable, FICATaxable, PctofIncome, Enabled, W2Box10, W2Box12, W2Code, ExField1, ExField2, ExField3, ExField4, Type, CompanyId, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T105TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T105TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T105";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("DateEndPeriod", "DateEndPeriod");
            tableMapping.ColumnMappings.Add("DateStartPeriod", "DateStartPeriod");
            tableMapping.ColumnMappings.Add("DateSubmitted", "DateSubmitted");
            tableMapping.ColumnMappings.Add("LName", "LName");
            tableMapping.ColumnMappings.Add("FName", "FName");
            tableMapping.ColumnMappings.Add("MInit", "MInit");
            tableMapping.ColumnMappings.Add("SSN", "SSN");
            tableMapping.ColumnMappings.Add("F99", "F99");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("Address2", "Address2");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("ZipCode", "ZipCode");
            tableMapping.ColumnMappings.Add("State", "State");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("F100", "F100");
            tableMapping.ColumnMappings.Add("F101", "F101");
            tableMapping.ColumnMappings.Add("F102", "F102");
            tableMapping.ColumnMappings.Add("F103", "F103");
            tableMapping.ColumnMappings.Add("F104", "F104");
            tableMapping.ColumnMappings.Add("F105", "F105");
            tableMapping.ColumnMappings.Add("S100", "S100");
            tableMapping.ColumnMappings.Add("S101", "S101");
            tableMapping.ColumnMappings.Add("S102", "S102");
            tableMapping.ColumnMappings.Add("S103", "S103");
            tableMapping.ColumnMappings.Add("S104", "S104");
            tableMapping.ColumnMappings.Add("S105", "S105");
            tableMapping.ColumnMappings.Add("S106", "S106");
            tableMapping.ColumnMappings.Add("S107", "S107");
            tableMapping.ColumnMappings.Add("S108", "S108");
            tableMapping.ColumnMappings.Add("S109", "S109");
            tableMapping.ColumnMappings.Add("S110", "S110");
            tableMapping.ColumnMappings.Add("S111", "S111");
            tableMapping.ColumnMappings.Add("S112", "S112");
            tableMapping.ColumnMappings.Add("S113", "S113");
            tableMapping.ColumnMappings.Add("S114", "S114");
            tableMapping.ColumnMappings.Add("S115", "S115");
            tableMapping.ColumnMappings.Add("S116", "S116");
            tableMapping.ColumnMappings.Add("S117", "S117");
            tableMapping.ColumnMappings.Add("S118", "S118");
            tableMapping.ColumnMappings.Add("S119", "S119");
            tableMapping.ColumnMappings.Add("S120", "S120");
            tableMapping.ColumnMappings.Add("S121", "S121");
            tableMapping.ColumnMappings.Add("S122", "S122");
            tableMapping.ColumnMappings.Add("F106", "F106");
            tableMapping.ColumnMappings.Add("F107", "F107");
            tableMapping.ColumnMappings.Add("F108", "F108");
            tableMapping.ColumnMappings.Add("F109", "F109");
            tableMapping.ColumnMappings.Add("F110", "F110");
            tableMapping.ColumnMappings.Add("F111", "F111");
            tableMapping.ColumnMappings.Add("F112", "F112");
            tableMapping.ColumnMappings.Add("F113", "F113");
            tableMapping.ColumnMappings.Add("F114", "F114");
            tableMapping.ColumnMappings.Add("F115", "F115");
            tableMapping.ColumnMappings.Add("F116", "F116");
            tableMapping.ColumnMappings.Add("F117", "F117");
            tableMapping.ColumnMappings.Add("F118", "F118");
            tableMapping.ColumnMappings.Add("F119", "F119");
            tableMapping.ColumnMappings.Add("F120", "F120");
            tableMapping.ColumnMappings.Add("F121", "F121");
            tableMapping.ColumnMappings.Add("F122", "F122");
            tableMapping.ColumnMappings.Add("S1231", "S1231");
            tableMapping.ColumnMappings.Add("S1241", "S1241");
            tableMapping.ColumnMappings.Add("S1232", "S1232");
            tableMapping.ColumnMappings.Add("S1242", "S1242");
            tableMapping.ColumnMappings.Add("S1233", "S1233");
            tableMapping.ColumnMappings.Add("S1243", "S1243");
            tableMapping.ColumnMappings.Add("S1234", "S1234");
            tableMapping.ColumnMappings.Add("S1244", "S1244");
            tableMapping.ColumnMappings.Add("S1235", "S1235");
            tableMapping.ColumnMappings.Add("S1245", "S1245");
            tableMapping.ColumnMappings.Add("S1251", "S1251");
            tableMapping.ColumnMappings.Add("S1261", "S1261");
            tableMapping.ColumnMappings.Add("S1252", "S1252");
            tableMapping.ColumnMappings.Add("S1262", "S1262");
            tableMapping.ColumnMappings.Add("S1253", "S1253");
            tableMapping.ColumnMappings.Add("S1263", "S1263");
            tableMapping.ColumnMappings.Add("S1254", "S1254");
            tableMapping.ColumnMappings.Add("S1264", "S1264");
            tableMapping.ColumnMappings.Add("S1255", "S1255");
            tableMapping.ColumnMappings.Add("S1265", "S1265");
            tableMapping.ColumnMappings.Add("S127", "S127");
            tableMapping.ColumnMappings.Add("F1231", "F1231");
            tableMapping.ColumnMappings.Add("F1232", "F1232");
            tableMapping.ColumnMappings.Add("F1233", "F1233");
            tableMapping.ColumnMappings.Add("F1234", "F1234");
            tableMapping.ColumnMappings.Add("F1235", "F1235");
            tableMapping.ColumnMappings.Add("F124", "F124");
            tableMapping.ColumnMappings.Add("F125", "F125");
            tableMapping.ColumnMappings.Add("IsW2StatutoryEmployee", "IsW2StatutoryEmployee");
            tableMapping.ColumnMappings.Add("IsW2RetirementPlan", "IsW2RetirementPlan");
            tableMapping.ColumnMappings.Add("DoesReceiveAdvanceEIC", "DoesReceiveAdvanceEIC");
            tableMapping.ColumnMappings.Add("EmployerSocialSecurity", "EmployerSocialSecurity");
            tableMapping.ColumnMappings.Add("EmployerMedicare", "EmployerMedicare");
            tableMapping.ColumnMappings.Add("AdvanceEIC", "AdvanceEIC");
            tableMapping.ColumnMappings.Add("CheckNo", "CheckNo");
            tableMapping.ColumnMappings.Add("DateLastEdit", "DateLastEdit");
            tableMapping.ColumnMappings.Add("Checked", "Checked");
            tableMapping.ColumnMappings.Add("S1236", "S1236");
            tableMapping.ColumnMappings.Add("S1246", "S1246");
            tableMapping.ColumnMappings.Add("S1237", "S1237");
            tableMapping.ColumnMappings.Add("S1247", "S1247");
            tableMapping.ColumnMappings.Add("F1236", "F1236");
            tableMapping.ColumnMappings.Add("F1237", "F1237");
            tableMapping.ColumnMappings.Add("HourlyPay1", "HourlyPay1");
            tableMapping.ColumnMappings.Add("HourlyPay2", "HourlyPay2");
            tableMapping.ColumnMappings.Add("HourlyPay3", "HourlyPay3");
            tableMapping.ColumnMappings.Add("HourlyPay4", "HourlyPay4");
            tableMapping.ColumnMappings.Add("SickRate", "SickRate");
            tableMapping.ColumnMappings.Add("VacationRate", "VacationRate");
            tableMapping.ColumnMappings.Add("IsPaid", "IsPaid");
            tableMapping.ColumnMappings.Add("is1099Employee", "is1099Employee");
            tableMapping.ColumnMappings.Add("PTOAcchours", "PTOAcchours");
            tableMapping.ColumnMappings.Add("VacAccHours", "VacAccHours");
            tableMapping.ColumnMappings.Add("printPTOStub", "printPTOStub");
            tableMapping.ColumnMappings.Add("PTOAccRate", "PTOAccRate");
            tableMapping.ColumnMappings.Add("VacAccRate", "VacAccRate");
            tableMapping.ColumnMappings.Add("PTOCapHours", "PTOCapHours");
            tableMapping.ColumnMappings.Add("VacCapHours", "VacCapHours");
            tableMapping.ColumnMappings.Add("isPayrollSetup", "isPayrollSetup");
            tableMapping.ColumnMappings.Add("Memo", "Memo");
            tableMapping.ColumnMappings.Add("EmployeeId", "EmployeeId");
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T105] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T105] ([Id], [DateEndPeriod], [DateStartPeriod], [DateSubmitte" +
                "d], [LName], [FName], [MInit], [SSN], [F99], [Address1], [Address2], [City], [Zi" +
                "pCode], [State], [Phone], [F100], [F101], [F102], [F103], [F104], [F105], [S100]" +
                ", [S101], [S102], [S103], [S104], [S105], [S106], [S107], [S108], [S109], [S110]" +
                ", [S111], [S112], [S113], [S114], [S115], [S116], [S117], [S118], [S119], [S120]" +
                ", [S121], [S122], [F106], [F107], [F108], [F109], [F110], [F111], [F112], [F113]" +
                ", [F114], [F115], [F116], [F117], [F118], [F119], [F120], [F121], [F122], [S1231" +
                "], [S1241], [S1232], [S1242], [S1233], [S1243], [S1234], [S1244], [S1235], [S124" +
                "5], [S1251], [S1261], [S1252], [S1262], [S1253], [S1263], [S1254], [S1264], [S12" +
                "55], [S1265], [S127], [F1231], [F1232], [F1233], [F1234], [F1235], [F124], [F125" +
                "], [IsW2StatutoryEmployee], [IsW2RetirementPlan], [DoesReceiveAdvanceEIC], [Empl" +
                "oyerSocialSecurity], [EmployerMedicare], [AdvanceEIC], [DateLastEdit], [Checked]" +
                ", [S1236], [S1246], [S1237], [S1247], [F1236], [F1237], [HourlyPay1], [HourlyPay" +
                "2], [HourlyPay3], [HourlyPay4], [SickRate], [VacationRate], [IsPaid], [is1099Emp" +
                "loyee], [PTOAcchours], [VacAccHours], [printPTOStub], [PTOAccRate], [VacAccRate]" +
                ", [PTOCapHours], [VacCapHours], [isPayrollSetup], [Memo], [EmployeeId], [Company" +
                "Id]) VALUES (@Id, @DateEndPeriod, @DateStartPeriod, @DateSubmitted, @LName, @FNa" +
                "me, @MInit, @SSN, @F99, @Address1, @Address2, @City, @ZipCode, @State, @Phone, @" +
                "F100, @F101, @F102, @F103, @F104, @F105, @S100, @S101, @S102, @S103, @S104, @S10" +
                "5, @S106, @S107, @S108, @S109, @S110, @S111, @S112, @S113, @S114, @S115, @S116, " +
                "@S117, @S118, @S119, @S120, @S121, @S122, @F106, @F107, @F108, @F109, @F110, @F1" +
                "11, @F112, @F113, @F114, @F115, @F116, @F117, @F118, @F119, @F120, @F121, @F122," +
                " @S1231, @S1241, @S1232, @S1242, @S1233, @S1243, @S1234, @S1244, @S1235, @S1245," +
                " @S1251, @S1261, @S1252, @S1262, @S1253, @S1263, @S1254, @S1264, @S1255, @S1265," +
                " @S127, @F1231, @F1232, @F1233, @F1234, @F1235, @F124, @F125, @IsW2StatutoryEmpl" +
                "oyee, @IsW2RetirementPlan, @DoesReceiveAdvanceEIC, @EmployerSocialSecurity, @Emp" +
                "loyerMedicare, @AdvanceEIC, @DateLastEdit, @Checked, @S1236, @S1246, @S1237, @S1" +
                "247, @F1236, @F1237, @HourlyPay1, @HourlyPay2, @HourlyPay3, @HourlyPay4, @SickRa" +
                "te, @VacationRate, @IsPaid, @is1099Employee, @PTOAcchours, @VacAccHours, @printP" +
                "TOStub, @PTOAccRate, @VacAccRate, @PTOCapHours, @VacCapHours, @isPayrollSetup, @" +
                "Memo, @EmployeeId, @CompanyId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateEndPeriod", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateEndPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateStartPeriod", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateStartPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateSubmitted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateSubmitted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MInit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MInit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F99", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F99", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZipCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZipCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F100", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F101", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F101", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F102", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F102", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F103", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F103", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F104", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F104", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F105", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F105", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S100", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S101", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S101", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S102", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S102", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S103", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S103", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S104", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S104", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S105", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S105", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S106", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S106", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S107", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S107", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S108", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S108", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S109", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S109", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S110", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S110", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S111", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S111", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S112", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S112", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S113", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S113", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S114", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S114", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S115", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S115", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S116", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S116", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S117", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S117", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S118", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S118", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S119", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S119", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S120", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S120", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S121", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S121", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S122", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S122", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F106", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F106", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F107", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F107", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F108", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F108", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F109", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F109", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F110", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F110", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F111", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F111", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F112", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F112", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F113", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F113", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F114", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F114", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F115", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F115", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F116", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F116", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F117", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F117", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F118", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F118", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F119", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F119", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F120", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F120", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F121", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F121", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F122", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F122", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1231", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1231", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1241", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1241", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1232", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1232", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1242", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1242", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1233", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1233", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1243", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1243", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1234", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1234", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1244", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1244", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1235", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1235", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1245", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1245", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1251", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1251", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1261", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1261", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1252", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1252", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1262", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1262", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1253", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1253", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1263", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1263", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1254", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1254", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1264", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1264", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1255", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1255", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1265", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1265", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S127", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S127", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1231", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1231", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1232", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1232", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1233", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1233", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1234", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1234", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1235", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1235", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F124", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F124", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F125", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F125", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsW2StatutoryEmployee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsW2StatutoryEmployee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsW2RetirementPlan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsW2RetirementPlan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoesReceiveAdvanceEIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoesReceiveAdvanceEIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployerSocialSecurity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployerSocialSecurity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployerMedicare", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployerMedicare", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvanceEIC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvanceEIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateLastEdit", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateLastEdit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Checked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Checked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1236", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1236", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1246", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1246", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1237", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1237", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1247", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1247", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1236", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1236", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1237", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1237", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SickRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SickRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacationRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacationRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPaid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPaid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is1099Employee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is1099Employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOAcchours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOAcchours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacAccHours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacAccHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@printPTOStub", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "printPTOStub", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOAccRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOAccRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacAccRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacAccRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOCapHours", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOCapHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacCapHours", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacCapHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPayrollSetup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isPayrollSetup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T105] SET [Id] = @Id, [DateEndPeriod] = @DateEndPeriod, [DateStartP" +
                "eriod] = @DateStartPeriod, [DateSubmitted] = @DateSubmitted, [LName] = @LName, [" +
                "FName] = @FName, [MInit] = @MInit, [SSN] = @SSN, [F99] = @F99, [Address1] = @Add" +
                "ress1, [Address2] = @Address2, [City] = @City, [ZipCode] = @ZipCode, [State] = @" +
                "State, [Phone] = @Phone, [F100] = @F100, [F101] = @F101, [F102] = @F102, [F103] " +
                "= @F103, [F104] = @F104, [F105] = @F105, [S100] = @S100, [S101] = @S101, [S102] " +
                "= @S102, [S103] = @S103, [S104] = @S104, [S105] = @S105, [S106] = @S106, [S107] " +
                "= @S107, [S108] = @S108, [S109] = @S109, [S110] = @S110, [S111] = @S111, [S112] " +
                "= @S112, [S113] = @S113, [S114] = @S114, [S115] = @S115, [S116] = @S116, [S117] " +
                "= @S117, [S118] = @S118, [S119] = @S119, [S120] = @S120, [S121] = @S121, [S122] " +
                "= @S122, [F106] = @F106, [F107] = @F107, [F108] = @F108, [F109] = @F109, [F110] " +
                "= @F110, [F111] = @F111, [F112] = @F112, [F113] = @F113, [F114] = @F114, [F115] " +
                "= @F115, [F116] = @F116, [F117] = @F117, [F118] = @F118, [F119] = @F119, [F120] " +
                "= @F120, [F121] = @F121, [F122] = @F122, [S1231] = @S1231, [S1241] = @S1241, [S1" +
                "232] = @S1232, [S1242] = @S1242, [S1233] = @S1233, [S1243] = @S1243, [S1234] = @" +
                "S1234, [S1244] = @S1244, [S1235] = @S1235, [S1245] = @S1245, [S1251] = @S1251, [" +
                "S1261] = @S1261, [S1252] = @S1252, [S1262] = @S1262, [S1253] = @S1253, [S1263] =" +
                " @S1263, [S1254] = @S1254, [S1264] = @S1264, [S1255] = @S1255, [S1265] = @S1265," +
                " [S127] = @S127, [F1231] = @F1231, [F1232] = @F1232, [F1233] = @F1233, [F1234] =" +
                " @F1234, [F1235] = @F1235, [F124] = @F124, [F125] = @F125, [IsW2StatutoryEmploye" +
                "e] = @IsW2StatutoryEmployee, [IsW2RetirementPlan] = @IsW2RetirementPlan, [DoesRe" +
                "ceiveAdvanceEIC] = @DoesReceiveAdvanceEIC, [EmployerSocialSecurity] = @EmployerS" +
                "ocialSecurity, [EmployerMedicare] = @EmployerMedicare, [AdvanceEIC] = @AdvanceEI" +
                "C, [DateLastEdit] = @DateLastEdit, [Checked] = @Checked, [S1236] = @S1236, [S124" +
                "6] = @S1246, [S1237] = @S1237, [S1247] = @S1247, [F1236] = @F1236, [F1237] = @F1" +
                "237, [HourlyPay1] = @HourlyPay1, [HourlyPay2] = @HourlyPay2, [HourlyPay3] = @Hou" +
                "rlyPay3, [HourlyPay4] = @HourlyPay4, [SickRate] = @SickRate, [VacationRate] = @V" +
                "acationRate, [IsPaid] = @IsPaid, [is1099Employee] = @is1099Employee, [PTOAcchour" +
                "s] = @PTOAcchours, [VacAccHours] = @VacAccHours, [printPTOStub] = @printPTOStub," +
                " [PTOAccRate] = @PTOAccRate, [VacAccRate] = @VacAccRate, [PTOCapHours] = @PTOCap" +
                "Hours, [VacCapHours] = @VacCapHours, [isPayrollSetup] = @isPayrollSetup, [Memo] " +
                "= @Memo, [EmployeeId] = @EmployeeId, [CompanyId] = @CompanyId WHERE (([Id] = @Or" +
                "iginal_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateEndPeriod", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateEndPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateStartPeriod", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateStartPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateSubmitted", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateSubmitted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MInit", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MInit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F99", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F99", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZipCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZipCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@State", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F100", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F101", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F101", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F102", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F102", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F103", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F103", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F104", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F104", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F105", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F105", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S100", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S101", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S101", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S102", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S102", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S103", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S103", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S104", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S104", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S105", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S105", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S106", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S106", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S107", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S107", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S108", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S108", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S109", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S109", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S110", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S110", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S111", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S111", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S112", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S112", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S113", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S113", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S114", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S114", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S115", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S115", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S116", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S116", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S117", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S117", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S118", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S118", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S119", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S119", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S120", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S120", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S121", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S121", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S122", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S122", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F106", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F106", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F107", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F107", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F108", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F108", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F109", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F109", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F110", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F110", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F111", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F111", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F112", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F112", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F113", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F113", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F114", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F114", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F115", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F115", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F116", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F116", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F117", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F117", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F118", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F118", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F119", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F119", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F120", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F120", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F121", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F121", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F122", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F122", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1231", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1231", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1241", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1241", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1232", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1232", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1242", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1242", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1233", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1233", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1243", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1243", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1234", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1234", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1244", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1244", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1235", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1235", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1245", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1245", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1251", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1251", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1261", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1261", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1252", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1252", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1262", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1262", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1253", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1253", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1263", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1263", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1254", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1254", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1264", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1264", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1255", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1255", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1265", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1265", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S127", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S127", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1231", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1231", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1232", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1232", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1233", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1233", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1234", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1234", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1235", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1235", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F124", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F124", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F125", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F125", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsW2StatutoryEmployee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsW2StatutoryEmployee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsW2RetirementPlan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsW2RetirementPlan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoesReceiveAdvanceEIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoesReceiveAdvanceEIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployerSocialSecurity", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployerSocialSecurity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployerMedicare", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployerMedicare", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdvanceEIC", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdvanceEIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateLastEdit", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateLastEdit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Checked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Checked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1236", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1236", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1246", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1246", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1237", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1237", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S1247", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S1247", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1236", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1236", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F1237", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F1237", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HourlyPay4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HourlyPay4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SickRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SickRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacationRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacationRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPaid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPaid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is1099Employee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is1099Employee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOAcchours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOAcchours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacAccHours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacAccHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@printPTOStub", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "printPTOStub", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOAccRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOAccRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacAccRate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacAccRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PTOCapHours", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PTOCapHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacCapHours", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacCapHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPayrollSetup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isPayrollSetup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PayRollCon"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, DateEndPeriod, DateStartPeriod, DateSubmitted, LName, FName, MInit, SSN, F99, Address1, Address2, City, ZipCode, State, Phone, F100, F101, F102, F103, F104, F105, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, F106, F107, F108, F109, F110, F111, F112, F113, F114, F115, F116, F117, F118, F119, F120, F121, F122, S1231, S1241, S1232, S1242, S1233, S1243, S1234, S1244, S1235, S1245, S1251, S1261, S1252, S1262, S1253, S1263, S1254, S1264, S1255, S1265, S127, F1231, F1232, F1233, F1234, F1235, F124, F125, IsW2StatutoryEmployee, IsW2RetirementPlan, DoesReceiveAdvanceEIC, EmployerSocialSecurity, EmployerMedicare, AdvanceEIC, CheckNo, DateLastEdit, Checked, S1236, S1246, S1237, S1247, F1236, F1237, HourlyPay1, HourlyPay2, HourlyPay3, HourlyPay4, SickRate, VacationRate, IsPaid, is1099Employee, PTOAcchours, VacAccHours, printPTOStub, PTOAccRate, VacAccRate, PTOCapHours, VacCapHours, isPayrollSetup, Memo, EmployeeId, CompanyId FROM dbo.T105";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LivellPayRollDataSet.T105DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LivellPayRollDataSet.T105DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LivellPayRollDataSet.T105DataTable dataTable = new LivellPayRollDataSet.T105DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet.T105DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet dataSet) {
            return this.Adapter.Update(dataSet, "T105");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid Id, 
                    System.DateTime DateEndPeriod, 
                    System.DateTime DateStartPeriod, 
                    System.DateTime DateSubmitted, 
                    string LName, 
                    string FName, 
                    string MInit, 
                    string SSN, 
                    int F99, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string ZipCode, 
                    string State, 
                    string Phone, 
                    float F100, 
                    float F101, 
                    float F102, 
                    System.DateTime F103, 
                    System.DateTime F104, 
                    System.DateTime F105, 
                    float S100, 
                    float S101, 
                    float S102, 
                    float S103, 
                    float S104, 
                    float S105, 
                    float S106, 
                    float S107, 
                    float S108, 
                    float S109, 
                    float S110, 
                    float S111, 
                    float S112, 
                    float S113, 
                    float S114, 
                    float S115, 
                    double S116, 
                    double S117, 
                    float S118, 
                    float S119, 
                    float S120, 
                    float S121, 
                    float S122, 
                    string F106, 
                    int F107, 
                    string F108, 
                    string F109, 
                    string F110, 
                    string F111, 
                    int F112, 
                    int F113, 
                    int F114, 
                    int F115, 
                    int F116, 
                    int F117, 
                    int F118, 
                    int F119, 
                    double F120, 
                    float F121, 
                    float F122, 
                    string S1231, 
                    float S1241, 
                    string S1232, 
                    float S1242, 
                    string S1233, 
                    float S1243, 
                    string S1234, 
                    float S1244, 
                    string S1235, 
                    float S1245, 
                    string S1251, 
                    float S1261, 
                    string S1252, 
                    float S1262, 
                    string S1253, 
                    float S1263, 
                    string S1254, 
                    float S1264, 
                    string S1255, 
                    float S1265, 
                    string S127, 
                    double F1231, 
                    double F1232, 
                    double F1233, 
                    double F1234, 
                    double F1235, 
                    int F124, 
                    int F125, 
                    int IsW2StatutoryEmployee, 
                    int IsW2RetirementPlan, 
                    int DoesReceiveAdvanceEIC, 
                    float EmployerSocialSecurity, 
                    float EmployerMedicare, 
                    float AdvanceEIC, 
                    System.DateTime DateLastEdit, 
                    int Checked, 
                    string S1236, 
                    float S1246, 
                    string S1237, 
                    float S1247, 
                    float F1236, 
                    float F1237, 
                    string HourlyPay1, 
                    string HourlyPay2, 
                    string HourlyPay3, 
                    string HourlyPay4, 
                    float SickRate, 
                    float VacationRate, 
                    int IsPaid, 
                    int is1099Employee, 
                    float PTOAcchours, 
                    float VacAccHours, 
                    int printPTOStub, 
                    float PTOAccRate, 
                    float VacAccRate, 
                    double PTOCapHours, 
                    double VacCapHours, 
                    int isPayrollSetup, 
                    string Memo, 
                    System.Guid EmployeeId, 
                    int CompanyId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DateEndPeriod));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DateStartPeriod));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DateSubmitted));
            if ((LName == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LName));
            }
            if ((FName == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FName));
            }
            if ((MInit == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MInit));
            }
            if ((SSN == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SSN));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(F99));
            if ((Address1 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Address1));
            }
            if ((Address2 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Address2));
            }
            if ((City == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(City));
            }
            if ((ZipCode == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ZipCode));
            }
            if ((State == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(State));
            }
            if ((Phone == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Phone));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((float)(F100));
            this.Adapter.InsertCommand.Parameters[16].Value = ((float)(F101));
            this.Adapter.InsertCommand.Parameters[17].Value = ((float)(F102));
            this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(F103));
            this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(F104));
            this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(F105));
            this.Adapter.InsertCommand.Parameters[21].Value = ((float)(S100));
            this.Adapter.InsertCommand.Parameters[22].Value = ((float)(S101));
            this.Adapter.InsertCommand.Parameters[23].Value = ((float)(S102));
            this.Adapter.InsertCommand.Parameters[24].Value = ((float)(S103));
            this.Adapter.InsertCommand.Parameters[25].Value = ((float)(S104));
            this.Adapter.InsertCommand.Parameters[26].Value = ((float)(S105));
            this.Adapter.InsertCommand.Parameters[27].Value = ((float)(S106));
            this.Adapter.InsertCommand.Parameters[28].Value = ((float)(S107));
            this.Adapter.InsertCommand.Parameters[29].Value = ((float)(S108));
            this.Adapter.InsertCommand.Parameters[30].Value = ((float)(S109));
            this.Adapter.InsertCommand.Parameters[31].Value = ((float)(S110));
            this.Adapter.InsertCommand.Parameters[32].Value = ((float)(S111));
            this.Adapter.InsertCommand.Parameters[33].Value = ((float)(S112));
            this.Adapter.InsertCommand.Parameters[34].Value = ((float)(S113));
            this.Adapter.InsertCommand.Parameters[35].Value = ((float)(S114));
            this.Adapter.InsertCommand.Parameters[36].Value = ((float)(S115));
            this.Adapter.InsertCommand.Parameters[37].Value = ((double)(S116));
            this.Adapter.InsertCommand.Parameters[38].Value = ((double)(S117));
            this.Adapter.InsertCommand.Parameters[39].Value = ((float)(S118));
            this.Adapter.InsertCommand.Parameters[40].Value = ((float)(S119));
            this.Adapter.InsertCommand.Parameters[41].Value = ((float)(S120));
            this.Adapter.InsertCommand.Parameters[42].Value = ((float)(S121));
            this.Adapter.InsertCommand.Parameters[43].Value = ((float)(S122));
            if ((F106 == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(F106));
            }
            this.Adapter.InsertCommand.Parameters[45].Value = ((int)(F107));
            if ((F108 == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(F108));
            }
            if ((F109 == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(F109));
            }
            if ((F110 == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(F110));
            }
            if ((F111 == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(F111));
            }
            this.Adapter.InsertCommand.Parameters[50].Value = ((int)(F112));
            this.Adapter.InsertCommand.Parameters[51].Value = ((int)(F113));
            this.Adapter.InsertCommand.Parameters[52].Value = ((int)(F114));
            this.Adapter.InsertCommand.Parameters[53].Value = ((int)(F115));
            this.Adapter.InsertCommand.Parameters[54].Value = ((int)(F116));
            this.Adapter.InsertCommand.Parameters[55].Value = ((int)(F117));
            this.Adapter.InsertCommand.Parameters[56].Value = ((int)(F118));
            this.Adapter.InsertCommand.Parameters[57].Value = ((int)(F119));
            this.Adapter.InsertCommand.Parameters[58].Value = ((double)(F120));
            this.Adapter.InsertCommand.Parameters[59].Value = ((float)(F121));
            this.Adapter.InsertCommand.Parameters[60].Value = ((float)(F122));
            if ((S1231 == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(S1231));
            }
            this.Adapter.InsertCommand.Parameters[62].Value = ((float)(S1241));
            if ((S1232 == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(S1232));
            }
            this.Adapter.InsertCommand.Parameters[64].Value = ((float)(S1242));
            if ((S1233 == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(S1233));
            }
            this.Adapter.InsertCommand.Parameters[66].Value = ((float)(S1243));
            if ((S1234 == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(S1234));
            }
            this.Adapter.InsertCommand.Parameters[68].Value = ((float)(S1244));
            if ((S1235 == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(S1235));
            }
            this.Adapter.InsertCommand.Parameters[70].Value = ((float)(S1245));
            if ((S1251 == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(S1251));
            }
            this.Adapter.InsertCommand.Parameters[72].Value = ((float)(S1261));
            if ((S1252 == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(S1252));
            }
            this.Adapter.InsertCommand.Parameters[74].Value = ((float)(S1262));
            if ((S1253 == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(S1253));
            }
            this.Adapter.InsertCommand.Parameters[76].Value = ((float)(S1263));
            if ((S1254 == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(S1254));
            }
            this.Adapter.InsertCommand.Parameters[78].Value = ((float)(S1264));
            if ((S1255 == null)) {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = ((string)(S1255));
            }
            this.Adapter.InsertCommand.Parameters[80].Value = ((float)(S1265));
            if ((S127 == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(S127));
            }
            this.Adapter.InsertCommand.Parameters[82].Value = ((double)(F1231));
            this.Adapter.InsertCommand.Parameters[83].Value = ((double)(F1232));
            this.Adapter.InsertCommand.Parameters[84].Value = ((double)(F1233));
            this.Adapter.InsertCommand.Parameters[85].Value = ((double)(F1234));
            this.Adapter.InsertCommand.Parameters[86].Value = ((double)(F1235));
            this.Adapter.InsertCommand.Parameters[87].Value = ((int)(F124));
            this.Adapter.InsertCommand.Parameters[88].Value = ((int)(F125));
            this.Adapter.InsertCommand.Parameters[89].Value = ((int)(IsW2StatutoryEmployee));
            this.Adapter.InsertCommand.Parameters[90].Value = ((int)(IsW2RetirementPlan));
            this.Adapter.InsertCommand.Parameters[91].Value = ((int)(DoesReceiveAdvanceEIC));
            this.Adapter.InsertCommand.Parameters[92].Value = ((float)(EmployerSocialSecurity));
            this.Adapter.InsertCommand.Parameters[93].Value = ((float)(EmployerMedicare));
            this.Adapter.InsertCommand.Parameters[94].Value = ((float)(AdvanceEIC));
            this.Adapter.InsertCommand.Parameters[95].Value = ((System.DateTime)(DateLastEdit));
            this.Adapter.InsertCommand.Parameters[96].Value = ((int)(Checked));
            if ((S1236 == null)) {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = ((string)(S1236));
            }
            this.Adapter.InsertCommand.Parameters[98].Value = ((float)(S1246));
            if ((S1237 == null)) {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = ((string)(S1237));
            }
            this.Adapter.InsertCommand.Parameters[100].Value = ((float)(S1247));
            this.Adapter.InsertCommand.Parameters[101].Value = ((float)(F1236));
            this.Adapter.InsertCommand.Parameters[102].Value = ((float)(F1237));
            if ((HourlyPay1 == null)) {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = ((string)(HourlyPay1));
            }
            if ((HourlyPay2 == null)) {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = ((string)(HourlyPay2));
            }
            if ((HourlyPay3 == null)) {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = ((string)(HourlyPay3));
            }
            if ((HourlyPay4 == null)) {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = ((string)(HourlyPay4));
            }
            this.Adapter.InsertCommand.Parameters[107].Value = ((float)(SickRate));
            this.Adapter.InsertCommand.Parameters[108].Value = ((float)(VacationRate));
            this.Adapter.InsertCommand.Parameters[109].Value = ((int)(IsPaid));
            this.Adapter.InsertCommand.Parameters[110].Value = ((int)(is1099Employee));
            this.Adapter.InsertCommand.Parameters[111].Value = ((float)(PTOAcchours));
            this.Adapter.InsertCommand.Parameters[112].Value = ((float)(VacAccHours));
            this.Adapter.InsertCommand.Parameters[113].Value = ((int)(printPTOStub));
            this.Adapter.InsertCommand.Parameters[114].Value = ((float)(PTOAccRate));
            this.Adapter.InsertCommand.Parameters[115].Value = ((float)(VacAccRate));
            this.Adapter.InsertCommand.Parameters[116].Value = ((double)(PTOCapHours));
            this.Adapter.InsertCommand.Parameters[117].Value = ((double)(VacCapHours));
            this.Adapter.InsertCommand.Parameters[118].Value = ((int)(isPayrollSetup));
            if ((Memo == null)) {
                this.Adapter.InsertCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[119].Value = ((string)(Memo));
            }
            this.Adapter.InsertCommand.Parameters[120].Value = ((System.Guid)(EmployeeId));
            this.Adapter.InsertCommand.Parameters[121].Value = ((int)(CompanyId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid Id, 
                    System.DateTime DateEndPeriod, 
                    System.DateTime DateStartPeriod, 
                    System.DateTime DateSubmitted, 
                    string LName, 
                    string FName, 
                    string MInit, 
                    string SSN, 
                    int F99, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string ZipCode, 
                    string State, 
                    string Phone, 
                    float F100, 
                    float F101, 
                    float F102, 
                    System.DateTime F103, 
                    System.DateTime F104, 
                    System.DateTime F105, 
                    float S100, 
                    float S101, 
                    float S102, 
                    float S103, 
                    float S104, 
                    float S105, 
                    float S106, 
                    float S107, 
                    float S108, 
                    float S109, 
                    float S110, 
                    float S111, 
                    float S112, 
                    float S113, 
                    float S114, 
                    float S115, 
                    double S116, 
                    double S117, 
                    float S118, 
                    float S119, 
                    float S120, 
                    float S121, 
                    float S122, 
                    string F106, 
                    int F107, 
                    string F108, 
                    string F109, 
                    string F110, 
                    string F111, 
                    int F112, 
                    int F113, 
                    int F114, 
                    int F115, 
                    int F116, 
                    int F117, 
                    int F118, 
                    int F119, 
                    double F120, 
                    float F121, 
                    float F122, 
                    string S1231, 
                    float S1241, 
                    string S1232, 
                    float S1242, 
                    string S1233, 
                    float S1243, 
                    string S1234, 
                    float S1244, 
                    string S1235, 
                    float S1245, 
                    string S1251, 
                    float S1261, 
                    string S1252, 
                    float S1262, 
                    string S1253, 
                    float S1263, 
                    string S1254, 
                    float S1264, 
                    string S1255, 
                    float S1265, 
                    string S127, 
                    double F1231, 
                    double F1232, 
                    double F1233, 
                    double F1234, 
                    double F1235, 
                    int F124, 
                    int F125, 
                    int IsW2StatutoryEmployee, 
                    int IsW2RetirementPlan, 
                    int DoesReceiveAdvanceEIC, 
                    float EmployerSocialSecurity, 
                    float EmployerMedicare, 
                    float AdvanceEIC, 
                    System.DateTime DateLastEdit, 
                    int Checked, 
                    string S1236, 
                    float S1246, 
                    string S1237, 
                    float S1247, 
                    float F1236, 
                    float F1237, 
                    string HourlyPay1, 
                    string HourlyPay2, 
                    string HourlyPay3, 
                    string HourlyPay4, 
                    float SickRate, 
                    float VacationRate, 
                    int IsPaid, 
                    int is1099Employee, 
                    float PTOAcchours, 
                    float VacAccHours, 
                    int printPTOStub, 
                    float PTOAccRate, 
                    float VacAccRate, 
                    double PTOCapHours, 
                    double VacCapHours, 
                    int isPayrollSetup, 
                    string Memo, 
                    System.Guid EmployeeId, 
                    int CompanyId, 
                    System.Guid Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DateEndPeriod));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DateStartPeriod));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DateSubmitted));
            if ((LName == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(LName));
            }
            if ((FName == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FName));
            }
            if ((MInit == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MInit));
            }
            if ((SSN == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SSN));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(F99));
            if ((Address1 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Address1));
            }
            if ((Address2 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Address2));
            }
            if ((City == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(City));
            }
            if ((ZipCode == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ZipCode));
            }
            if ((State == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(State));
            }
            if ((Phone == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Phone));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((float)(F100));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(F101));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((float)(F102));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(F103));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(F104));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(F105));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((float)(S100));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((float)(S101));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((float)(S102));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((float)(S103));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((float)(S104));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((float)(S105));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((float)(S106));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((float)(S107));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((float)(S108));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((float)(S109));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((float)(S110));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((float)(S111));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((float)(S112));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((float)(S113));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((float)(S114));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((float)(S115));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(S116));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(S117));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((float)(S118));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((float)(S119));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((float)(S120));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((float)(S121));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((float)(S122));
            if ((F106 == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(F106));
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(F107));
            if ((F108 == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(F108));
            }
            if ((F109 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(F109));
            }
            if ((F110 == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(F110));
            }
            if ((F111 == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(F111));
            }
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(F112));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(F113));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(F114));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(F115));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(F116));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((int)(F117));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(F118));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(F119));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(F120));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((float)(F121));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((float)(F122));
            if ((S1231 == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(S1231));
            }
            this.Adapter.UpdateCommand.Parameters[62].Value = ((float)(S1241));
            if ((S1232 == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(S1232));
            }
            this.Adapter.UpdateCommand.Parameters[64].Value = ((float)(S1242));
            if ((S1233 == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(S1233));
            }
            this.Adapter.UpdateCommand.Parameters[66].Value = ((float)(S1243));
            if ((S1234 == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(S1234));
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((float)(S1244));
            if ((S1235 == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(S1235));
            }
            this.Adapter.UpdateCommand.Parameters[70].Value = ((float)(S1245));
            if ((S1251 == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(S1251));
            }
            this.Adapter.UpdateCommand.Parameters[72].Value = ((float)(S1261));
            if ((S1252 == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(S1252));
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((float)(S1262));
            if ((S1253 == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(S1253));
            }
            this.Adapter.UpdateCommand.Parameters[76].Value = ((float)(S1263));
            if ((S1254 == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(S1254));
            }
            this.Adapter.UpdateCommand.Parameters[78].Value = ((float)(S1264));
            if ((S1255 == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(S1255));
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((float)(S1265));
            if ((S127 == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(S127));
            }
            this.Adapter.UpdateCommand.Parameters[82].Value = ((double)(F1231));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((double)(F1232));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((double)(F1233));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((double)(F1234));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((double)(F1235));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(F124));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(F125));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(IsW2StatutoryEmployee));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(IsW2RetirementPlan));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(DoesReceiveAdvanceEIC));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((float)(EmployerSocialSecurity));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((float)(EmployerMedicare));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((float)(AdvanceEIC));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((System.DateTime)(DateLastEdit));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(Checked));
            if ((S1236 == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(S1236));
            }
            this.Adapter.UpdateCommand.Parameters[98].Value = ((float)(S1246));
            if ((S1237 == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(S1237));
            }
            this.Adapter.UpdateCommand.Parameters[100].Value = ((float)(S1247));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((float)(F1236));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((float)(F1237));
            if ((HourlyPay1 == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(HourlyPay1));
            }
            if ((HourlyPay2 == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(HourlyPay2));
            }
            if ((HourlyPay3 == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(HourlyPay3));
            }
            if ((HourlyPay4 == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(HourlyPay4));
            }
            this.Adapter.UpdateCommand.Parameters[107].Value = ((float)(SickRate));
            this.Adapter.UpdateCommand.Parameters[108].Value = ((float)(VacationRate));
            this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(IsPaid));
            this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(is1099Employee));
            this.Adapter.UpdateCommand.Parameters[111].Value = ((float)(PTOAcchours));
            this.Adapter.UpdateCommand.Parameters[112].Value = ((float)(VacAccHours));
            this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(printPTOStub));
            this.Adapter.UpdateCommand.Parameters[114].Value = ((float)(PTOAccRate));
            this.Adapter.UpdateCommand.Parameters[115].Value = ((float)(VacAccRate));
            this.Adapter.UpdateCommand.Parameters[116].Value = ((double)(PTOCapHours));
            this.Adapter.UpdateCommand.Parameters[117].Value = ((double)(VacCapHours));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(isPayrollSetup));
            if ((Memo == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Memo));
            }
            this.Adapter.UpdateCommand.Parameters[120].Value = ((System.Guid)(EmployeeId));
            this.Adapter.UpdateCommand.Parameters[121].Value = ((int)(CompanyId));
            this.Adapter.UpdateCommand.Parameters[122].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime DateEndPeriod, 
                    System.DateTime DateStartPeriod, 
                    System.DateTime DateSubmitted, 
                    string LName, 
                    string FName, 
                    string MInit, 
                    string SSN, 
                    int F99, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string ZipCode, 
                    string State, 
                    string Phone, 
                    float F100, 
                    float F101, 
                    float F102, 
                    System.DateTime F103, 
                    System.DateTime F104, 
                    System.DateTime F105, 
                    float S100, 
                    float S101, 
                    float S102, 
                    float S103, 
                    float S104, 
                    float S105, 
                    float S106, 
                    float S107, 
                    float S108, 
                    float S109, 
                    float S110, 
                    float S111, 
                    float S112, 
                    float S113, 
                    float S114, 
                    float S115, 
                    double S116, 
                    double S117, 
                    float S118, 
                    float S119, 
                    float S120, 
                    float S121, 
                    float S122, 
                    string F106, 
                    int F107, 
                    string F108, 
                    string F109, 
                    string F110, 
                    string F111, 
                    int F112, 
                    int F113, 
                    int F114, 
                    int F115, 
                    int F116, 
                    int F117, 
                    int F118, 
                    int F119, 
                    double F120, 
                    float F121, 
                    float F122, 
                    string S1231, 
                    float S1241, 
                    string S1232, 
                    float S1242, 
                    string S1233, 
                    float S1243, 
                    string S1234, 
                    float S1244, 
                    string S1235, 
                    float S1245, 
                    string S1251, 
                    float S1261, 
                    string S1252, 
                    float S1262, 
                    string S1253, 
                    float S1263, 
                    string S1254, 
                    float S1264, 
                    string S1255, 
                    float S1265, 
                    string S127, 
                    double F1231, 
                    double F1232, 
                    double F1233, 
                    double F1234, 
                    double F1235, 
                    int F124, 
                    int F125, 
                    int IsW2StatutoryEmployee, 
                    int IsW2RetirementPlan, 
                    int DoesReceiveAdvanceEIC, 
                    float EmployerSocialSecurity, 
                    float EmployerMedicare, 
                    float AdvanceEIC, 
                    System.DateTime DateLastEdit, 
                    int Checked, 
                    string S1236, 
                    float S1246, 
                    string S1237, 
                    float S1247, 
                    float F1236, 
                    float F1237, 
                    string HourlyPay1, 
                    string HourlyPay2, 
                    string HourlyPay3, 
                    string HourlyPay4, 
                    float SickRate, 
                    float VacationRate, 
                    int IsPaid, 
                    int is1099Employee, 
                    float PTOAcchours, 
                    float VacAccHours, 
                    int printPTOStub, 
                    float PTOAccRate, 
                    float VacAccRate, 
                    double PTOCapHours, 
                    double VacCapHours, 
                    int isPayrollSetup, 
                    string Memo, 
                    System.Guid EmployeeId, 
                    int CompanyId, 
                    System.Guid Original_Id) {
            return this.Update(Original_Id, DateEndPeriod, DateStartPeriod, DateSubmitted, LName, FName, MInit, SSN, F99, Address1, Address2, City, ZipCode, State, Phone, F100, F101, F102, F103, F104, F105, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, F106, F107, F108, F109, F110, F111, F112, F113, F114, F115, F116, F117, F118, F119, F120, F121, F122, S1231, S1241, S1232, S1242, S1233, S1243, S1234, S1244, S1235, S1245, S1251, S1261, S1252, S1262, S1253, S1263, S1254, S1264, S1255, S1265, S127, F1231, F1232, F1233, F1234, F1235, F124, F125, IsW2StatutoryEmployee, IsW2RetirementPlan, DoesReceiveAdvanceEIC, EmployerSocialSecurity, EmployerMedicare, AdvanceEIC, DateLastEdit, Checked, S1236, S1246, S1237, S1247, F1236, F1237, HourlyPay1, HourlyPay2, HourlyPay3, HourlyPay4, SickRate, VacationRate, IsPaid, is1099Employee, PTOAcchours, VacAccHours, printPTOStub, PTOAccRate, VacAccRate, PTOCapHours, VacCapHours, isPayrollSetup, Memo, EmployeeId, CompanyId, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class T201TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public T201TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "T201";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Ord", "Ord");
            tableMapping.ColumnMappings.Add("CodeMap", "CodeMap");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Enabled", "Enabled");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[T201] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[T201] ([Id], [Ord], [CodeMap], [Description], [Enabled], [Type" +
                "], [CompanyId]) VALUES (@Id, @Ord, @CodeMap, @Description, @Enabled, @Type, @Com" +
                "panyId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ord", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ord", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodeMap", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeMap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[T201] SET [Id] = @Id, [Ord] = @Ord, [CodeMap] = @CodeMap, [Descript" +
                "ion] = @Description, [Enabled] = @Enabled, [Type] = @Type, [CompanyId] = @Compan" +
                "yId WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ord", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ord", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodeMap", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeMap", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Enabled", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Enabled", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PayRollCon"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, Ord, CodeMap, Description, Enabled, Type, CompanyId FROM dbo.T201";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LivellPayRollDataSet.T201DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LivellPayRollDataSet.T201DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LivellPayRollDataSet.T201DataTable dataTable = new LivellPayRollDataSet.T201DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet.T201DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet dataSet) {
            return this.Adapter.Update(dataSet, "T201");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Guid Id, int Ord, string CodeMap, string Description, bool Enabled, int Type, int CompanyId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Ord));
            if ((CodeMap == null)) {
                throw new global::System.ArgumentNullException("CodeMap");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CodeMap));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Description));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Enabled));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Type));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(CompanyId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Guid Id, int Ord, string CodeMap, string Description, bool Enabled, int Type, int CompanyId, System.Guid Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Ord));
            if ((CodeMap == null)) {
                throw new global::System.ArgumentNullException("CodeMap");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CodeMap));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Description));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Enabled));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Type));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(CompanyId));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Ord, string CodeMap, string Description, bool Enabled, int Type, int CompanyId, System.Guid Original_Id) {
            return this.Update(Original_Id, Ord, CodeMap, Description, Enabled, Type, CompanyId, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TimeSheetTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TimeSheetTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TimeSheet";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("StartDate", "StartDate");
            tableMapping.ColumnMappings.Add("StopDate", "StopDate");
            tableMapping.ColumnMappings.Add("Note", "Note");
            tableMapping.ColumnMappings.Add("Paid", "Paid");
            tableMapping.ColumnMappings.Add("TimeSheetDate", "TimeSheetDate");
            tableMapping.ColumnMappings.Add("TimeSheetType", "TimeSheetType");
            tableMapping.ColumnMappings.Add("VacationTime", "VacationTime");
            tableMapping.ColumnMappings.Add("TotalWorkTime", "TotalWorkTime");
            tableMapping.ColumnMappings.Add("SickTime", "SickTime");
            tableMapping.ColumnMappings.Add("RegulaWorkTime", "RegulaWorkTime");
            tableMapping.ColumnMappings.Add("OverTimeWorkTime", "OverTimeWorkTime");
            tableMapping.ColumnMappings.Add("RegularPayrate", "RegularPayrate");
            tableMapping.ColumnMappings.Add("OvertimePayrate", "OvertimePayrate");
            tableMapping.ColumnMappings.Add("Locked", "Locked");
            tableMapping.ColumnMappings.Add("ExtraInt1", "ExtraInt1");
            tableMapping.ColumnMappings.Add("ExtraInt2", "ExtraInt2");
            tableMapping.ColumnMappings.Add("ExtraStr1", "ExtraStr1");
            tableMapping.ColumnMappings.Add("ExtraStr2", "ExtraStr2");
            tableMapping.ColumnMappings.Add("JobId", "JobId");
            tableMapping.ColumnMappings.Add("EmployeeId", "EmployeeId");
            tableMapping.ColumnMappings.Add("CompanyId", "CompanyId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TimeSheet] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TimeSheet] ([Id], [StartDate], [StopDate], [Note], [Paid], [TimeSheetDate], [TimeSheetType], [VacationTime], [TotalWorkTime], [SickTime], [RegulaWorkTime], [OverTimeWorkTime], [RegularPayrate], [OvertimePayrate], [Locked], [ExtraInt1], [ExtraInt2], [ExtraStr1], [ExtraStr2], [JobId], [EmployeeId], [CompanyId]) VALUES (@Id, @StartDate, @StopDate, @Note, @Paid, @TimeSheetDate, @TimeSheetType, @VacationTime, @TotalWorkTime, @SickTime, @RegulaWorkTime, @OverTimeWorkTime, @RegularPayrate, @OvertimePayrate, @Locked, @ExtraInt1, @ExtraInt2, @ExtraStr1, @ExtraStr2, @JobId, @EmployeeId, @CompanyId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Note", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Paid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Paid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeSheetDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeSheetDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeSheetType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeSheetType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacationTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacationTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalWorkTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalWorkTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SickTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SickTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegulaWorkTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegulaWorkTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverTimeWorkTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverTimeWorkTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegularPayrate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegularPayrate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OvertimePayrate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OvertimePayrate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Locked", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Locked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraInt1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraInt1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraInt2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraInt2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraStr1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraStr1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraStr2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraStr2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TimeSheet] SET [Id] = @Id, [StartDate] = @StartDate, [StopDate] = @StopDate, [Note] = @Note, [Paid] = @Paid, [TimeSheetDate] = @TimeSheetDate, [TimeSheetType] = @TimeSheetType, [VacationTime] = @VacationTime, [TotalWorkTime] = @TotalWorkTime, [SickTime] = @SickTime, [RegulaWorkTime] = @RegulaWorkTime, [OverTimeWorkTime] = @OverTimeWorkTime, [RegularPayrate] = @RegularPayrate, [OvertimePayrate] = @OvertimePayrate, [Locked] = @Locked, [ExtraInt1] = @ExtraInt1, [ExtraInt2] = @ExtraInt2, [ExtraStr1] = @ExtraStr1, [ExtraStr2] = @ExtraStr2, [JobId] = @JobId, [EmployeeId] = @EmployeeId, [CompanyId] = @CompanyId WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StopDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StopDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Note", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Paid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Paid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeSheetDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeSheetDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TimeSheetType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TimeSheetType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VacationTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VacationTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalWorkTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalWorkTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SickTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SickTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegulaWorkTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegulaWorkTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OverTimeWorkTime", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OverTimeWorkTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegularPayrate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegularPayrate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OvertimePayrate", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OvertimePayrate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Locked", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Locked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraInt1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraInt1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraInt2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraInt2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraStr1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraStr1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtraStr2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtraStr2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JobId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JobId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PayRollCon"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, StartDate, StopDate, Note, Paid, TimeSheetDate, TimeSheetType, VacationTime, TotalWorkTime, SickTime, RegulaWorkTime, OverTimeWorkTime, RegularPayrate, OvertimePayrate, Locked, ExtraInt1, ExtraInt2, ExtraStr1, ExtraStr2, JobId, EmployeeId, CompanyId FROM dbo.TimeSheet";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LivellPayRollDataSet.TimeSheetDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LivellPayRollDataSet.TimeSheetDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LivellPayRollDataSet.TimeSheetDataTable dataTable = new LivellPayRollDataSet.TimeSheetDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet.TimeSheetDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TimeSheet");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid Id, 
                    System.DateTime StartDate, 
                    System.DateTime StopDate, 
                    string Note, 
                    bool Paid, 
                    System.DateTime TimeSheetDate, 
                    int TimeSheetType, 
                    double VacationTime, 
                    double TotalWorkTime, 
                    double SickTime, 
                    double RegulaWorkTime, 
                    double OverTimeWorkTime, 
                    float RegularPayrate, 
                    float OvertimePayrate, 
                    bool Locked, 
                    bool ExtraInt1, 
                    bool ExtraInt2, 
                    string ExtraStr1, 
                    string ExtraStr2, 
                    int JobId, 
                    System.Guid EmployeeId, 
                    int CompanyId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(StartDate));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(StopDate));
            if ((Note == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Note));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Paid));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(TimeSheetDate));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(TimeSheetType));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(VacationTime));
            this.Adapter.InsertCommand.Parameters[8].Value = ((double)(TotalWorkTime));
            this.Adapter.InsertCommand.Parameters[9].Value = ((double)(SickTime));
            this.Adapter.InsertCommand.Parameters[10].Value = ((double)(RegulaWorkTime));
            this.Adapter.InsertCommand.Parameters[11].Value = ((double)(OverTimeWorkTime));
            this.Adapter.InsertCommand.Parameters[12].Value = ((float)(RegularPayrate));
            this.Adapter.InsertCommand.Parameters[13].Value = ((float)(OvertimePayrate));
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(Locked));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(ExtraInt1));
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(ExtraInt2));
            if ((ExtraStr1 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ExtraStr1));
            }
            if ((ExtraStr2 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ExtraStr2));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(JobId));
            this.Adapter.InsertCommand.Parameters[20].Value = ((System.Guid)(EmployeeId));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(CompanyId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid Id, 
                    System.DateTime StartDate, 
                    System.DateTime StopDate, 
                    string Note, 
                    bool Paid, 
                    System.DateTime TimeSheetDate, 
                    int TimeSheetType, 
                    double VacationTime, 
                    double TotalWorkTime, 
                    double SickTime, 
                    double RegulaWorkTime, 
                    double OverTimeWorkTime, 
                    float RegularPayrate, 
                    float OvertimePayrate, 
                    bool Locked, 
                    bool ExtraInt1, 
                    bool ExtraInt2, 
                    string ExtraStr1, 
                    string ExtraStr2, 
                    int JobId, 
                    System.Guid EmployeeId, 
                    int CompanyId, 
                    System.Guid Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(StartDate));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(StopDate));
            if ((Note == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Note));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Paid));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(TimeSheetDate));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(TimeSheetType));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(VacationTime));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(TotalWorkTime));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(SickTime));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(RegulaWorkTime));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(OverTimeWorkTime));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((float)(RegularPayrate));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((float)(OvertimePayrate));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(Locked));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(ExtraInt1));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(ExtraInt2));
            if ((ExtraStr1 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ExtraStr1));
            }
            if ((ExtraStr2 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ExtraStr2));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(JobId));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.Guid)(EmployeeId));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(CompanyId));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime StartDate, 
                    System.DateTime StopDate, 
                    string Note, 
                    bool Paid, 
                    System.DateTime TimeSheetDate, 
                    int TimeSheetType, 
                    double VacationTime, 
                    double TotalWorkTime, 
                    double SickTime, 
                    double RegulaWorkTime, 
                    double OverTimeWorkTime, 
                    float RegularPayrate, 
                    float OvertimePayrate, 
                    bool Locked, 
                    bool ExtraInt1, 
                    bool ExtraInt2, 
                    string ExtraStr1, 
                    string ExtraStr2, 
                    int JobId, 
                    System.Guid EmployeeId, 
                    int CompanyId, 
                    System.Guid Original_Id) {
            return this.Update(Original_Id, StartDate, StopDate, Note, Paid, TimeSheetDate, TimeSheetType, VacationTime, TotalWorkTime, SickTime, RegulaWorkTime, OverTimeWorkTime, RegularPayrate, OvertimePayrate, Locked, ExtraInt1, ExtraInt2, ExtraStr1, ExtraStr2, JobId, EmployeeId, CompanyId, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AccrualTimeJournalTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AccrualTimeJournalTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AccrualTimeJournal";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("SSN", "SSN");
            tableMapping.ColumnMappings.Add("EmployeeName", "EmployeeName");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("Hours", "Hours");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("Memo", "Memo");
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate");
            tableMapping.ColumnMappings.Add("EmployeeId", "EmployeeId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [AccrualTimeJournal] WHERE (([Id] = @Original_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [AccrualTimeJournal] ([Id], [SSN], [EmployeeName], [Type], [Hours], [" +
                "Date], [Memo], [CreateDate], [EmployeeId]) VALUES (@Id, @SSN, @EmployeeName, @Ty" +
                "pe, @Hours, @Date, @Memo, @CreateDate, @EmployeeId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [AccrualTimeJournal] SET [Id] = @Id, [SSN] = @SSN, [EmployeeName] = @Emplo" +
                "yeeName, [Type] = @Type, [Hours] = @Hours, [Date] = @Date, [Memo] = @Memo, [Crea" +
                "teDate] = @CreateDate, [EmployeeId] = @EmployeeId WHERE (([Id] = @Original_Id))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Hours", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Hours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["PayRollCon"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Id]\r\n      ,[SSN]\r\n      ,[EmployeeName]\r\n      ,[Type]\r\n      ,[Hours]\r\n" +
                "      ,[Date]\r\n      ,[Memo]\r\n      ,[CreateDate]\r\n      ,[EmployeeId]\r\n  FROM [" +
                "AccrualTimeJournal]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LivellPayRollDataSet.AccrualTimeJournalDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LivellPayRollDataSet.AccrualTimeJournalDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LivellPayRollDataSet.AccrualTimeJournalDataTable dataTable = new LivellPayRollDataSet.AccrualTimeJournalDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet.AccrualTimeJournalDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LivellPayRollDataSet dataSet) {
            return this.Adapter.Update(dataSet, "AccrualTimeJournal");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Guid Id, string SSN, string EmployeeName, int Type, float Hours, System.DateTime Date, string Memo, System.DateTime CreateDate, System.Guid EmployeeId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(Id));
            if ((SSN == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SSN));
            }
            if ((EmployeeName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(EmployeeName));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Type));
            this.Adapter.InsertCommand.Parameters[4].Value = ((float)(Hours));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Date));
            if ((Memo == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Memo));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(CreateDate));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.Guid)(EmployeeId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Guid Id, string SSN, string EmployeeName, int Type, float Hours, System.DateTime Date, string Memo, System.DateTime CreateDate, System.Guid EmployeeId, System.Guid Original_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(Id));
            if ((SSN == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SSN));
            }
            if ((EmployeeName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(EmployeeName));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Type));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(Hours));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Date));
            if ((Memo == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Memo));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(CreateDate));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.Guid)(EmployeeId));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.Guid)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SSN, string EmployeeName, int Type, float Hours, System.DateTime Date, string Memo, System.DateTime CreateDate, System.Guid EmployeeId, System.Guid Original_Id) {
            return this.Update(Original_Id, SSN, EmployeeName, Type, Hours, Date, Memo, CreateDate, EmployeeId, Original_Id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CompanyTableAdapter _companyTableAdapter;
        
        private EmployeeTableAdapter _employeeTableAdapter;
        
        private T100TableAdapter _t100TableAdapter;
        
        private T102TableAdapter _t102TableAdapter;
        
        private T105TableAdapter _t105TableAdapter;
        
        private T201TableAdapter _t201TableAdapter;
        
        private TimeSheetTableAdapter _timeSheetTableAdapter;
        
        private AccrualTimeJournalTableAdapter _accrualTimeJournalTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CompanyTableAdapter CompanyTableAdapter {
            get {
                return this._companyTableAdapter;
            }
            set {
                this._companyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EmployeeTableAdapter EmployeeTableAdapter {
            get {
                return this._employeeTableAdapter;
            }
            set {
                this._employeeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T100TableAdapter T100TableAdapter {
            get {
                return this._t100TableAdapter;
            }
            set {
                this._t100TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T102TableAdapter T102TableAdapter {
            get {
                return this._t102TableAdapter;
            }
            set {
                this._t102TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T105TableAdapter T105TableAdapter {
            get {
                return this._t105TableAdapter;
            }
            set {
                this._t105TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public T201TableAdapter T201TableAdapter {
            get {
                return this._t201TableAdapter;
            }
            set {
                this._t201TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TimeSheetTableAdapter TimeSheetTableAdapter {
            get {
                return this._timeSheetTableAdapter;
            }
            set {
                this._timeSheetTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AccrualTimeJournalTableAdapter AccrualTimeJournalTableAdapter {
            get {
                return this._accrualTimeJournalTableAdapter;
            }
            set {
                this._accrualTimeJournalTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._companyTableAdapter != null) 
                            && (this._companyTableAdapter.Connection != null))) {
                    return this._companyTableAdapter.Connection;
                }
                if (((this._employeeTableAdapter != null) 
                            && (this._employeeTableAdapter.Connection != null))) {
                    return this._employeeTableAdapter.Connection;
                }
                if (((this._t100TableAdapter != null) 
                            && (this._t100TableAdapter.Connection != null))) {
                    return this._t100TableAdapter.Connection;
                }
                if (((this._t102TableAdapter != null) 
                            && (this._t102TableAdapter.Connection != null))) {
                    return this._t102TableAdapter.Connection;
                }
                if (((this._t105TableAdapter != null) 
                            && (this._t105TableAdapter.Connection != null))) {
                    return this._t105TableAdapter.Connection;
                }
                if (((this._t201TableAdapter != null) 
                            && (this._t201TableAdapter.Connection != null))) {
                    return this._t201TableAdapter.Connection;
                }
                if (((this._timeSheetTableAdapter != null) 
                            && (this._timeSheetTableAdapter.Connection != null))) {
                    return this._timeSheetTableAdapter.Connection;
                }
                if (((this._accrualTimeJournalTableAdapter != null) 
                            && (this._accrualTimeJournalTableAdapter.Connection != null))) {
                    return this._accrualTimeJournalTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._companyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._employeeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t100TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t102TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t105TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._t201TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._timeSheetTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._accrualTimeJournalTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(LivellPayRollDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._companyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Company.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._companyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._employeeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Employee.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._employeeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t100TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T100.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t100TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t102TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T102.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t102TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t105TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T105.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t105TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._t201TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.T201.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._t201TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._timeSheetTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TimeSheet.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._timeSheetTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._accrualTimeJournalTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AccrualTimeJournal.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._accrualTimeJournalTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(LivellPayRollDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._companyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Company.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._companyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._employeeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Employee.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._employeeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t100TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T100.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t100TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t102TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T102.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t102TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t105TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T105.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t105TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._t201TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.T201.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._t201TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._timeSheetTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TimeSheet.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._timeSheetTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._accrualTimeJournalTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AccrualTimeJournal.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._accrualTimeJournalTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(LivellPayRollDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._accrualTimeJournalTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AccrualTimeJournal.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._accrualTimeJournalTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._timeSheetTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TimeSheet.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._timeSheetTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t201TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T201.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t201TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t105TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T105.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t105TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t102TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T102.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t102TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._t100TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.T100.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._t100TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._employeeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Employee.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._employeeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._companyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Company.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._companyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(LivellPayRollDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._companyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._companyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._employeeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._employeeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._t100TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t100TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._t102TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t102TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._t105TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t105TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._t201TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._t201TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._timeSheetTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._timeSheetTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._accrualTimeJournalTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._accrualTimeJournalTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._companyTableAdapter != null)) {
                    revertConnections.Add(this._companyTableAdapter, this._companyTableAdapter.Connection);
                    this._companyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._companyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._companyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._companyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._companyTableAdapter.Adapter);
                    }
                }
                if ((this._employeeTableAdapter != null)) {
                    revertConnections.Add(this._employeeTableAdapter, this._employeeTableAdapter.Connection);
                    this._employeeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._employeeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._employeeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._employeeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._employeeTableAdapter.Adapter);
                    }
                }
                if ((this._t100TableAdapter != null)) {
                    revertConnections.Add(this._t100TableAdapter, this._t100TableAdapter.Connection);
                    this._t100TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t100TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t100TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t100TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t100TableAdapter.Adapter);
                    }
                }
                if ((this._t102TableAdapter != null)) {
                    revertConnections.Add(this._t102TableAdapter, this._t102TableAdapter.Connection);
                    this._t102TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t102TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t102TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t102TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t102TableAdapter.Adapter);
                    }
                }
                if ((this._t105TableAdapter != null)) {
                    revertConnections.Add(this._t105TableAdapter, this._t105TableAdapter.Connection);
                    this._t105TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t105TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t105TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t105TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t105TableAdapter.Adapter);
                    }
                }
                if ((this._t201TableAdapter != null)) {
                    revertConnections.Add(this._t201TableAdapter, this._t201TableAdapter.Connection);
                    this._t201TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._t201TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._t201TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._t201TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._t201TableAdapter.Adapter);
                    }
                }
                if ((this._timeSheetTableAdapter != null)) {
                    revertConnections.Add(this._timeSheetTableAdapter, this._timeSheetTableAdapter.Connection);
                    this._timeSheetTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._timeSheetTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._timeSheetTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._timeSheetTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._timeSheetTableAdapter.Adapter);
                    }
                }
                if ((this._accrualTimeJournalTableAdapter != null)) {
                    revertConnections.Add(this._accrualTimeJournalTableAdapter, this._accrualTimeJournalTableAdapter.Connection);
                    this._accrualTimeJournalTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._accrualTimeJournalTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._accrualTimeJournalTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._accrualTimeJournalTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._accrualTimeJournalTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._companyTableAdapter != null)) {
                    this._companyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._companyTableAdapter]));
                    this._companyTableAdapter.Transaction = null;
                }
                if ((this._employeeTableAdapter != null)) {
                    this._employeeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._employeeTableAdapter]));
                    this._employeeTableAdapter.Transaction = null;
                }
                if ((this._t100TableAdapter != null)) {
                    this._t100TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t100TableAdapter]));
                    this._t100TableAdapter.Transaction = null;
                }
                if ((this._t102TableAdapter != null)) {
                    this._t102TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t102TableAdapter]));
                    this._t102TableAdapter.Transaction = null;
                }
                if ((this._t105TableAdapter != null)) {
                    this._t105TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t105TableAdapter]));
                    this._t105TableAdapter.Transaction = null;
                }
                if ((this._t201TableAdapter != null)) {
                    this._t201TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._t201TableAdapter]));
                    this._t201TableAdapter.Transaction = null;
                }
                if ((this._timeSheetTableAdapter != null)) {
                    this._timeSheetTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._timeSheetTableAdapter]));
                    this._timeSheetTableAdapter.Transaction = null;
                }
                if ((this._accrualTimeJournalTableAdapter != null)) {
                    this._accrualTimeJournalTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._accrualTimeJournalTableAdapter]));
                    this._accrualTimeJournalTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591