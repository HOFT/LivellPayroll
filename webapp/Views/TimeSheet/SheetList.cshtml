@model System.Data.DataTable
@using LivellPayRoll.App_Helpers
<!-- MAIN CONTENT -->
<div id="content">
    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-inbox"></i>
                TimeSheets
                <span>
                    &gt;
                    TimeSheet List
                </span>
            </h1>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
            <ul id="sparks" class="">
                <li class="sparks-info">
                    <h5> My Income <span class="txt-color-blue">$47,171</span></h5>
                    <div class="sparkline txt-color-blue hidden-mobile hidden-md hidden-sm">
                        1300, 1877, 2500, 2577, 2000, 2100, 3000, 2700, 3631, 2471, 2700, 3631, 2471
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Site Traffic <span class="txt-color-purple"><i class="fa fa-arrow-circle-up" data-rel="bootstrap-tooltip" title="Increased"></i>&nbsp;45%</span></h5>
                    <div class="sparkline txt-color-purple hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Site Orders <span class="txt-color-greenDark"><i class="fa fa-shopping-cart"></i>&nbsp;2447</span></h5>
                    <div class="sparkline txt-color-greenDark hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
            </ul>
        </div>
    </div>

    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- row -->
        <div class="row">

            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-inbox"></i> </span>
                        <h2>TimeSheet List</h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">
                            <table id="datatable_tabletools" class="table table-striped table-bordered table-hover" width="100%">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th class="x-y-center" data-hide="phone,tablet">Ord</th>
                                        <th class="x-y-center" data-hide="phone,tablet">Project</th>
                                        <th class="x-y-center">Start Time</th>
                                        <th class="x-y-center">Stop Time</th>
                                        <th class="x-y-center">Total Time</th>
                                        <th class="x-y-center">Type</th>
                                        <th class="x-y-center">Paid</th>
                                        <th class="x-y-center">Status</th>
                                        <th class="x-y-center">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (System.Data.DataRow dr in Model.Rows)
                                    {
                                        <tr data-sheetId="@dr["Id"]">
                                            <td class="details-control"></td>
                                            <td class="x-y-center">@(Model.Rows.IndexOf(dr) + 1)</td>
                                            <td>@dr["JobName"] <br><small class='text-muted'><i>@dr["EmployeeName"] [@dr["EmployeeEmail"]]</i></small></td>
                                            <td class="x-y-center"><strong>@dr["StartDate"]</strong></td>
                                            <td class="x-y-center"><strong>@dr["StopDate"]</strong> </td>
                                            <td class="x-y-center">@dr["TotalWorkTime"]</td>
                                            <td class="x-y-center">@dr["TimeSheetType"]</td>
                                            <td class="x-y-center"><span class='center-block padding-5 label @dr["PaidLabel"]'>@dr["Paid"]</span></td> 
                                            <td class="x-y-center TimeStatus"><span class='center-block padding-5 label @dr["StatusLabel"]'>@dr["Status"]</span></td> 

                                            <td class="x-y-center">
                                                <div class="btn-group">
                                                    <button title="Check" class="btn btn-default btn-xs time-action dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-check"></span></button>
                                                    <ul class="dropdown-menu">
                                                        <li>
                                                            <a href="javascript:void(0);" class="btnCheck" data-btnId="@dr["Id"]"><i class="fa fa-check"></i>  Passing</a>
                                                        </li>
                                                        <li class="divider"></li>
                                                        <li>
                                                            <a href="javascript:void(0);" class="btnLock" data-btnId="@dr["Id"]"><i class="fa fa-lock"></i>  Locked</a>
                                                        </li>
                                                    </ul>
                                                </div>
                                                <a title="Edit" class="btn btn-primary btn-xs btn-edit time-action" id="@dr["Id"]" href="javascript:void(0);"><span class="glyphicon glyphicon-edit"></span></a>
                                                <a title="Delete" class="btn btn-danger btn-xs btn-delete time-action" id="@dr["Id"]" href="javascript:void(0);"><span class="glyphicon glyphicon-trash"></span></a>
                                            </td>
                                        </tr>

                                    }
                                </tbody>
                            </table>

                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- WIDGET END -->

        </div>
        <!-- end row -->

    </section>

    <!-- ui-dialog -->
    @{Html.RenderPartial("_TimeSheetForm"); }
    <!-- ends ui-dialog -->
    <!-- ui-dialog -->
    @{Html.RenderPartial("_TimeSheetEdit"); }
    <!-- ends ui-dialog -->
    <!-- ui-dialog -->
    @{Html.RenderPartial("_JobInfo"); }
    <!-- ends ui-dialog -->
</div>

<!-- END MAIN CONTENT -->
@section pagespecific {

    <script src="/scripts/plugin/clockpicker/clockpicker.min.js"></script>
    <script src="/scripts/plugin/bootstrap-timepicker/bootstrap-timepicker.min.js"></script>

    <script type="text/javascript">
        function Get24time(DateTime){
            var DateTimeSrt = DateTime.substr(DateTime.length-2,2);
            var newTime;
            if(DateTimeSrt=="AM"){
                newTime = DateTime.substr(0,DateTime.length-2);
            }else if(DateTimeSrt=="PM"){
                var h = DateTime.substr(0,DateTime.indexOf(":"));
                var over = DateTime.substr(DateTime.indexOf(":"),DateTime.length-DateTime.indexOf(":")-2);
                h = parseInt(h)+12;
                newTime = h + over;
            }
            return newTime;
        }

        function GetTotalTime(StartDate, StartDateTime, StopDate, StopDateTime) {
            var NewStartDateTime = Get24time(StartDateTime);
            var NewStopDateTime = Get24time(StopDateTime);
            var RoundTo=@ViewBag.RoundTo;
            var fromDate = new Date(StartDate + " " + NewStartDateTime);
            var toDate = new Date(StopDate + " " + NewStopDateTime);
            var min = (toDate.getTime() - fromDate.getTime()) / (60 * 1000);
            return Math.floor(min / RoundTo) * RoundTo;

        }

        $(document).ready(function () {

            function formatSheet(d) {
                // `d` is the original data object for the row
                return '<table cellpadding="5" cellspacing="0" border="0" class="table table-hover table-condensed">' +
                    '<tr>' +
                    '<td width="12%">Project:</td>' +
                    '<td>' + d.JobName + '<br><small class="text-muted"><i>' + d.EmployeeName + " ["+d.EmployeeEmail+"] " + '</i></small></td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>TimeSheet Date:</td>' +
                    '<td><strong>' + d.TimeSheetDate + '</strong></td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Regular Amount:</td>' +
                    '<td>'+ d.RegularAmount +'</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Overtime Amount:</td>' +
                    '<td>'+ d.OvertimeAmount +'</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Doubletime Amount:</td>' +
                    '<td>'+ d.DoubletimeAmount +'</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Note:</td>' +
                    '<td><p class="text-success">' + d.Note + '</p></td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Time Type:</td>' +
                    '<td>' + '<canvas id="pieChart" height="50"></canvas>' + '</td>' +
                    '</tr>' +
                    '</table>';
            }

            var pieOptions = {
                //Boolean - Whether we should show a stroke on each segment
                segmentShowStroke: true,
                //String - The colour of each segment stroke
                segmentStrokeColor: "#fff",
                //Number - The width of each segment stroke
                segmentStrokeWidth: 2,
                //Number - Amount of animation steps
                animationSteps: 100,
                //String - types of animation
                animationEasing: "easeOutBounce",
                //Boolean - Whether we animate the rotation of the Doughnut
                animateRotate: true,
                //Boolean - Whether we animate scaling the Doughnut from the centre
                animateScale: false,
                //Boolean - Re-draw chart on page resize
                responsive: true,
                //String - A legend template
                legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
            };

            $.getJSON('@Url.Action("GetEmployee", "TimeSheet")', function (data) {
                $('#EmployeeId').empty();
                $('#EmployeeId').append($('<option></option>').val('').text('Please Select Employee.'));
                $('#JobId').append($('<option></option>').val('').text('Please Select Job.'));
                $.each(data, function(i, item) {
                    $('#EmployeeId').append($('<option></option>').val(item.Value).text(item.Text));
                });
            });
            $('#EmployeeId').change(function () {
                var selectedEmployeeId = $.trim($('#EmployeeId option:selected').val());
                if (selectedEmployeeId.length == 0) {
                    $('#JobId').empty();
                    $('#JobId').append($('<option></option>').val('').text('Please Select Job.'));
                } else {
                    $.getJSON('@Url.Action("GetJob", "TimeSheet")', { id: selectedEmployeeId }, function (data) {
                        $('#JobId').empty();
                        $('#JobId').append($('<option></option>').val('').text('Please Select Job.'));
                        $('.Warning-Item').html("");
                        if(data.length==0){
                            var html='<p class="alert alert-danger fade in"><button class="close" data-dismiss="alert">×</button>'+
                            '<i class="fa-fw fa fa-warning"></i><strong>Warning</strong> The employee did not assign work.Please <a href="/customer/customerjobs"><strong>click</strong></a> to assign!</p>';
                            $('.Warning-Item').html(html);
                        }
                        $.each(data, function (i, item) {
                            $('#JobId').append($('<option></option>').val(item.Value).text(item.Text));
                        });
                    });
                }

            });



        /* BASIC ;*/
        var responsiveHelper_dt_basic = undefined;
        var responsiveHelper_datatable_fixed_column = undefined;
        var responsiveHelper_datatable_col_reorder = undefined;
        var responsiveHelper_datatable_tabletools = undefined;
        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

        /* TABLETOOLS */
        $('#datatable_tabletools').dataTable({

            // Tabletools options:
            "aoColumnDefs": [ { "bSortable": false, "aTargets": [ 0 ] }],
            "sDom": "<'dt-toolbar'<'col-xs-1 col-sm-1'<'Button_Add'>><'col-xs-6 col-sm-5'T><'col-sm-6 col-xs-6 hidden-xs'f>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",

            "oTableTools": {
                "aButtons": [
                "copy",
                "csv",
                "xls",
                   {
                       "sExtends": "pdf",
                       "sTitle": "SmartAdmin_PDF",
                       "sPdfMessage": "SmartAdmin PDF Export",
                       "sPdfSize": "letter"
                   },
                   {
                       "sExtends": "print",
                       "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                   }
                ],
                "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_tabletools) {
                    responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_tabletools.respond();
            }
        });

        $("div.Button_Add").html('<a class="btn btn-primary" data-toggle="modal" data-target="#TimeSheetModal"><i class="fa fa-plus"></i> Add</a> ');

        if("@Request.Params["code"]"=="1"){
            SuccessBox("@Request.Params["Message"]");
        };

        // START AND FINISH DATE
        $('#StartDate').datepicker({
            dateFormat: 'yy-mm-dd',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onSelect: function (selectedDate) {
                $('#StopDate').datepicker('option', 'minDate', selectedDate);
            }
        });

        $('#StopDate').datepicker({
            dateFormat: 'yy-mm-dd',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onSelect: function (selectedDate) {
                $('#StartDate').datepicker('option', 'maxDate', selectedDate);
            }
        });

        $('#E-StartDate').datepicker({
            dateFormat: 'yy-mm-dd',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onSelect: function (selectedDate) {
                $('#E-StopDate').datepicker('option', 'minDate', selectedDate);
            }
        });

        $('#E-StopDate').datepicker({
            dateFormat: 'yy-mm-dd',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onSelect: function (selectedDate) {
                $('#E-StartDate').datepicker('option', 'maxDate', selectedDate);
            }
        });

        $('.timepicker').timepicker();
        /* CLOCKPICKER*/
        $('.clockpicker').clockpicker({
            placement: 'top',
            donetext: 'Done'
        });
            /* END TABLETOOLS */
        $(".btnCheck").click(function () {
            var Id = $(this).attr("data-btnId");
            var td = $(this).parents("tr").find(".TimeStatus");
            $.post("/TimeSheet/Check", {Id : Id , CheckType:"2"}, function (data) {
                if(data.status=="success"){
                    td.empty().prepend(data.htmlStr);
                    SuccessBox("The status has been changed to Passing");
                };
            });
        });
        $(".btnLock").click(function () {
            var Id = $(this).attr("data-btnId");
            var td = $(this).parents("tr").find(".TimeStatus");
            $.post("/TimeSheet/Check", {Id : Id , CheckType:"3"}, function (data) {
                if(data.status=="success"){
                    td.empty().prepend(data.htmlStr);
                    SuccessBox("The status has been changed to Locked");
                };
            });
        });

        $(".btn-delete").click(function () {
            var Id = $(this).eq(0).attr('id')
            AjaxDelete(
                "Customer and jobs will be deleted,Do you want to continue this record?",
                Id,
                "/Timesheet/TimeDelete",
                "The Timesheet been successfully Deleted",
                "OpTable"
                );
        });

        $(".btn-edit").click(function () {
            $('#TimeSheet-Edit')[0].reset();
            $('#TimeEditModal').modal()
            var Id = $(this).eq(0).attr('id')
            $.getJSON('@Url.Action("TimeDesc", "TimeSheet")',{ Id:Id }, function (data) {
                var startdate=new Date(data.StartDate*1000);
                $("#E-StartDate").val(startdate.Format("yyyy-MM-dd"));
                //$("#E-StartDateTime").val(startdate.Format("hh:mm"));
                $("#E-StartDateTime").val(showTheTime(startdate));
                var stopdate=new Date(data.StopDate*1000);
                $("#E-StopDate").val(stopdate.Format("yyyy-MM-dd"));
                $("#E-StopDateTime").val(showTheTime(stopdate));
                $("#E-TimeSheetType").val(data.TimeSheetType);
                $("#E-TotalWorkTime").val(data.TotalWorkTime);
                $("#E-Note").val(data.Note);
                $("#E-Paid").attr("checked", (data.Paid) ? true : false);
                $('#timeid').val(Id);
                $('#leg-text').html('    '+data.Job+' ['+data.Employee+']');
            });
        });

            $('#btn-timesheet-edit').click(function(){
                var Id = $("#timeid").val();
                var StartDate =  $("#E-StartDate").val();
                var StartDateTime = $("#E-StartDateTime").val();
                var StopDate = $("#E-StopDate").val();
                var StopDateTime = $("#E-StopDateTime").val();
                var TimeSheetType = $("#E-TimeSheetType").val();
                var Paid = $("#E-Paid").prop("checked");
                var Note = $("#E-Note").val();
                var fromDate = new Date(StartDate + " " + Get24time(StartDateTime)).Format("yyyy-MM-dd hh:mm:ss");
                var toDate = new Date(StopDate + " " + Get24time(StopDateTime)).Format("yyyy-MM-dd hh:mm:ss");
                var par = {
                    "Id": Id,
                    "StartDate": fromDate,
                    "StopDate": toDate,
                    "TimeSheetType":TimeSheetType,
                    "Paid": Paid,
                    "Note": Note
                }
                var bootstrapValidator = $('#TimeSheet-Edit').data('bootstrapValidator');
                bootstrapValidator.validate();
                if (bootstrapValidator.isValid()) {
                    $.post("/TimeSheet/EditTime", par, function (data) {
                        if (data.status == "success") {
                            //SuccessBox("Time been successfully edited!");
                            location.reload();
                        } else {
                            ErrorBox(data.message);
                        }
                    })
                }

            })

        /* Get Total Time */

        $(".date-item").change(function () {
            var StartDate = $("#TimeSheetModal input[name=StartDate]").val();
            var StartDateTime = $("#TimeSheetModal input[name=StartDateTime]").val();
            var StopDate = $("#TimeSheetModal input[name=StopDate]").val();
            var StopDateTime = $("#TimeSheetModal input[name=StopDateTime]").val();
            var sum = GetTotalTime(StartDate, StartDateTime, StopDate, StopDateTime);
            $("#TimeSheetModal input[name=TotalWorkTime]").val(sum);
        });

        $(".e-date-item").change(function () {
            var StartDate = $("#TimeEditModal input[name=StartDate]").val();
            var StartDateTime = $("#TimeEditModal input[name=StartDateTime]").val();
            var StopDate = $("#TimeEditModal input[name=StopDate]").val();
            var StopDateTime = $("#TimeEditModal input[name=StopDateTime]").val();
            var sum = GetTotalTime(StartDate, StartDateTime, StopDate, StopDateTime);
            $("#TimeEditModal input[name=TotalWorkTime]").val(sum);
        });
        /* Btn-Add */
        $("#btn-timesheet-add").click(function () {
            var bootstrapValidator = $('#TimeSheet-Add').data('bootstrapValidator');
            bootstrapValidator.validate();
            if (bootstrapValidator.isValid()) {
                var EmployeeId = $("#EmployeeId").val();
                var JobId = $("#JobId").val();
                var StartDate = $("#TimeSheetModal input[name=StartDate]").val();
                var StartDateTime = $("#TimeSheetModal input[name=StartDateTime]").val();
                var StopDate = $("#TimeSheetModal input[name=StopDate]").val();
                var StopDateTime = $("#TimeSheetModal input[name=StopDateTime]").val();
                var TimeSheetType = $("#TimeSheetType").val();
                var Paid = $("#Paid").prop("checked");
                var Note = $("#TimeSheetModal textarea").val();
                var fromDate = new Date(StartDate + " " + Get24time(StartDateTime)).Format("yyyy-MM-dd hh:mm:ss");
                var toDate = new Date(StopDate + " " + Get24time(StopDateTime)).Format("yyyy-MM-dd hh:mm:ss");
                //var fromDate = LocalToUtc(new Date(StartDate + " " + StartDateTime));
                //var toDate = LocalToUtc(new Date(StopDate + " " + StopDateTime));

                var par = {
                    "EmployeeId": EmployeeId,
                    "JobId": JobId,
                    "StartDate": fromDate,
                    "StopDate": toDate,
                    "TimeSheetType":TimeSheetType,
                    "Paid": Paid,
                    "Note": Note
                }
                var bootstrapValidator = $('#TimeSheet-Add').data('bootstrapValidator');
                bootstrapValidator.validate();
                if (bootstrapValidator.isValid()) {
                    $.post("/TimeSheet/AddTime", par, function (data) {
                        if (data.status == "success") {
                            //SuccessBox("Time been successfully added!");
                            location.reload();
                        } else {
                            ErrorBox(data.message);
                        }
                    })
                }

            }
        });

            // Add event listener for opening and closing details
        $('#datatable_tabletools tbody').on('click', 'td.details-control', function () {
            var table = $('#datatable_tabletools').DataTable();
            var tr = $(this).closest('tr');
            var row = table.row(tr);

            if (row.child.isShown()) {
                row.child.hide();
                tr.removeClass('shown');
            } else {
                var TimeId = $(tr).attr("data-sheetId");  
                $.post("/TimeSheet/rowDetail", { Id : TimeId }, function (data) {
                    row.child(formatSheet(data)).show();
                    tr.addClass('shown');
                    //PIE CHART
                    var pieData = [
                          {
                              value: data.RegulaWorkTime,
                              color: "rgba(230,155,3,0.9)",
                              highlight: "rgba(230,155,3,0.7)",
                              label: data.TimeType
                          },
                          {
                              value: data.OverTimeWorkTime,
                              color: "rgba(169, 3, 41, 0.9)",
                              highlight: "rgba(169, 3, 41, 0.7)",
                              label: "Overtime (minute)"
                          },
                          {
                               value: data.DoubleWorkTime,
                               color: "rgba(18, 55, 85, 0.9)",
                               highlight: "rgba(18, 53, 85, 0.7)",
                               label: "Doubletime (minute)"
                          }

                    ];
                    // render chart
                    var ctx = document.getElementById("pieChart").getContext("2d");
                    var myNewChart = new Chart(ctx).Pie(pieData, pieOptions);
                    // END PIE CHART
                });
            }
        });

    })
    </script>
}